<?xml version='1.0'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<section
	id="section-Mobicents_XML_Document_Management_Server">
	<title>Mobicents XML Document Management Server</title>
	<section
		id="section-Introduction_to_the_XDM_Server">
		<title>Introduction to the XDM Server</title>
		<para>The Mobicents XML Document Management Server (XDMS) is part of the Mobicents SIP Presence Service; it is the first free and open source implementation of an XML Document Management Server as defined in the <ulink
				url="Open Mobile Alliance (OMA) XML Document Management v1.1 specification"/>. This functional element of next-generation IP communication networks is responsible for handling the management of user XML documents stored on the network side, such as presence authorization rules, contact and group lists (also known as resource lists), static presence information, and much more.</para>
	</section>
	<section
		id="section-Configuring_Installing_and_Testing_the_XDM_Server">
		<title>Configuring, Installing and Testing the XDM Server</title>
		<formalpara
			id="fpara-XDM_Requirements">
			<title>Requirements</title>
			<para>The Mobicents XDM Server depends on the Mobicents JAIN SLEE server and the Mobicents SIP and HTTP Servlet resource adapters. Make sure that all of these requirements are deployed before deploying the XDM Server.</para>
		</formalpara>
		<important
			id="important-The_XDM_Server_is_Currently_Incompatible_with_Java_1.6">
			<title>The XDM Server is Currently Incompatible with Java 1.6</title>
			<para>Currently, the Mobicents XDM Server will not work with Java 1.6, although this will be fixed in the future. Therefore, if you are running the XDM Server, make sure that you are using Java 1.5.</para>
		</important>
		<formalpara>
			<title>Configuration</title>
			<para>The Mobicents XML Document Management Server can be customized in the following aspects before being built.</para>
		</formalpara>
		<variablelist
			id="varlist-Customizing_the_XDM_Server">
			<title>Customizing the XDM Server</title>
			<varlistentry>
				<term>XCAP Root</term>
				<listitem>
					<para>The Maven property <literal>xdm.server.xcap.root</literal>, in the <filename>pom.xml</filename> which is inside the Mobicents Presence Service root directory (in <filename>/trunk/servers/sip-presence</filename> to be exact) defines the relative path to root that is considered the XCAP Root for all XCAP URIs. This value must match the servlet name used in the Mobicents HTTP Servlet resource adapter. The default value is <replaceable>/mobicents</replaceable>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Dynamic User Provisioning</term>
				<listitem>
					<para>The Maven property <literal>dynamicUserProvisioning</literal> in the <filename>pom.xml</filename> inside the Mobicents Presence Service root directory (in <filename>/trunk/servers/sip-presence</filename> to be exact) defines whether the XDM Server should provision the user when a <literal>PUT</literal> request is being processed and the user is not installed for the request's application usage. The default value is true.</para>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>Note that you do not need to touch or configure anything in order to deploy the server.</para>
		
		<!--install-->
		<formalpara>
			<title>Installing the Mobicents XML Document Management Server</title>
			<para>How you install the XDM Server depends on whether you are using the Mobicents binary distribution, or running the source distribution.</para>
		</formalpara>
		<itemizedlist>
			<listitem>
				<formalpara>
					<title>Installing the XDM Server using the Mobicents Binary Distribution</title>
					<para>TBD: (Fix this with proper instructions): Using the binary release, you can install the XDM Server by doing an ant deploy on the <filename>servers/sip-presence/xdms</filename> directory.</para>
				</formalpara>
			</listitem>
			<listitem>
				<formalpara>
					<title>Installing the XDM Server after Building Mobicents from Source</title>
					<para>TBD: (Fix this with proper instructions): From the source code repository, you can install the XDM Server by doing a mvn install on the <filename>/trunk/servers/sip-presence/xdms</filename> directory.</para>
				</formalpara>
			</listitem>
		</itemizedlist>
		
		<!--uninstall-->
		<formalpara>
			<title>Uninstalling the Mobicents XML Document Management Server</title>
			<para>How you uninstall the XDM Server depends on whether you are using the Mobicents binary distribution, or running the source distribution.</para>
		</formalpara>
		<itemizedlist>
			<listitem>
				<formalpara>
					<title>Uninstalling the XDM Server using the Mobicents Binary Distribution</title>
					<para>TBD: (Fix this with proper instructions): Using the binary release, you can uninstall the XDM Server by doing an ant undeploy on the <filename>servers/sip-presence/xdms</filename> directory.</para>
				</formalpara>
			</listitem>
			<listitem>
				<formalpara>
					<title>Uninstalling the XDM Server after Building Mobicents from Source</title>
					<para>TBD: (Fix this with proper instructions): From the source code repository, you can uninstall the XDM Server by doing a mvn clean on the <filename>/trunk/servers/sip-presence/xdms</filename> directory.</para>
				</formalpara>
			</listitem>
		</itemizedlist>
		
		<formalpara>
			<title>Testing the Mobicents XDM Server</title>
			<para>TBD (Make sure this is correct): is recommended that you test the XDM Server after you deploy it. For instructions on how to test the XDM Server, read and follow the instructions in <filename>.../xdms/tests/README.txt</filename>. No tests should fail.</para>
		</formalpara>
	</section>
	<section
		id="section-Functional_Architecture_of_the_XDM_Server">
		<title>Functional Architecture of the XDM Soerver</title>
		<para>The Mobicents XDM Server includes the following XCAP application usages:</para>
		<itemizedlist>
			<listitem>
				<para>
					<ulink
						url="http://tools.ietf.org/html/rfc5025">IETF Presence Rules (RFC 5025)</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					<ulink
						url="http://www.openmobilealliance.org/Technical/release_program/Presence_simple_v1_1.aspx">OMA Presence Rules (OMA Presence Simple v1.1 Candidate Release)</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					<ulink
						url="http://tools.ietf.org/html/rfc4826">IETF Resource Lists</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					<ulink
						url="http://tools.ietf.org/html/rfc4826">IETF RLS Services (RFC 4826)</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					<ulink
						url="http://tools.ietf.org/html/rfc4825">IETF XCAP-CAPS (RFC 4825)</ulink>
				</para>
			</listitem>
		</itemizedlist>
		<figure
			id="figure-sas-orig-dia-XDM_Functional_Architecture.jpg">
			<title>The Mobicents XML Document Management Server</title>
			<mediaobject
				id="mediaobj-sas-orig-dia-XDM_Functional_Architecture.jpg">
				<imageobject>
					<imagedata
						align="center"
						width="700"
						fileref="images/sas-orig-dia-XDM_Functional_Architecture.jpg"
						format="JPG" />
				</imageobject>
				<caption>
					<para>Functional Architecture of the XML Document Management Server</para>
				</caption>
			</mediaobject>
		</figure>
		<para>The XDM Server comprises the following functional elements:</para>
		<variablelist
			id="varlist-Functional_Elements_of_the_XDM_Server">
			<title>Functional Elements of the XDM Server</title>
			<varlistentry>
				<term>Data Source</term>
				<listitem>
					<para>The XDM Server data source is where all user XML documents are stored. Information related to the server itself is also stored in this element along with the user's provisioned data</para>
					<para>The data source also handles subscriptions to updates on specific documents, or complete XCAP application usages.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Aggregation Proxy</term>
				<listitem>
					<para>The aggregation proxy is responsible for handling an XDM client's XCAP requests, which includes authentication and authorization of the requester.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Request Processor</term>
				<listitem>
					<para>This element includes the XCAP Server logic to process an XCAP request and return a proper response.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>XDM Event Subscription Control</term>
				<listitem>
					<para>This element, using the SIP protocol, is responsible for handling subscriptions to documents managed by the XDM. Its functions include the authentication and authorization of a subscription, attachment to update events on specific documents or application usages, and the sending of notifications when documents change.</para>
				</listitem>
			</varlistentry>
		</variablelist>
		<formalpara>
			<title>Implementation Architecture of the Mobicents XML Document Management Server</title>
			<para>The XDM Server is built on top of the Mobicents JAIN SLEE container. This figure depicts the architecture of the XDM Server implementation.</para>
		</formalpara>
		<figure
			id="figure-sas-orig-dia-XDMS_Implementation.jpg">
			<title>Mobicents XML Document Management Server</title>
			<mediaobject
				id="mediaobj-sas-orig-dia-XDMS_Implementation.jpg">
				<imageobject>
					<imagedata
						align="center"
						width="700"
						fileref="images/sas-orig-dia-XDMS_Implementation.jpg"
						format="JPG" />
				</imageobject>
				<caption>
					<para>Implementation Architecture of the XML Document Management Server</para>
				</caption>
			</mediaobject>
		</figure>
		<variablelist
			id="varlist-The_Functional_Elements_Which_Compose_the_XML_Document_Management_Server">
			<title>The Functional Elements Which Compose the XML Document Management Server</title>
			<varlistentry>
				<term>Data Source Resource Adapter</term>
				<listitem>
					<para>This Resource Adaptor implements the Data Source functional element.</para>
					<para>The <literal>RA Type</literal> defines two activities objects, <literal>DocumentActivity</literal> and <literal>AppUsageActivity</literal>, both of which are used to fire events that signal that a document, element or attribute was updated.</para>
					<para>The <literal>RA Type</literal> also defines a Service Building Block (SBB) RA interface to manage the users and documents stored in the XDM Server, and create activities, where events will be fired. The resource adapter will only fire events on activities that exist; that is, the RA won't create activities implicitly if a document is updated.</para>
					<para>The <literal>RA Type</literal> also provides a base abstract implementation of the resource adapter, making it very simple to change the underlying resource used to store information, which is by default the internal JDBC datasource of the JBoss Application Server.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>AppUsage Cache Resource Adaptor</term>
				<listitem>
					<para>This resource adapter stores the XCAP application usages installed in the server.</para>
					<para>Each <literal>AppUsage</literal> is an object that includes the logic to validate XCAP documents that result from XCAP requests and are expensive to create; this resource adapter  thus provides caching of AppUsages, using a pool model.</para>
					<para>The resource adapter doesn't possess events or activities.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>AppUsage Service</term>
				<listitem>
					<para>XCAP Application Usages are installed through a  JAIN SLEE service, making it possible to add and/or remove application usages while the server is running.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Aggregation Proxy Service</term>
				<listitem>
					<para>This JAIN SLEE service implements the aggregation proxy functional element. It handles events fired by the Mobicents HTTP Servlet resource adapter and then uses two child SBBs: the <literal>User Profile Enabler SBB</literal> to retrieve information regarding the user needed for authentication/authorization of the XCAP request, and the <literal>Request Processor SBB</literal>, which handles the XCAP request.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Request Processor SBB</term>
				<listitem>
					<para>The <literal>Request Processor SBB</literal> implements the request processor functional element, providing a synchronous SBB interface to process XCAP requests. It uses the <literal>AppUsage Cache</literal> resource adapter to borrow AppUsage objects, and the Data Source resource adapter to retrieve or set documents stored in the server's data source.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>User Profile Enabler SBB (TBD: not available yet)</term>
				<listitem>
					<para>This SBB provides a synchronous SBB interface used in JAIN SLEE child relations in order to retrieve user information. Two different implementations of the interface are provided, one considers that the information is stored in the XDM Data Source, another interfaces to a Diameter Sh Server such as IMS HSS.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>XCAP Diff Subscription Control Service (TBD: not available yet)</term>
				<listitem>
					<para>TBD</para>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>The implementation architecture figure also contains client-side components:</para>
		<variablelist
			id="varlist-Client-Side_Components_of_the_XML_Document_Management_Server_">
			<title>Client-Side Components of the XML Document Management Server </title>
			<varlistentry>
				<term>XCAP Client</term>
				<listitem>
					<para>The XCAP client is a simple API to interact with an XCAP Server that internally uses the Apache HTTP Client.</para>
					<para>The API documentation and example code snippets can be found TBD</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>XCAP Client Resource Adaptor</term>
				<listitem>
					<para>The XCAP Client Resource Adaptor adapts the XCAP Client API into JAIN SLEE domain. It provides methods to interact with the XCAP server in both syncronous and asyncronous ways.</para>
					<para>The RA Type description and code snippets using the RA can be found here.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>XDM Client SBB</term>
				<listitem>
					<para>The XDMClientSBB is an interface of a JAIN SLEE SBB to be used as a client to the Mobicents XDM Server (and others compliant with same standards), in JAIN SLEE child relations.</para>
					<para>Two implementations of this interface are provided:</para>
					<itemizedlist>
						<listitem>
							<para>
								<literal>InternalXDMClientSBB</literal> is intended to be used on applications running in the Mobicents XDM Server JAIN SLEE container, and</para>
						</listitem>
						<listitem>
							<para>
								<literal>ExternalXDMClientSBB</literal>, which is intended to be used on applications running in a different JAIN SLEE container than the Mobicents XDM Server.</para>
						</listitem>
					</itemizedlist>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>TBD: This version of the documentation is from http://groups.google.com/group/mobicents-public/web/mobicents-xdm-server and the original author is Eduardo Martins, JBoss R&amp;D.</para>
	</section>
	<section
		id="section-Resources_and_Further_Information_about_the_XDM_Server">
		<title>Resources and Further Information about the XDM Server</title>
		<para>For further information on the Mobicents XDM Server, here is a list of additional resources:</para>
		<itemizedlist
			id="itemlist-Further_Information_on_the_Mobicents_XDM_Server">
			<listitem>
				<para>How to Manage the Mobicents XDM Server</para>
			</listitem>
			<listitem>
				<para>How to Create an XCAP App(lication)Usage</para>
			</listitem>
			<listitem>
				<para>Integrating XDM in your JAIN SLEE Apps: Code Snippets for XDM Client SBB Usage</para>
			</listitem>
			<listitem>
				<para>
					<ulink
						url="http://groups.google.com/group/mobicents-public/web/xcap-client-api">XCAP Client API Documentation</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					<ulink
						url="http://groups.google.com/group/mobicents-public/web/xcap-client-resource-adaptor">XCAP Client RA Type Description and Example Code Snippets</ulink>
				</para>
			</listitem>
			<listitem>
				<para>Mobicents SIP Presence Service</para>
			</listitem>
			<listitem>
				<para>Want to contribute?</para>
			</listitem>
		</itemizedlist>
	</section>
</section>
