<!--
   The Mobicents build script

   Authors: Emil Ivov, Ranga, Ivelin -->
<project basedir="." default="all-tests" name="mobicents.jpx">

	<property name="mobicents.home" value="${ant.file.mobicents.jpx}/.." />
	<import file="../ant-scripts/mobicents-ant-common-properties.xml"/>

	<!-- Use the -Doption=optval on the ant command line for these. -->
	<property name="cachemode" value="local" description="Controls the cache mode. Values are typically local or cluster" />
	<property name="debug" value="normal" description="Controls the debug level. Values are typically debug or normal" />
	<property name="deploydir" value="deploy" />
	<!-- Node is the configuration. cachemode is either local or cluster -->
	<!-- debug controls the logging. set it at either debug or normal -->
	<!-- deploydir controls where you deploy it. Either ha-singleton or deploy -->
	<dirname property="project.home.dir" file="${mobicents}" />
	<property name="dest" value="classes" />
	<property name="build" value="./build" />
	<property name="junit.reports" value="junit-reports" />
	<property name="libs.home" value="lib" />
	<property name="slee.tck.home" value="jain-slee-1.0-tck" />
	<property name="classpath.prefix" value="org.mobicents" />
	<property name="dirpath.prefix" value="org/mobicents" />

	<!-- Deploy files can go to a separate deploy node as needed to support -->
	<!-- jboss running on a different host -->

	<property name="deploy.home" value="${jboss.home}" />

	<property name="deployables" value="./deployable-unit" />

	<property name="mobicents.sar" value="${jboss.deploy}/mobicents.sar" />

	<property name="jboss.server.dir" value="${deploy.home}/server" />

	<property name="jboss.tmp.deploy.dir" value="${jboss.deploy}/../tmp/deploy" />

	<property name="jboss.conf.dir" value="${jboss.deploy}/../conf" />

	<property name="jboss.readme.dir" value="${deploy.home}" />

	<property name="jboss.bin.dir" value="${deploy.home}/bin" />

	<property name="jboss.licenses.dir" value="${deploy.home}/docs/licenses" />


	<!-- ANT HOME FOR LIBS -->
	<property name="ant.home" value="${system.ANT_HOME}" />
	<!-- by default the test pattern covers all tests -->
	<property name="tests" value="tests" />
	<property name="slee-tck-tests-pattern" value="${tests}" />

	<property name="src" value="src" />
	<property file="${node}.port.properties" />

	<path id="project.class.path">

		<fileset dir="${jboss.home}/server/${node}/deploy/mobicents.sar/lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="../../rar/target">
			<include name="*.jar" />
		</fileset>
		<fileset dir="../../ejb3-proxy/target">
			<include name="*.jar" />
		</fileset>
		<pathelement location="${libs.home}/ant-junit.jar" />
		<pathelement location="${asteriskra}/lib/asterisk-java.jar" />
		<pathelement location="${libs.home}/commons-collections-3.1.jar" />
		<pathelement location="${libs.home}/commons-collections-testframework-3.1.jar" />
		<pathelement location="${jboss.home}/client/commons-logging.jar" />
		<pathelement location="${libs.home}/commons-pool-1.2.jar" />
		<pathelement location="${libs.home}/commons-jxpath-1.1.jar" />
		<pathelement location="${jboss.home}/client/concurrent.jar" />
		<pathelement location="${libs.home}/dom4j.jar" />
		<pathelement location="${libs.home}/dtd" />
		<pathelement location="${jboss.home}/server/${node}/lib/ejb3-persistence.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/hibernate3.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/hibernate-annotations.jar" />
		<pathelement location="${jboss.home}/client/javassist.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/jboss.jar" />
		<pathelement location="${jboss.home}/server/${node}/deploy/ejb3.deployer/jboss-annotations-ejb3.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/jboss-aop.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/jboss-serialization.jar" />
		<pathelement location="${jboss.home}/client/jbossall-client.jar" />
		<pathelement location="${jboss.home}/client/jboss-aop-jdk50-client.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/jboss-cache-jdk50.jar" />
		<pathelement location="${jboss.home}/client/jbossx-client.jar" />
		<pathelement location="${jboss.home}/lib/jboss-common.jar" />
		<pathelement location="${jboss.home}/server/${node}/deploy/ejb3.deployer/jboss-ejb3.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/jboss-ejb3x.jar" />
		<pathelement location="${jboss.home}/client/jboss-j2ee.jar" />
		<pathelement location="${jboss.home}/lib/jboss-jmx.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/jboss-remoting.jar" />
		<pathelement location="${jboss.home}/lib/jboss-system.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/jboss-transaction.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/jbossha.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/jgroups.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/jmx-adaptor-plugin.jar" />
		<pathelement location="${jboss.home}/client/jnp-client.jar" />
		<pathelement location="${jboss.home}/server/${node}/lib/jnpserver.jar" />
		<pathelement location="${libs.home}/jta.jar" />
		<pathelement location="${libs.home}/junit.jar" />
		<pathelement location="${jboss.home}/client/log4j.jar" />
		<pathelement location="${libs.home}/sipunit.jar" />
		<pathelement location="${libs.home}/slee_1_1.jar" />
		<pathelement location="${slee.tck.home}/jars/sleetck.jar" />
		<pathelement location="${slee.tck.home}/jars/sleetck-ra-common.jar" />

	</path>

	<path id="run.class.path">
		<!-- Stuff necessary to launch jboss -->
		<pathelement location="${jboss.home}/bin/run.jar" />
		<pathelement location="${java.home}/lib/tools.jar" />
		<!-- pathelement location="${mobicents.home}/classes"/ -->
	</path>

	<!-- SLEE EJBPROXY TO SLEECONNECTION -->
	<property name="ejb" value="SleeConnectionProxy" />




	<!-- Make the ejb-jar files needed for the ejb-ref and jca-connector tests -->
	<target name="deploy-ejb-jars">

		<echo>dirpath is ${dirpath.prefix}</echo>

		<!-- Build the ejb-jar for the ejb-ref test -->
		<delete failonerror="false" includeemptydirs="true">
			<fileset file="${build}/ejbref-test-ejb.jar" />
			<fileset file="${build}/connector-test-ejb.jar" />
		</delete>
		<mkdir dir="${build}" />

		<jar destfile="${build}/ejbref-test-ejb.jar">
			<metainf file="${src}/${dirpath.prefix}/slee/test/env/ejbref/ejb/META-INF/ejb-jar.xml" />
			<metainf file="${src}/${dirpath.prefix}/slee/test/env/ejbref/ejb/META-INF/jboss.xml" />
			<fileset dir="${dest}">
				<include name="${dirpath.prefix}/slee/test/env/ejbref/ejb/**/*.class" />
			</fileset>
		</jar>
		<copy todir="${jboss.deploy}" file="${build}/ejbref-test-ejb.jar" />

		<!-- Build the ejb-jar for the jca connector test -->
		<jar destfile="${build}/connector-test-ejb.jar">
			<metainf file="${src}/${dirpath.prefix}/slee/test/connector/ejb/META-INF/ejb-jar.xml" />
			<metainf file="${src}/${dirpath.prefix}/slee/test/connector/ejb/META-INF/jboss.xml" />
			<fileset dir="${dest}">
				<include name="${dirpath.prefix}/slee/test/connector/ejb/ConnectorTestHome.class" />
				<include name="${dirpath.prefix}/slee/test/connector/ejb/**/*.class" />
				<include name="${dirpath.prefix}/slee/test/connector/TestEvent.class" />
			</fileset>
		</jar>
		<copy todir="${jboss.deploy}" file="${build}/connector-test-ejb.jar" />



		<!-- delete failonerror="false" includeemptydirs="true">
            <fileset dir="${build}"/>
        </delete -->
	</target>

	<target name="build-test-connector-du">
		<!-- Build the test event jar -->
		<jar destfile="${build}/connector-test-event.jar">
			<metainf file="${src}/${dirpath.prefix}/slee/test/connector/META-INF/event-jar.xml" />
			<fileset dir="${dest}">
				<include name="${dirpath.prefix}/slee/test/connector/TestEvent.class" />
			</fileset>

		</jar>
		<jar destfile="${build}/connector-test-event-du.jar">
			<metainf file="${src}/${dirpath.prefix}/slee/test/connector/META-INF/deployable-unit.xml" />
			<fileset dir="${build}">
				<include name="connector-test-event.jar" />
			</fileset>
		</jar>
	</target>


	<target name="build-test-sleebeanshellutil-du">

		<!-- Build the test event jar -->
		<jar destfile="${build}/slee-bean-shell-util-test-sbb.jar">
			<metainf file="${src}/${dirpath.prefix}/slee/container/management/jmx/test/META-INF/sbb-jar.xml" />
			<fileset dir="${dest}">
				<include name="${dirpath.prefix}/slee/container/management/jmx/test/SleeBeanShellUtilSbb.class" />
			</fileset>
		</jar>
		<jar destfile="${build}/slee-bean-shell-util-test-du.jar">
			<metainf file="${src}/${dirpath.prefix}/slee/container/management/jmx/test/META-INF/deployable-unit.xml" />
			<fileset dir="${build}">
				<include name="slee-bean-shell-util-test-sbb.jar" />
			</fileset>
			<fileset dir="${src}/${dirpath.prefix}/slee/container/management/jmx/test/META-INF">
				<include name="SleeBeanShellUtilTest-service.xml" />
			</fileset>
		</jar>
	</target>


	<!-- Build the test event jar -->
	<!-- Run one junit test without starting the container -->
	<!--target name="test-connector" depends="junit-init,init-common" description="Runs ejb-connector test">

		<slee-management>
			<install url="${file_url}${mobicents.home.standard}/build/connector-test-event-du.jar" />
		</slee-management>

		<junit fork="yes" showoutput="true">
			<formatter type="xml" />
			<classpath refid="project.class.path" />
			<test name="org.mobicents.slee.test.connector.ConnectorTest" todir="${junit.reports}" />
		</junit>
	</target-->

	<!-- running jmx remote client standalone	-->
	<!--target name="jmx" depends="compile">
		<java fork="true" classpathref="project.class.path" classname="${classpath.prefix}.slee.test.ConnectorClient" />
	</target-->


	<target name="init" description="Creates target directories (e.g. ${dest}, ${junit.reports} ...)">
		<fail>
	          JBOSS_HOME environment variable is not set. It should be set to something like C:\tools\jboss-3.2.8.SP1 on Windows or /var/jboss-3.2.8.SP1 on linux/unix.
	          <condition>
				<not>
					<isset property="system.JBOSS_HOME" />
				</not>
			</condition>
		</fail>

		<!-- Assuming that config will always be either default or all commenting below line -->
		<!-- <antcall target="copy-jboss-config" /> -->
		<mkdir dir="${dest}" />
	</target>


	<target name="javacompile" depends="init" description="Java compiles all java source files.">
		<javac classpathref="project.class.path" debug="true" deprecation="false" destdir="${dest}" nowarn="true" target="1.5" source="1.5">
			<src path="${src}" />
		</javac>
	</target>

	<target name="all-tests" depends="javacompile" description="Runs all tests including TCK and custom tests">

		<subant target="" inheritall="yes" failonerror="yes">
			<property name="build.dir" value="tests" />
			<fileset dir="tests" includes="build.xml" />
		</subant>
		<copy todir="${slee.tck.home}/testsuite/tests">
			<fileset dir="tests/src" includes="**/*Test.xml" />
		</copy>
		<copy todir="${slee.tck.home}/jars/deployable-units">
			<fileset dir="tests/jars/deployable-units" includes="**/*" />
		</copy>
		<antcall target="tests-slee-tck" />
	</target>

	<target name="tests-slee-tck" depends="init-common" description="Invoke this target with a file pattern for TCK test. For example -Dtests=tests/sbb or -Dtests=tests/sbb/abstractclass/Test522Test">
		<!-- If all tests pass the result of the Java process is 0 otherwise != 0. This is useful for cruisecontrol integrations -->
		<!-- To debug TCK tests from Eclipse, run the class below with the specified command line and test pattern -->
		<path id="slee.tck.du.path.id">
			<pathelement location="${slee.tck.home}/jars/deployable-units" />
		</path>
		<path id="slee.tck.testsuite.path.id">
			<pathelement location="${slee.tck.home}/testsuite" />
		</path>
		<path id="slee.tck.reports.path.id">
			<pathelement location="${slee.tck.home}/reports" />
		</path>
		<path id="slee.tck.jtx.file.id">
			<pathelement location="${slee.tck.home}/testsuite/jain-slee-tck-1_0.jtx" />
		</path>
		<property name="classes.sleetests" value="" />
		<path id="slee.tests.classes.id">
			<pathelement location="tests/classes/sleetests" />
		</path>
		<path id="slee.tests.aux.libs.id">
			<pathelement location="" />
			<pathelement location="${jboss.home}/client/jboss-aop-jdk50-client.jar" />
			<pathelement location="${jboss.home}/client/jboss-aspect-jdk50-client.jar" />
			<pathelement location="${jboss.home}/client/jbossall-client.jar" />
		</path>
		<antcall target="tests-slee-tck-internal" inheritrefs="yes">
			<reference refid="slee.tck.du.path.id" />
			<reference refid="slee.tck.reports.path.id" />
			<reference refid="slee.tck.testsuite.path.id" />
			<reference refid="slee.tck.jtx.file.id" />
			<reference refid="slee.tests.classes.id" />
			<reference refid="slee.tests.aux.libs.id" />
		</antcall>
	</target>


	<target name="tests-slee-tck-internal">


		<pathconvert targetos="unix" property="slee.tck.du.path" refid="slee.tck.du.path.id" />
		<pathconvert targetos="unix" property="slee.tck.testsuite.path" refid="slee.tck.testsuite.path.id" />
		<pathconvert targetos="unix" property="slee.tck.reports.path" refid="slee.tck.reports.path.id" />
		<pathconvert targetos="unix" property="slee.tck.jtx.file" refid="slee.tck.jtx.file.id" />
		<pathconvert targetos="unix" property="slee.tests.classes" refid="slee.tests.classes.id" />
		<pathconvert targetos="unix" property="slee.tests.aux.libs" refid="slee.tests.aux.libs.id" />
		<echo>slee.tck.testsuite.path=${slee.tck.testsuite.path}</echo>
		<echo>slee.tests.aux.libs=${slee.tests.aux.libs}</echo>
		<property name="tck.params" value=" -batch 'testsuite ${slee.tck.testsuite.path};workDirectory -create -overwrite ${slee.tck.home}/tckwork;open ${slee.tck.home}/slee-tck-mobicents.jti;set sleetck.env.connections.tckResourceHostIP 127.0.0.1;set sleetck.env.connections.jmxAgentHostIP 127.0.0.1;set sleetck.tests.needTests Yes; set sleetck.env.connections.componentUrlPrefix file\:${slee.tck.du.path};set sleetck.env.user-options.defaultTimeout 25000; concurrency 1;tests ${slee-tck-tests-pattern}; runtests;writereport ${slee.tck.reports.path};' " />
		<echo>Starting TCK with params: ${tck.params}</echo>
		<echo>Excluding tests listed in file: ${slee.tck.jtx.file}</echo>
		<property name="mobicents.home.path" location="${mobicents.home}"/>
		<java classname="com.sun.javatest.tool.Main" fork="yes" maxmemory="256m">
			<sysproperty key="java.security.manager" value="" />
			<sysproperty key="javatest.security.allowPropertiesAccess" value="true" />
			<sysproperty key="java.security.policy" value="${slee.tck.home}/config/tck-security.policy" />
			<sysproperty key="org.xml.sax.driver" value="org.apache.xerces.parsers.SAXParser" />
			<sysproperty key="MOBICENTS_HOME" value="${mobicents.home.path}" />
			<jvmarg line="-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,address=8484,server=y,suspend=n" />
			<arg line="${tck.params}" />
			<classpath refid="project.class.path" />
			<classpath>
				<pathelement location="${slee.tests.classes}" />
				<pathelement location="${slee.tck.home}/jars/sleetck.jar" />
				<pathelement location="${slee.tck.home}/lib/javatest.jar" />
				<pathelement location="${slee.tck.home}/lib/xerces.jar" />
				<pathelement location="${slee.tck.home}/lib/sigtest.jar" />
				<pathelement location="${ant.home}/lib/ant.jar" />
				<pathelement location="${ant.home}/lib/ant-launcher.jar" />
				<pathelement path="${slee.tests.aux.libs}" />
			</classpath>
		</java>
		<echo>SLEE TCK report available at ${slee.tck.reports.path}/report.html</echo>

	</target>

	<target name="clean" depends="">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${dest}" />
			<fileset dir="${junit.reports}" />
		</delete>

		<!-- Now lets clean release,ras, tools,tests,...  : add more here if something comes up  -->

		<ant target="clean" dir="./tests" inheritAll="false"/>

	</target>

</project>
