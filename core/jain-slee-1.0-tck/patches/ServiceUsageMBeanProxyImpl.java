package com.opencloud.sleetck.lib.testutils.jmx.impl;

import javax.management.InstanceNotFoundException;
import javax.management.MBeanException;
import javax.management.ObjectName;
import javax.management.ReflectionException;
import javax.management.RuntimeMBeanException;
import javax.slee.InvalidArgumentException;
import javax.slee.SbbID;
import javax.slee.ServiceID;
import javax.slee.UnrecognizedSbbException;
import javax.slee.management.ManagementException;
import javax.slee.management.UsageParameterSetNameAlreadyExistsException;
import javax.slee.usage.UnrecognizedUsageParameterSetNameException;

import com.opencloud.sleetck.lib.TCKTestErrorException;
import com.opencloud.sleetck.lib.infra.jmx.NotificationBroadcasterProxyImpl;
import com.opencloud.sleetck.lib.testutils.jmx.MBeanFacade;
import com.opencloud.sleetck.lib.testutils.jmx.ServiceUsageMBeanProxy;

/**
 * Defines a proxy implementation for javax.slee.management.ServiceUsageMBean
 *
 * In addition to the Exceptions declared by each proxied method, 
 * each proxy method can throw a TCKTestErrorException - for commication failures, 
 * and to wrap InstanceNotFoundExceptions and ReflectionExceptions generated by the 
 * MBeanServer.invoke() method, and unchecked Exceptions other than RuntimeExceptions. 
 * RuntimeExceptions generated by the MBean are rethrown by the proxy.
 * 
 * This class was generated by the ProxyGenerator tool - Tue Jan 20 14:34:10 NZDT 2004
 * Command line args: -n -a javax.slee.management.ServiceUsageMBean 
 */
public class ServiceUsageMBeanProxyImpl extends NotificationBroadcasterProxyImpl implements ServiceUsageMBeanProxy {

   public ServiceUsageMBeanProxyImpl(ObjectName objName, MBeanFacade facade) {
      super(objName,facade);
      this.objName = objName;
      this.facade = facade;
   }

   public ObjectName getSbbUsageMBean(SbbID p0) throws NullPointerException, UnrecognizedSbbException, InvalidArgumentException, ManagementException, TCKTestErrorException { 
      try {
         return (ObjectName)facade.invoke(objName,"getSbbUsageMBean",new Object[]{p0},new String[]{"javax.slee.SbbID"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedSbbException) throw (UnrecognizedSbbException)enclosed;
         if(enclosed instanceof InvalidArgumentException) throw (InvalidArgumentException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
      } catch(RuntimeMBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
      }
   }

   public void close() throws ManagementException, TCKTestErrorException { 
      try {
         facade.invoke(objName,"close",EmptyArrays.EMPTY_OBJECT_ARRAY,EmptyArrays.EMPTY_STRING_ARRAY);
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
      } catch(RuntimeMBeanException e) {
          Exception enclosed = e.getTargetException();
          if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
          throw new TCKTestErrorException("Caught undeclared exception",enclosed);
       }
   }

   public ServiceID getService() throws ManagementException, TCKTestErrorException { 
      try {
         return (ServiceID)facade.invoke(objName,"getService",EmptyArrays.EMPTY_OBJECT_ARRAY,EmptyArrays.EMPTY_STRING_ARRAY);
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
      } catch(RuntimeMBeanException e) {
          Exception enclosed = e.getTargetException();
          if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
          throw new TCKTestErrorException("Caught undeclared exception",enclosed);
       }
   }

   public void removeUsageParameterSet(SbbID p0, String p1) throws NullPointerException, UnrecognizedSbbException, InvalidArgumentException, UnrecognizedUsageParameterSetNameException, ManagementException, TCKTestErrorException { 
      try {
         facade.invoke(objName,"removeUsageParameterSet",new Object[]{p0,p1},new String[]{"javax.slee.SbbID","java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedSbbException) throw (UnrecognizedSbbException)enclosed;
         if(enclosed instanceof InvalidArgumentException) throw (InvalidArgumentException)enclosed;
         if(enclosed instanceof UnrecognizedUsageParameterSetNameException) throw (UnrecognizedUsageParameterSetNameException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
      } catch(RuntimeMBeanException e) {
          Exception enclosed = e.getTargetException();
          if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
          throw new TCKTestErrorException("Caught undeclared exception",enclosed);
       }
   }

   public void createUsageParameterSet(SbbID p0, String p1) throws NullPointerException, UnrecognizedSbbException, InvalidArgumentException, UsageParameterSetNameAlreadyExistsException, ManagementException, TCKTestErrorException { 
      try {
         facade.invoke(objName,"createUsageParameterSet",new Object[]{p0,p1},new String[]{"javax.slee.SbbID","java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedSbbException) throw (UnrecognizedSbbException)enclosed;
         if(enclosed instanceof InvalidArgumentException) throw (InvalidArgumentException)enclosed;
         if(enclosed instanceof UsageParameterSetNameAlreadyExistsException) throw (UsageParameterSetNameAlreadyExistsException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
      } catch(RuntimeMBeanException e) {
          Exception enclosed = e.getTargetException();
          if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
          throw new TCKTestErrorException("Caught undeclared exception",enclosed);
       }
   }

   public ObjectName getSbbUsageMBean(SbbID p0, String p1) throws NullPointerException, UnrecognizedSbbException, InvalidArgumentException, UnrecognizedUsageParameterSetNameException, ManagementException, TCKTestErrorException { 
      try {
         return (ObjectName)facade.invoke(objName,"getSbbUsageMBean",new Object[]{p0,p1},new String[]{"javax.slee.SbbID","java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedSbbException) throw (UnrecognizedSbbException)enclosed;
         if(enclosed instanceof InvalidArgumentException) throw (InvalidArgumentException)enclosed;
         if(enclosed instanceof UnrecognizedUsageParameterSetNameException) throw (UnrecognizedUsageParameterSetNameException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
      } catch(RuntimeMBeanException e) {
          Exception enclosed = e.getTargetException();
          if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
          throw new TCKTestErrorException("Caught undeclared exception",enclosed);
       }
   }

   public String[] getUsageParameterSets(SbbID p0) throws NullPointerException, UnrecognizedSbbException, InvalidArgumentException, ManagementException, TCKTestErrorException { 
      try {
         return (String[])facade.invoke(objName,"getUsageParameterSets",new Object[]{p0},new String[]{"javax.slee.SbbID"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedSbbException) throw (UnrecognizedSbbException)enclosed;
         if(enclosed instanceof InvalidArgumentException) throw (InvalidArgumentException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
      } catch(RuntimeMBeanException e) {
          Exception enclosed = e.getTargetException();
          if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
          throw new TCKTestErrorException("Caught undeclared exception",enclosed);
       }
   }

   public void resetAllUsageParameters(SbbID p0) throws NullPointerException, UnrecognizedSbbException, InvalidArgumentException, ManagementException, TCKTestErrorException { 
      try {
         facade.invoke(objName,"resetAllUsageParameters",new Object[]{p0},new String[]{"javax.slee.SbbID"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedSbbException) throw (UnrecognizedSbbException)enclosed;
         if(enclosed instanceof InvalidArgumentException) throw (InvalidArgumentException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
      } catch(RuntimeMBeanException e) {
          Exception enclosed = e.getTargetException();
          if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
          throw new TCKTestErrorException("Caught undeclared exception",enclosed);
       }
   }

   public void resetAllUsageParameters() throws ManagementException, TCKTestErrorException { 
      try {
         facade.invoke(objName,"resetAllUsageParameters",EmptyArrays.EMPTY_OBJECT_ARRAY,EmptyArrays.EMPTY_STRING_ARRAY);
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
      } catch(RuntimeMBeanException e) {
          Exception enclosed = e.getTargetException();
          if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
          throw new TCKTestErrorException("Caught undeclared exception",enclosed);
       }
   }

   private ObjectName objName;
   private MBeanFacade facade;

}
