<?xml version="1.0" encoding="UTF-8"?>

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  Sample TreeCache Service Configuration                               -->
<!--                                                                       -->
<!-- ===================================================================== -->

<server>

    <classpath codebase="./lib" archives="jboss-cache.jar, jgroups.jar"/>


    <!-- ============================================================== -->
    <!-- Defines ProfileTreeCache configuration                         -->
    <!-- for now this is in-memory for ease of debugging 		-->
    <!-- ============================================================== -->

    <mbean code="org.jboss.cache.TreeCache"
        name="jboss.cache:service=ProfileTreeCache">
        <depends>jboss:service=Naming</depends>
        <depends>jboss:service=TransactionManager</depends>
        <depends>jboss.jca:name=DefaultDS,service=LocalTxCM</depends>

        <!--
        Configure the TransactionManager
    -->
        <attribute name="TransactionManagerLookupClass">org.jboss.cache.JBossTransactionManagerLookup</attribute> 
        <!--
            Isolation level : SERIALIZABLE
                              REPEATABLE_READ (default)
                              READ_COMMITTED
                              READ_UNCOMMITTED
                              NONE
        -->
        <attribute name="IsolationLevel">REPEATABLE_READ</attribute>

        <!--
             Valid modes are LOCAL, REPL_ASYNC and REPL_SYNC
        -->
        <attribute name="CacheMode">REPL_SYNC</attribute>
        <attribute name="ClusterName">Mobicents-Cluster</attribute>

        <!--
        Just used for async repl: use a replication queue
        -->
        <attribute name="UseReplQueue">false</attribute>

        <!--
            Replication interval for replication queue (in ms)
        -->
        <attribute name="ReplQueueInterval">0</attribute>

        <!--
            Max number of elements which trigger replication
        -->

        <attribute name="ReplQueueMaxElements">0</attribute>


        <!--
       -->
        <attribute name="ClusterConfig">
			<config>
        		<TCP start_port="17910" bind_addr="${jboss.bind.address}"/>
                <TCPPING initial_hosts="${jboss.bind.address}[17910]" port_range="5" timeout="3000" num_initial_members="1" up_thread="true" down_thread="true"/>
                <FD shun="true" up_thread="true" down_thread="true" timeout="2500" max_tries="5" />
                <VERIFY_SUSPECT timeout="1500" up_thread="false" down_thread="false" />
                <pbcast.NAKACK gc_lag="100" retransmit_timeout="3000" up_thread="true" down_thread="true" />
                <pbcast.STABLE desired_avg_gossip="20000" up_thread="false" down_thread="false" />
                <pbcast.GMS join_timeout="5000" join_retry_timeout="2000" shun="false" print_local_addr="false" down_thread="true" up_thread="true" />
                <pbcast.STATE_TRANSFER up_thread="true" down_thread="true"/>
            </config>
        </attribute>
	
        <!--
        Whether or not to fetch state on joining a cluster
       -->

        <attribute name="FetchStateOnStartup">true</attribute>

        <!--
            The max amount of time (in milliseconds) we wait until the
            initial state (ie. the contents of the cache) are retrieved from
            existing members in a clustered environment
        -->
        <attribute name="InitialStateRetrievalTimeout">5000</attribute>

        <!--
            Number of milliseconds to wait until all responses for a
            synchronous call have been received.
        -->
        <attribute name="SyncReplTimeout">10000</attribute>

        <!-- Max number of milliseconds to wait for a lock acquisition -->
        <attribute name="LockAcquisitionTimeout">15000</attribute>


        <!-- Name of the eviction policy class. Not supported now. -->
        <attribute name="EvictionPolicyClass"></attribute>

<!--
		<attribute name="CacheLoaderClass">org.jboss.cache.loader.JDBCCacheLoader</attribute>
		<attribute name="CacheLoaderShared">true</attribute>
		<attribute name="CacheLoaderPreload">/</attribute>
		<attribute name="CacheLoaderFetchTransientState">false</attribute>
		<attribute name="CacheLoaderFetchPersistentState">true</attribute>
		<attribute name="CacheLoaderConfig">
			cache.jdbc.table.name=PersistentTreeCache
			cache.jdbc.table.create=true
			cache.jdbc.table.drop=false
			cache.jdbc.fqn.column=fqn
			cache.jdbc.fqn.type=varchar(255)
			cache.jdbc.node.column=node
			cache.jdbc.node.type=LONGVARBINARY
			cache.jdbc.parent.column=parent
			cache.jdbc.datasource=java:/DefaultDS
		</attribute>     
-->
        
    </mbean>
</server>
