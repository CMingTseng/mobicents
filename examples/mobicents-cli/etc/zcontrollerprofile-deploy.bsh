/** 
 * A BeanShell script service that deploys a Controller for the Call Blocking,
 * Forwarding and Voicemail service.
 * This script also creates profiles for some users in other to check that the
 * Controller and its children work.
 */

// Imports to create profiles for the Call Blocking, Forwarding and Voicemail service.
import javax.management.Attribute;
import javax.management.MBeanServer;
import javax.management.ObjectName;

import javax.slee.Address;
import javax.slee.AddressPlan;
import javax.slee.profile.ProfileMBean;

import org.jboss.mx.util.MBeanProxyExt;
import org.jboss.system.ServiceMBeanSupport;

// Import for deployment and undeployment
import org.mobicents.slee.container.management.jmx.SleeBeanShellUtil;

SleeBeanShellUtil slee = new SleeBeanShellUtil();

/* script variables */
MBeanServer server;

String controllerProfileSpecID = "ProfileSpecificationID[ControllerProfileCMP#org.mobicents#0.1]";

//Test variables
String profileTableName = "Controller"; 
Address userAddress = null;
Address[] blockedAddresses = new Address[2];
Address backupAddress = null;
	
String controllerServiceURL = "${jboss.server.home.url}deploy-mobicents/callcontroller-DU.jar";
String serviceID = "ServiceID[CallControllerService#org.mobicents#0.1]";

/**
 * Install and activate components in the correct order
 */
void start() {

  try {
	   
   	slee.log.info("Starting deployment of SLEE services...");

      slee.deployService(controllerServiceURL, null);
   	slee.log.info("********* Controller service installed...");

      slee.log.info("Starting creation of Profiles...");
      server = global.ctx.getServer();
      
	slee.createProfileTable(controllerProfileSpecID, profileTableName);
	slee.log.info("*** AddressProfileTable " + profileTableName + " created.");


	slee.log.info("********** CREATE PROFILE: torosvi **********");
	blockedAddresses[0] = new Address(AddressPlan.SIP, "sip:mobicents@nist.gov");
	blockedAddresses[1] = new Address(AddressPlan.SIP, "sip:hugo@nist.gov");

	newProfile(profileTableName, "torosvi", "sip:torosvi@nist.gov", blockedAddresses, null, true);		
  

	slee.log.info("********** CREATE PROFILE: mobicents **********");
	newProfile(profileTableName, "mobicents", "sip:mobicents@nist.gov", null, null, false);		

		

	slee.log.info("********** CREATE PROFILE: victor **********");
	backupAddress = new Address(AddressPlan.SIP, "sip:torosvi@nist.gov");       
	
	newProfile(profileTableName, "victor", "sip:victor@nist.gov", null, backupAddress, false);			                                       						

 	
      slee.log.info("Activating Controller service...");
      slee.deployService(null, serviceID);
   	slee.log.info("********* Controller service activated...");

      slee.log.info("Finished successfully deployment of SLEE services and creation of Profiles!");
   
  }catch (Exception e) {
	slee.log.info("Exception while starting deployment of SLEE services or creating Profiles!", e);
  }
}

/**
 * Deactivate and uninstall components in the reverse order of start()
 */
void stop()
{
  try {
   
   slee.log.info("Stopping SLEE services...");
   
   slee.undeployService(controllerServiceURL, serviceID);	
   
   slee.log.info("Stopped successfully SLEE services!");

  } catch (Exception e) {
       slee.log.info("Exception while stopping SLEE services!", e);
  }
}

/**
 * Method to create a Profile for each user.
 */
private void newProfile(String profileTableName, String profileName, String callee, Address[] block, Address backup, boolean state) {
  
  ObjectName profileObjectName = (ObjectName) slee.createProfile(profileTableName, profileName);
  slee.log.info("*** AddressProfile " + profileName + " created: " + profileObjectName);
  profileMBean = (ProfileMBean) MBeanProxyExt.create(ProfileMBean.class, profileObjectName, server);
  slee.log.info("*** ProfileMBean manager of profile " + profileObjectName + " retrieved: [" + profileMBean + "]");
		
  if ( !profileMBean.isProfileWriteable() ) {
	profileMBean.editProfile();
	slee.log.info("*** Setting profile editable.");
  } else {
	slee.log.info("********* Profile is editable.");
  }
				
  // Setting and Committing
  userAddress = new Address(AddressPlan.SIP, callee);       

  Attribute userAttr = new Attribute("UserAddress", userAddress);                                     
  Attribute blockedAttr = new Attribute("BlockedAddresses", block);
  Attribute backupAttr = new Attribute("BackupAddress", backup);               
  Attribute voicemailAttr = new Attribute("VoicemailState", state);                                     
                           
  server.setAttribute(profileObjectName, userAttr);                                                       
  server.setAttribute(profileObjectName, blockedAttr);                                                   
  server.setAttribute(profileObjectName, backupAttr);                                                       
  server.setAttribute(profileObjectName, voicemailAttr);                       

  slee.log.info("*** Profile modifications are not committed yet.");  

  profileMBean.commitProfile();                                                                          
  slee.log.info("*** Profile modifications are committed.");  
}


/*************************************************************
 * The rest of the script should be rarely modified.
 *************************************************************/

void setCtx(ServiceMBeanSupport wrapper) {
	
  global.ctx = wrapper;
  System.out.println("setCtx: "+ctx);
}

