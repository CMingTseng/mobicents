<?xml version='1.0'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<section
	id="section-Mobicents_Media_Server">
	<title>Mobicents Media Server</title>
	<section
		id="section-Overview_of_Media_Servers">
		<title>Overview of Media Servers</title>
		<formalpara>
			<title>The Reasoning and Need for Media Servers</title>
			<para>With the continued progress of globalization, more corporations than ever before have workgroups spread across countries and continents across the world. To support and increase the productivity of remote and telecommuting workgroups, communications companies are considering more cost effective network solutions that combine voice, wireless, data and video functionality. Businesses like these expect that the services they select and eventually implement will have call quality comparable to conventional telephone service, and they expect those services to boost productivity and reduce overall communications costs. Acquiring these desired network services requires connections from the Internet and wireless and wireline networks to Public Switched Telephone Networks (<acronym>PSTN</acronym>s) using a flexible, robust, scalable and cost-effective media gateway. The ability of such gateways to reduce overall communications costs for dispersed workgroups forms the foundation for media services and servers.</para>
		</formalpara>
		<formalpara>
			<title>Media Gateways Bridge Multiple Technologies</title>
			<para>Today, all communications can be routed through computers. Widespread access to broadband Internet and the ubiquity of Internet Protocol (<acronym>IP</acronym>) enable the convergence of voice, data and video. Media gateways provide the ability to switch voice media between a network and its access point. Using Digital Subscriber Line (<acronym>DSL</acronym>) and fast-Internet cable technology, a media gateway converts, compresses and packetizes voice data for transmission back-and-forth across the Internet backbone for wireline and wireless phones. Media gateways sit at the intersection of the PSTNs and wireless or IP-based networks.</para>
		</formalpara>
		<formalpara>
			<title>The Justification for Media Gateways for VoIP</title>
			<para>Multiple market demands are pushing companies to converge all of their media services using media gateways with VoIP capabilities. Companies expect such a convergent architecture to:</para>
		</formalpara>
		<variablelist>
			<title>Company Expectations of a Convergent Architecture</title>
			<varlistentry>
				<term>Lower Initial Costs</term>
				<listitem>
					<para>Capital investment is decreased because low-cost commodity hardware can be used for multiple functions.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Lower Development Costs</term>
				<listitem>
					<para>Open system hardware and software standards with well-defined applications mean lower costs, and Application Programmable Interfaces (<acronym>API</acronym>s) accelerate development.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Handle Multiple Media Types</term>
				<listitem>
					<para>Companies want <acronym>VoIP</acronym> solutions today, but also need to choose extensible solutions that will handle video in the near future.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Lower the Costs of Deployment and Maintenance</term>
				<listitem>
					<para>Standardized, modular systems reduce training costs and maintenance while also improving uptime.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Enable Rapid Time-to-Market</term>
				<listitem>
					<para>Early market entry hits the window of opportunity and maximizes revenue.</para>
				</listitem>
			</varlistentry>
		</variablelist>
		<formalpara>
			<title>What Is the Mobicents Media Server?</title>
			<para>The Mobicents Media Gateway is an open source Media Server based on the Java Media Framework and is aimed at:</para>
		</formalpara>
		<itemizedlist>
			<listitem>
				<para>Delivering competitive, complete, best-of-breed media gateway functionality of the highest quality.</para>
			</listitem>
			<listitem>
				<para>Meeting the demands of converged wireless and wireline networks, DSL and cable broadband access, and fixed-mobile converged <acronym>VoIP</acronym> networks from a single&mdash;and singularly-capable&mdash;media gateway platform.</para>
			</listitem>
			<listitem>
				<para>Increasing flexibility with a media gateway that supports a wide variety of call control protocols and scales to meet the demands of enterprises and small-carrier providers.</para>
			</listitem>
		</itemizedlist>
	</section>
	<!--<section
		id="section-Installing_Building_and_Uninstalling_the_MMS">
		<title>Installing, Building and Uninstalling the MMS</title>
		<formalpara
			id="fpara-Building_the_MMS">
			<title>Building the MMS</title>
			<para>The server is available as a source code distribution. The source code is available from the server source repository located at <ulink
					url="http://code.google.com/p/mobicents/source/checkout"/>. The source code availability allows you to debug the server, learn its inner workings and create customized versions for your personal use.</para>
		</formalpara>
		<formalpara
			id="fpara-Pre-requisites">
			<title>Pre-requisites</title>
			<para>Before installing and running the media server, you should check that you have installed the Mobicents JSLEE server.</para>
		</formalpara>
		<formalpara
			id="fpara-Accessing_the_MMS_SVN_Source_Code_Repositories">
			<title>Accessing the MMS SVN Source Code Repositories</title>
			<para>Access the source code repository for this project in one of following ways:</para>
		</formalpara>
		<procedure
			id="procedure-Procedure_for_Checking_Out_the_Source_Code_with_Subversion">
			<step>
				<para>Browse source code online to view this project's directory structure and files: <ulink
						url="https://mobicents.googlecode.com/svn/trunk/servers/media"/>
				</para>
			</step>
			<step>
				<para>Check out source code with a Subversion client using the following command. Note: replace the last username with your own username:</para>
				<screen>svn checkout http://mobicents.googlecode.com/svn/trunk/ mobicents-read-only</screen>
			</step>
		</procedure>
		<para>If you are new to Subversion, you may want to visit the <ulink
				url="http://subversion.tigris.org/">Subversion Project website</ulink> and read
    <ulink
				url="http://svnbook.red-bean.com/">Version Control with Subversion</ulink>.</para>
		<remark>TBD: This needs to be updated to reflect the current directory structure. Also the current process to build from source needs to be changed.</remark>
		<formalpara
			id="fpara-Subversion_Source_Code_Repository_Structure">
			<title>Subversion Source Code Repository Structure</title>
			<para>The top-level directory structure under the /trunk/servers/media source tree is shown in the follwing table:</para>
		</formalpara>
		<informaltable
			id="informaltable-SVN_Source_Code_Repo_Structure"
			frame="all">
			<tgroup
				cols="2"
				align="left"
				colsep="1"
				rowsep="1">
				<colspec
					colnum="1"
					colname="col1" />
				<colspec
					colnum="2"
					colname="col2" />
				<thead>
					<row>
						<entry>Path</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>/trunk/servers/media/constants</entry>
						<entry>Shared library for constants</entry>
					</row>
					<row>
						<entry>/trunk/servers/media/jar</entry>
						<entry>Media server SPI and implementation</entry>
					</row>
					<row>
						<entry>/trunk/servers/media/sar</entry>
						<entry>JBoss service deployment unit</entry>
					</row>
					<row>
						<entry>/trunk/servers/media/mgcpcontrol</entry>
						<entry>MGCP module</entry>
					</row>
					<row>
						<entry>/trunk/servers/media/mscontrol</entry>
						<entry>The API for media server control</entry>
					</row>
				</tbody>
			</tgroup>
		</informaltable>
		<formalpara
			id="fpara-Building_the_MMS_from_Source_Code">
			<title>Building the MMS from Source Code</title>
			<para>The build process is driven by maven configuration. The main maven script is the <file name>pom.xml</filename> file located in the project home directory. The purpose of the main <file name>pom.xml</filename> file is to compile the various module directories and then to integrate their output to produce the binary release. To build and install media server perform the following actions:</para>
		</formalpara>
		<procedure
			id="procedure-Steps_for_Building_and_Installing_the_MMS_">
			<step>
				<title>Installing media server endpoints</title>
				<para>switch to the /servers/media and run mvn install</para>
			</step>
			<step>
				<title>Installing Media Resource Adaptor with local link</title>
				<para>switch to the /servers/JAIN SLEE/resources/media and run mvn install</para>
			</step>
			<step>
				<title>Installing MGCP control module</title>
				<para>switch to the /servers/JAIN SLEE/resources/mgcp and run mvn install</para>
			</step>
		</procedure>
	</section>-->
	<section
		id="section-Installation_of_the_Mobicents_Media_Server">
		<title>Installation of the Mobicents Media Server</title>
		<para>The Mobicents Media Server is a self-contained Java software stack consisting of multiple servers architecturally designed to work together. This server stack includes the JBoss Application Server and the Mobicents JAIN SLEE Server; both of these required servers are included in the Media Server distribution.</para>
		<para>The Mobicents Media Server is available in both binary and source code distributions. The simplest way to get started with the Media Server is to download the ready-to-run binary distribution. Alternatively, the source code for the Mobicents Media Server can be obtained by checking it out from the repository using the Subversion version control system (<acronym>VCS</acronym>), and then built using the Maven build system. Whereas installing the binary distribution is recommended for most users, obtaining and building the source code is recommended for those who want access to the latest revisions and Media Server capabilities. For more information on installing the Mobicents Media Server from source, go to <xref
				linkend="section-source-Mobicents-Installing_Configuring_and_Running"/>.</para>
	<!-- Binary Distribution -->
		<section
			id="section-binary-Media_Server-Installing_Configuring_and_Running">
			<title>Binary Distribution: Installing, Configuring and Running</title>
			<para>The Media Server distribution comes bundled with the JBoss Application Server version 4.2.2 GA, the latest version of the Mobicents JAIN SLEE Server, and all of the resource adapters necessary to run the various bundled examples.</para>
			<section
				id="section-binary-Media_Server-PreInstall_Requirements_and_Prerequisites">
				<title>Pre-Install Requirements and Prerequisites</title>
				<para>You should ensure a few requirements have been met before continuing with the install.</para>
				<variablelist
					id="variablelist-binary-Media_Server-Hardware_Requirements">
					<title>Hardware Requirements</title>
					<varlistentry>
						<term>Sufficient Disk Space</term>
						<listitem>
							<para>You must have sufficient disk space in order to install the Media Server binary release. Once unzipped, version 1.0.0 (<literal>BETA3</literal>) of the Media Server binary release requires about 100 MB of free disk space. Keep in mind that disk space requirements may change from release to release.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Anything Java Itself Will Run On</term>
						<listitem>
							<para>Both the Mobicents Media Server and its bundled servers, JBoss and JAIN SLEE, are 100% Java. The Media Server will run on the same hardware that the JBoss Application Server runs on.</para>
						</listitem>
					</varlistentry>
				</variablelist>
				<variablelist
					id="variablelist-binary-Media_Server-Software_Prerequisites">
					<title>Software Prerequisites</title>
					<varlistentry>
						<term>JDK 1.5 or Higher</term>
						<listitem>
							<para>A working installation of the Java Development Kit (<acronym>JDK</acronym>) version 1.5 or higher is required in order to run the Mobicents Media Server. Note that the JBoss Application Server is a runtime dependency of Mobicents and, as mentioned, comes bundled with the binary distribution.</para>
						</listitem>
					</varlistentry>
				</variablelist>
			</section>
			<section
				id="section-binary-Media_Server-Downloading">
				<title>Downloading</title>
				<para>The latest version of the Media Server can be downloaded from <ulink
						url="http://www.mobicents.org/mms-downloads.html"/>. The latest version should be located at the top of the table under <literal>Files</literal>. Find the most recent version and click the <literal>Download</literal> link on the left to start the download from Sourceforge.net.</para>
			</section>
			<section
				id="section-binary-Media_Server-Installing">
				<title>Installing</title>
				<para>Once the requirements and prerequisites have been met and you have downloaded the Media Server binary distribution, you are ready to install it. Follow the instructions below, which are organized by platform, whether Linux or Windows, and install method.</para>
				<procedure>
					<title>Installing the Media Server Binary Distribution on Linux</title>
					<step>
						<para>It is also possible to use Java's <command>jar</command> command to decompress the binary distribution archive. First, move to the directory you downloaded the binary distribution archive to.</para>
						<screen>cd &lt;download_location&gt;</screen>
					</step>
					<step>
						<para>Create a new directory to hold the decompressed Media Server files (and remember to change the file name's version number to match the version you downloaded):</para>
						<screen>mkdir "mobicents-media-server-all-1.0.0"</screen>
					</step>
					<step>
						<para>Move the downloaded archive into the directory you just created:</para>
						<screen>mv "mobicents-media-server-all-1.0.0.BETA3.zip" "mobicents-media-server-all-1.0.0"</screen>
					</step>
					<step>
						<para>Move into that directory:</para>
						<screen>cd "mobicents-media-server-all-1.0.0"</screen>
					</step>
					<step>
						<para>Finally, use Java's <command>jar</command> command to decompress the files in the archive into the current directory, thus completing the install:</para>
						<screen>jar -xvf "mobicents-media-server-all-1.0.0.BETA3.zip"</screen>
						<stepalternatives>
							<step>
								<para>Alternatively, you can decompress the archive by using Linux's <command>unzip</command> utility:</para>
								<screen>unzip "mobicents-media-server-all-1.0.0.BETA3.zip"</screen>
								<tip>
									<para>You can use the unzip command's <option>-d</option>
							<filename>
								<replaceable>&lt;decompress_location&gt;</replaceable>
							</filename> option to unzip the archive to a location other than the current directory.</para>
								</tip>
							</step>
						</stepalternatives>
					</step>
					<step>
						<para>To free disk space, you may want to delete the archive after decompressing it:</para>
						<screen>rm "mobicents-media-server-all-1.0.0.BETA3.zip"</screen>
					</step>
				</procedure>
				<procedure>
					<title>Installing the Media Server Binary Distribution on Windows</title>
					<step>
						<para>In Windows Explorer, create a folder to hold the extracted contents of the binary distribution archive you just downloaded.</para>
					</step>
					<step>
						<para>Double-click the archive file and select the newly-created folder to extract the archive contents into, thus completing the install.</para>
						<stepalternatives>
							<step>
								<para>Alternatively, it is also possible to use Java's <command>jar</command> command to extract the binary distribution files from the archive. To use this method instead, first move the downloaded archive inside the folder that you just created to hold the Media Server binary files using Windows Explorer.</para>
							</step>
							<step>
								<para>Then open the Windows command prompt and navigate to the folder holding the archive using the <command>cd</command> command.</para>
							</step>
							<step>
								<para>Finally, use the <command>jar <option>-xvf</option>
									</command> command to extract the archive contents into the current folder.</para>
								<screen>jar -xvf mobicents-media-server-all-1.0.0.BETA3.zip</screen>
							</step>
						</stepalternatives>
					</step>
					<step>
						<para>You may want to delete the archive after extracting its files in order to free disk space.</para>
					</step>
				</procedure>
			</section>
			<section
				id="section-binary-Media_Server-Running">
				<title>Running</title>
				<para>Once installed, the Media Server can be run by executing the <filename>run.jar</filename> file by using the <command>java <option>-jar</option>
					</command> command (which is platform-neutral and will work on both Linux or Windows); by invoking the <command>run.sh</command> Bourne shell script (on Linux); or by either double-clicking the <filename>run.bat</filename> executable batch file, or using the <command>START</command> command in the command prompt (on Windows). In the Linux terminal or Windows command prompt, you will be able to tell that the Media Server started successfully if the last line of output is similar to the following (ending with <quote>Started in 23s:648ms</quote>):</para>
				<programlisting>11:23:07,656 INFO  [Server] JBoss (MX MicroKernel) [4.2.2.GA (build: SVNTag=JBoss_4_2_2_GA date=200710221139)] Started in 23s:648ms</programlisting>
				<para>Detailed instructions are given below, organized by platform.</para>
				<formalpara>
					<title>Running the Media Server on Linux</title>
					<para></para>
				</formalpara>
				<procedure>
					<title>Starting the Media Server by Executing Its run.sh Shell Script</title>
					<step>
						<para>Change your working directory to the Media Server's topmost directory (the one which you decompressed the installed archive to):</para>
						<screen>cd &lt;topmost_directory&gt;</screen>
					</step>
					<step>
						<para>Ensure that the <filename>jboss-4.2.2.GA/bin/run.sh</filename> start script is executable:</para>
						<screen>chmod +x jboss-4.2.2.GA/bin/run.sh</screen>
					</step>
					<step>
						<para>Finally, run the Bourne shell script by invoking it in one of the following ways:</para>
						<screen>./jboss-4.2.2.GA/bin/run.sh</screen>
						<screen>bash jboss-4.2.2.GA/bin/run.sh</screen>
						<screen>sh jboss-4.2.2.GA/bin/run.sh</screen>
						<stepalternatives>
							<step>
								<para>Alternatively to running the shell script, you can also run the JAR file in the <filename>jboss-4.2.2.GA/bin</filename> directory:</para>
								<screen>java -jar jboss-4.2.2.GA/bin/run.jar</screen>
							</step>
						</stepalternatives>
					</step>
				</procedure>
				<formalpara>
					<title>Running the Media Server on Windows</title>
					<para>There are various ways to start the Media Server on Windows; all of the following methods accomplish the same task.</para>
				</formalpara>
				<procedure>
					<title>Starting the Media Server by Double-Clicking Its run.bat Executable</title>
					<step>
						<para>Using Explorer, navigate to the directory to which you decompressed the downloaded archive, and then to the <filename>jboss-4.2.2.GA\bin</filename> subdirectory.</para>
					</step>
					<step>
						<para>Finally, double-click on the executable batch file <filename>run.bat</filename>.</para>
						<stepalternatives>
							<step>
								<para>Alternatively, if Windows recognizes Executable Jar Files, then you can double-click on the <filename>run.jar</filename> file, and the Media Server will start.</para>
							</step>
						</stepalternatives>
					</step>
				</procedure>
				<procedure>
					<title>Starting the Media Server by Running Its run.bat Executable</title>
					<step>
						<para>Using the Windows Command Prompt, change the directory to the Media Server's topmost directory (the one which you decompressed the installed archive to), and then to <filename>jboss-4.2.2.GA\bin</filename>. Finally, start the Media Server by using the <command>START</command> command:</para>
						<screen>START run.bat</screen>
						<stepalternatives>
							<step>
								<para>Alternatively, you can start the Media Server by running the <filename>run.jar</filename> JAR file with the <command>java <option>-jar</option>
									</command> command:</para>
								<screen>java -jar run.jar</screen>
							</step>
						</stepalternatives>
					</step>
				</procedure>
			</section>
			<section
				id="section-binary-Media_Server-Stopping">
				<title>Stopping</title>
				<para>Just as there are multiple ways to run the Media Server, there are also multiple ways to stop it. In the Linux terminal or Windows command prompt, you will be able to tell that the Media Server shut down successfully if you see the following three lines at the end of output:</para>
				<programlisting>[Server] Shutdown complete
Shutdown complete
Halting VM</programlisting>
				<formalpara>
					<title>Stopping the Media Server on Linux</title>
					<para></para>
				</formalpara>
				<procedure>
					<title>Stopping the Media Server by Issuing a Control Code</title>
					<step>
						<para>In the same Linux Terminal in which you started the Media Server, you can easily stop it by pressing the <keycombo
								action="simul"><keycap>Ctrl</keycap>
						<keycap>c</keycap>
					</keycombo> key combination.
						</para>
					</step>
				</procedure>
				<procedure>
					<title>Stopping the Media Server by Executing Its shutdown.sh Shell Script</title>
					<step>
						<para>Another way to shut down the Media Server is by running the <filename>shutdown.sh</filename> Bourne shell script in the same way that you ran the <filename>run.sh</filename> script to start the server.</para>
						<substeps>
							<step>
								<para>Change your working directory to the Media Server's topmost directory (the one which you decompressed the installed archive to):</para>
								<screen>cd &lt;topmost_directory&gt;</screen>
							</step>
							<step>
								<para>Invoke the <filename>shutdown.sh</filename> Bourne shell script by issuing one of the following commands (all of these will accomplish the same task). Be sure to add the capital <option>-S</option> option after the script name (it is the short option for the longer <option>--shutdown</option> option):</para>
								<screen>./jboss-4.2.2.GA/bin/shutdown.sh -S</screen>
								<screen>bash jboss-4.2.2.GA/bin/shutdown.sh -S</screen>
								<screen>sh jboss-4.2.2.GA/bin/shutdown.sh -S</screen>
								<stepalternatives>
									<step>
										<para>Alternatively, you can execute the platform-neutral JAR shutdown script (remembering again to add the <option>-S</option> option):</para>
										<screen>java -jar shutdown.jar -S</screen>
									</step>
								</stepalternatives>
							</step>
						</substeps>
					</step>
				</procedure>
				<formalpara>
					<title>Stopping the Media Server on Windows</title>
					<para>Similarly, there are various ways to stop the Media Server on Windows, all of which accomplish the same task.</para>
				</formalpara>
				<procedure>
					<title>Stopping the Media Server by Double-Clicking Its shutdown.bat Executable</title>
					<step>
						<para>Using Explorer, navigate to the directory to which you decompressed the downloaded archive, and then to the <filename>jboss-4.2.2.GA\bin</filename> subdirectory.</para>
					</step>
					<step>
						<para>Finally, double-click on the executable batch file <filename>shutdown.bat</filename>.</para>
						<stepalternatives>
							<step>
								<para>Alternatively, if Windows recognizes Executable Jar Files, then you can double-click on the <filename>shutdown.jar</filename> file, and the Media Server will shut down.</para>
							</step>
						</stepalternatives>
					</step>
				</procedure>
				<procedure>
					<title>Stopping the Media Server by Running Its shutdown.bat Executable</title>
					<step>
						<para>Using the Windows Command Prompt, change the directory to the Media Server's topmost directory and then to <filename>jboss-4.2.2.GA\bin</filename>. Finally, halt the Media Server by using the <command>START</command> command, and remembering to include the <option>-S</option> after the file name:</para>
						<screen>START shutdown.bat -S</screen>
						<stepalternatives>
							<step>
								<para>Alternatively, you can stop the Media Server on Windows by executing the <filename>shutdown.jar</filename> JAR file with the <command>java <option>-jar</option>
									</command> command (and remembering to include the <option>-S</option> option after the batch file name):</para>
								<screen>java -jar shutdown.bat -S</screen>
							</step>
						</stepalternatives>
					</step>
				</procedure>
			</section>
		</section>
		<section
			id="section-binary-Media_Server-Configuring">
			<title>Configuring</title>
			<para>The Media Server can be controlled and configured with the Mobicents Management Console, which is started along with the server. For information on configuring the Media Server, refer to <xref
					linkend="section-MMS_Configuration"/>.</para>
		</section>
		<section
			id="section-binary-Media_Server-Testing">
			<title>Testing</title>
			<para>For information on testing the Media Server, refer to <xref
					linkend="section-Writing_and_Running_Tests_Against_the_Mobicents_Media_Server"/>.</para>
		</section>
		<section
			id="section-binary-Media_Server-Uninstalling">
			<title>Uninstalling</title>
			<para>To uninstall the Media Server, simply delete the directory you decompressed the binary distribution archive into.</para>
		</section>
	</section>
	<!-- Source Distribution -->
	<section
		id="section-source-Media_Server-Installing_Configuring_and_Running">
		<title>Source Distribution: Installing, Configuring and Running</title>
		<para>The Mobicents Media Server is also available as a source distribution. You can obtain the Media Server source code using the Subversion version control system, and then easily build and run it. For directions on how to do so, refer to <ulink
				url="http://groups.google.com/group/mobicents-public/web/mobicents-ms-binary">Installing and Building the Mobicents Media Server</ulink>.</para>
			<!--<section
				id="section-source-Media_Server-PreInstall_Requirements_and_Prerequisites">
				<title>Pre-Install Requirements and Prerequisites</title>
				<para></para>
				<variablelist
					id="variablelist-source-Media_Server-Hardware_Requirements">
					<title>Hardware Requirements</title>
					<varlistentry>
						<term>Sufficient Disk Space</term>
						<listitem>
							<para></para>
						</listitem>
					</varlistentry>
				</variablelist>
				<variablelist
					id="variablelist-source-Media_Server-Software_Prerequisites">
					<title>Software Prerequisites</title>
					<varlistentry>
						<term></term>
						<listitem>
							<para></para>
						</listitem>
					</varlistentry>
				</variablelist>
			</section>
			<section
				id="section-source-Media_Server-Obtaining_the_Source_Code">
				<title>Obtaining the Source Code</title>
				<para></para>
			</section>
			<section
				id="section-source-Media_Server-Building">
				<title>Building</title>
				<para></para>
			</section>
			<section
				id="section-source-Media_Server-Running">
				<title>Running</title>
				<para></para>
			</section>
			<section
				id="section-source-Media_Server-Stopping">
				<title>Stopping</title>
				<para></para>
			</section>
			<section
				id="section-source-Media_Server-Configuring">
				<title>Configuring</title>
				<para></para>
			</section>
			<section
				id="section-source-Media_Server-Testing">
				<title>Testing</title>
				<para></para>
			</section>
			<section
				id="section-source-Media_Server-Uninstalling">
				<title>Uninstalling</title>
				<para></para>
			</section>
		</section>-->
	</section>
	<section
		id="section-Writing_and_Running_Tests_Against_the_Mobicents_Media_Server">
		<title>Writing and Running Tests Against the Mobicents Media Server</title>
		<para>For information about the different kinds of tests that the Mobicents Media Server provides, refer to <ulink
				url="http://groups.google.com/group/mobicents-public/web/mobicents-ms-tests">Writing and Running Tests Against MMS</ulink>.</para>
		<!--<para>As the Mobicents platform became rich with functions and capabilities, it soon became clear that it also required a lot of person-power to sustain its level of functionality. In order to achieve the highest degrees of availability and stability, a set of tests were devised.</para>
		<para>MMS contains two different sets of tests:</para>
		<variablelist>
			<varlistentry>
				<term>In-Container Tests</term>
				<listitem>
					<para>runtime tests which require the setup of a full container and run on the same Java Virtual Machine (JVM) as MMS; and</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Component Tests</term>
				<listitem>
					<para>regular JUnit tests for components: these tests do not require a running MMS.</para>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>Test in both cases are driven by maven plugins - as whole build  depends on maven. However in case of incontainer tests its different - this module is not enabled. This default setup is due to requirement of incontainer test. In future we will make effort to automate whole process without any need to modify <file name>pom.xml</filename> configuration files. Incontainer tests require MMS to be deployed in JBoss. Despite availability of <quote>cargo</quote> plugin we were unsuccessfull on integrating both test types in one module due to <quote>cactus</quote> for m2, being still in alpha state.</para>
		<para>Incontainer tests reside is separate module as they require 3rd party libraries and framework to act. It can be found in <file name>trunk/servers/media/tests</filename>
		</para>
		<formalpara>
			<title>Writing In-Container Tests</title>
			<para>  This is fairly easy. We use cactus to run tests within contianer. Here are basic steps to acomplish:</para>
		</formalpara>
		<procedure
			id="procedure-Using_Cactus_to_Run_Tests_In-Container">
			<step>
				<para>Create the appropriate pacakge in <file name>trunk/servers/media/tests/src/main/java</filename>.</para>
			</step>
			<step>
				<para>Create regular junit test case - but extends  org.apache.cactus.ServletTestCase.</para>
			</step>
			<step>
				<para>Create testXXX methods, setUp, tearDown, etc - just as in regular test case - but keep in mind, it runs within container, so all local container resources are available - like JNDI entries, envirment properties.</para>
			</step>
			<step>
				<para>Make public static Test suite() method return instance of org.apache.cactus.ServletTestSuite object.</para>
			</step>
		</procedure>
		<formalpara>
			<title>Writing Regular Tests</title>
			<para>This is straightforward as those tests are regular junit tests, run with surefire plugin.</para>
		</formalpara>
		<formalpara>
			<title>Running the In-Container Tests</title>
			<para>As mentioned running those tests needs a little bit of setup. Here they are:</para>
		</formalpara>
		<procedure
			id="procedure-Running_the_In-Container_Tests">
			<step>
				<para>Deploy MMS with mvn install command invoked from <file name>trunk/server/media</filename>.</para>
			</step>
			<step>
				<para>Change the directory to <file name>tests</filename> (its a mvn module).</para>
			</step>
			<step>
				<para>Set proper container home and proper containerId (see cargo reference manual) in <file name>pom.xml</filename>:</para>
				<example
					id="example-Setting_the_Container_Home_and_containerId">
					<title>Setting the Container Home and containerId</title>
<programlisting
						id="proglist-Setting_the_Container_Home_and_containerId"
						linenumbering="numbered"
						role="XML"><![CDATA[
<container>
	<containerId>jboss42x</containerId>
	<home>D:\java\servers\jboss-4.2.2.GA</home>
</container>]]></programlisting>
</example>
			</step>
			<step>
				<para>Simply do mvn install - this will create war file, deploy it, run container, run tests.</para>
			</step>
			<step>
				<para>Do mvn clean to remove tests war from container.</para>
			</step>
		</procedure>
		<para>In the future incotnainer run should be simpler, without need of any configuration. However please keep in mind that there are plans to separate MMS entirely from container.</para>
		<formalpara>
			<title>Running Regular Tests</title>
			<para>Those test are usually run while MMS is beeing build, however it is possible to run them on demand.</para>
		</formalpara>
		<para>Simply move to <file name>trunk/servers/media/jar</filename> and type mvn test.</para> -->
	</section>
</section>
