//Source file: G:\\tools\\jainproxy\\JainComm.java

package com.ptin.xmas.control.common.interfaces;


import javax.sip.header.CallIdHeader;
import javax.sip.message.Request;
import javax.sip.message.Response;
/**
 *interface used by InCall to send messages by CommProviderImpl
 */
public interface CallProvider {
      
   /**
    *function that returns the CommFactory
    */ 
   public CommFactory getCommFactory();
   /**
    *method used to add a Call to the Hashtable on CommProviderImpl
    */
   public void addCall(String callid,CallListener callListener);
   
   public void addOutComm (String callid, CallListener callListener);
    
   public void addInCall (String callid, CallListener callListener);
   /**
    *method used to remove a Call from the Hashtable on CommProviderImpl
    */
   public void removeCall(String callid);
   /**
    *method used to send a request message previously constructed by CommFactory
    */
   public void sendRequest(Request request);
   /**
    *method used to send a response message previously constructed by CommFactory
    */
   public void sendResponse(Response response);
   /**
    *method used to set the CDR (Call Data Record) for a call on a Hashtable where it can be 
    *accessed later, even when the call no longer exists
    *
    *String callId-> the call ID for that call (used as a label)
    *CDR cdr -> the call data record object to be stored
    */
   //public void setCDR(String callId,CDR cdr);
   /**
    *function that returns the CDR (Call Data Record) for a call labeled by callId
    *
    *returns null if the CDR doesn't exist
    *
    */
   //public CDR getCDR(String callId);
   /**
    *Function that returns a CallIdHeader generated by SipProvider
    */
   public CallIdHeader getNewCallIdHeader();
   /**
    *Adds a Leg (a sip listener) to the LegsList (an Hashtable), so that every Response/Request
    *with that same callid (used as a label) will be delivered to that Leg
    *
    *Atention: if a call has two legs, they MUST have different callids
    */
   public void addLeg(String callid,Leg leg); 
   
   public void addOutCommLeg(String callid,Leg leg); 
   
   public void addInCallLeg(String callid, Leg leg);
   
   /**
    *method used to remove a Leg from the LegsList when the call no longer exists
    */
   public void removeLeg(String callId);
   
   public void removeOutCommLeg(String callId);
   
   public void removeInCallLeg(String callId);
}


