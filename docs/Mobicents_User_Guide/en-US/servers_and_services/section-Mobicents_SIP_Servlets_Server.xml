<?xml version='1.0'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<section
	id="section-Mobicents_SIP_Servlets_Server">
	<title>Mobicents SIP Servlets Server</title>
	<para>Mobicents SIP (Session Initiation Protocol) Servlets deliver a consistent, open platform on which to develop and deploy portable and distributed SIP and Converged Java Enterprise Edition (JEE) services. The Mobicents SIP Servlets Server is a <emphasis>certified</emphasis> implementation of the SIP Servlet v1.1 (JSR 289) specification on top of Tomcat and Jboss containers, and it strives to develop interoperability standards between SIP Servlets and the Java Service Logic Execution Environment (JSLEE) so that applications can exploit the strengths of both. The JAIN-SIP Reference Implementation is leveraged as the SIP stack, and Mobicents JSLEE is used as the SLEE implementation.</para>
	<itemizedlist
		id="itemlist-Principal_and_new_features_of_SIP_Servlets">
		<title>Features of the Mobicents SIP Servlets Server</title>
		<listitem>
			<para>the first <emphasis>certified</emphasis> SIP Servlet v1.1 (JSR 289) implementation</para>
		</listitem>
		<listitem>
			<para>a current call rate of 100 calls per second over a 24-hour duration: 8,640,000 total calls</para>
		</listitem>
		<listitem>
			<para>failover support</para>
		</listitem>
		<listitem>
			<para>merged SIP and HTTP session management</para>
		</listitem>
		<listitem>
			<para>a browser-based Management Console</para>
		</listitem>
		<listitem>
			<para>a bundled JSLEE/SIP interoperability demonstration application</para>
		</listitem>
		<listitem>
			<para>Mobicents Media Server</para>
		</listitem>
		<listitem>
			<para>extensions such as SUBSCRIBE/NOTIFY, among others</para>
		</listitem>
	</itemizedlist>
	
	<!--Installing the JDK-->
	<para
		id="para-section-Mobicents_SIP_Servlets_Server-section-Installing_the_JDK_Version_5.0"><!-- Placeholder for XREFs --></para>
	<xi:include
		xmlns:xi="http://www.w3.org/2001/XInclude"
		href="../modules/section-Installing_the_JDK_Version_5.0.xml" />
	
	<!-- SIP Servlet-Enabled JBoss Application Server -->
	<section
		id="section-binary-SIP_Servlets_Server_with_JBoss-Installing_Configuring_and_Running">
		<title>SIP Servlet-Enabled JBoss Application Server: Installing, Configuring and Running</title>
		<para>You can run the Mobicents SIP Servlets Server on top of either the JBoss Application Server or the Tomcat Servlet Container. This section details how to install the SIP Servlets Server on top of JBoss AS. If you would rather run the SIP Servlets Server on top of the Tomcat Servlet Container, go to <xref
				linkend="section-binary-SIP_Servlets_Server_with_Tomcat-Installing_Configuring_and_Running"/>.</para>
		<formalpara>
			<title>Differences Between a Standard JBoss Installation and One Customized for Mobicents SIP Servlets</title>
			<para>Provided here is a list of differences between a standard JBoss Application Server installation and the Mobicents-provided SIP Servlets-customized JBoss installation. The differences include:</para>
		</formalpara>
		<itemizedlist>
			<listitem>
				<para>The <filename>server/default/deploy</filename> directory contains both HTTP and SIP Servlet applications (WAR and SAR2 files).</para>
			</listitem>
			<listitem>
				<para>The <filename>server/default/deploy/jboss-web.deployer</filename> unit has been modified to provide extended classes to the standard JBoss container classes, in order to allow SIP applications to be loaded and the SIP stack to be started.</para>
			</listitem>
			<listitem>
				<para>The <filename>server/default/deploy/jboss-web.deployer/context.xml</filename> file has been modified to provide the extended manager to be able to manage SIP sessions and SIP application sessions in addition to HTTP sessions.</para>
			</listitem>
			<listitem>
				<para>The <filename>server/default/deploy/jboss-web.deployer/META-INF/jboss-service.xml</filename> file and the <filename>server/default/deploy/jboss-web.deployer/META-INF/webserver-xmbean.xml</filename> file have been modified so that it is now possible for JBoss containers to correctly deploy SIP servlets and converged applications.</para>
			</listitem>
			<listitem>
				<para>A <filename>dars</filename> directory containing all of the default applications' router properties files for using the various SIP Servlets applications (which come bundled with the release) has been added to the <filename>server/default/conf</filename> directory.</para>
				<para>a <filename>dars</filename> directory containing all the default applications router properties files for using the SIP servlets applications bundled with the release has been added to <filename>server/default/conf</filename>.
				</para>
			</listitem>
			<listitem>
				<para>Additional JAR files have been added to enable SIP Servlet functionality. Here is a more-or-less complete list of the JAR files added to the <filename>server/default/deploy/jboss-web.deployer/</filename> directory:</para>
				<itemizedlist>
					<listitem>
						<para>
							<filename>sip-servlets-impl-0.6.jar</filename>
						</para>
					</listitem>
					<listitem>
						<para>
							<filename>sip-servlets-spec-1.1.6.jar</filename>
						</para>
					</listitem>
					<listitem>
						<para>
							<filename>sip-servlets-application-router-0.6.jar</filename>
						</para>
					</listitem>
					<listitem>
						<para>
							<filename>sip-balancer-1.0-SNAPSHOT.jar</filename>
						</para>
					</listitem>
					<listitem>
						<para>
							<filename>jain-sip-api-1.2.jar</filename>
						</para>
					</listitem>
					<listitem>
						<para>
							<filename>jain-sip-ri-1.2.83.jar</filename>
						</para>
					</listitem>
					<listitem>
						<para>
							<filename>concurrent-1.3.4.jar</filename>
						</para>
					</listitem>
					<listitem>
						<para>
							<filename>log4j-1.2.14.jar</filename>
						</para>
					</listitem>
					<listitem>
						<para>
							<filename>stun4j-1.0-MOBICENTS.jar</filename>
						</para>
					</listitem>
					<listitem>
						<para>
							<filename>dnsjava-2.0.6.jar</filename>
						</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
		<section
			id="section-binary-SIP_Servlets_Server_with_JBoss-PreInstall_Requirements_and_Prerequisites">
			<title>Pre-Install Requirements and Prerequisites</title>
			<para></para>
			<variablelist
				id="variablelist-binary-SIP_Servlets_Server_with_JBoss-Hardware_Requirements">
				<title>Hardware Requirements</title>
				<varlistentry>
					<term>Sufficient Disk Space</term>
					<listitem>
						<para>You must have sufficient disk space in order to install the SIP Servlets-customized JBoss binary release. Once unzipped, version 0.6 of the SIP Servlets-customized JBoss binary release requires <emphasis>at least</emphasis> 120 MB of free disk space. Keep in mind that disk space requirements may change from release to release.</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Anything Java Itself Will Run On</term>
					<listitem>
						<para>The SIP Servlets-customized JBoss Application Server is 100% Java. It will run on the same hardware that the JBoss Application Server runs on.</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<variablelist
				id="variablelist-binary-SIP_Servlets_Server_with_JBoss-Software_Prerequisites">
				<title>Software Prerequisites</title>
				<varlistentry>
					<term>JDK 1.5 or Higher</term>
					<listitem>
						<para>A working installation of the Java Development Kit (<acronym>JDK</acronym>) version 1.5 or higher is currently required in order to run the SIP Servlets-customized JBoss binary distribution. For instructions on how to install the JDK, refer to <xref
								linkend="para-section-Mobicents_SIP_Servlets_Server-section-Installing_the_JDK_Version_5.0"/>.</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_JBoss-Downloading">
			<title>Downloading</title>
			<para>You can download the latest version of the SIP Servlets-customized JBoss from <ulink
					url="http://www.mobicents.org/mss-downloads.html"/>. The top row of the table holds the latest version. Note that there are two different releases of the SIP Servlets Server for every version: one of them is a SIP Servlets-customized JBoss Application Server, and the other is a SIP Servlet-customized Tomcat Servlet Container. Click the <literal>Download</literal> link on the right to start the download of the SIP Servlets binary distribution you prefer (JBoss or Tomcat) from Sourceforge.net.</para>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_JBoss-Installing">
			<title>Installing</title>
			<para>Once the requirements and prerequisites have been met and you have downloaded the binary distribution zip file, you are ready to install the SIP Servlets-customized JBoss binary distribution. Follow the instructions below for your platform, whether Linux or Windows.</para>
			<note
				id="note-binary-SIP_Servlets_Server_with_JBoss-Use_Version_Numbers_Relevant_to_Your_Installation">
				<title>Use Version Numbers Relevant to Your Installation!</title>
				<para>For clarity, the command line instructions presented in this chapter use specific version numbers and directory names. Remember to replace them with version numbers and file names relevant to those you are actually working with.</para>
			</note>
			<procedure>
				<title>Installing the SIP Servlets-customized JBoss Binary Distribution on Linux</title>
				<step>
					<para>First, move to the directory to which you downloaded the binary distribution zip file. For this example, we'll assume you're currently in your home directory, and that you downloaded the zip file to a subdirectory of it, referred to as <filename>downloads</filename>.</para>
					<screen>~]# cd downloads</screen>
				</step>
				<step>
					<para>In <filename>downloads</filename>, create a subdirectory to hold the unzipped SIP Servlets-customized JBoss files. It is good practice to include the version number in this directory name; if you do so, remember to correctly match it with the version of the SIP Servlets-customized JBoss binary distribution you downloaded.</para>
					<screen>downloads]$ mkdir &quot;mss-jboss-0.6&quot;</screen>
				</step>
				<step>
					<para>Move the downloaded zip file into the directory you just created:</para>
					<screen>downloads]$ mv &quot;mss-0.6-jboss-4.2.2.GA-0809301055.zip&quot; &quot;mss-jboss-0.6&quot;</screen>
				</step>
				<step>
					<para>Move into that directory:</para>
					<screen>downloads]$ cd &quot;mss-jboss-0.6&quot;</screen>
				</step>
				<step>
					<para>Finally, use Java's <command>jar <option>-xvf</option>
							</command> command to extract the contents of the zip file into the current directory, thus completing the install:</para>
					<screen>mss-jboss-0.6]$ jar -xvf &quot;mss-0.6-jboss-4.2.2.GA-0809301055.zip&quot;</screen>
					<stepalternatives>
						<step>
							<para>Alternatively, if Linux's <command>unzip</command> utility is present on your system or is installable, you can use it in lieu of Java's <command>jar <option>-xvf</option>
									</command> command:</para>
							<screen>mss-jboss-0.6]$ unzip &quot;mss-0.6-jboss-4.2.2.GA-0809301055.zip&quot;</screen>
							<tip>
								<para>You can also use <command>unzip</command>'s <option>-d</option>
									<filename>
								<replaceable>&lt;unzip_to_location&gt;</replaceable>
							</filename> option to extract the zip file's contents to a location other than the current directory.</para>
							</tip>
						</step>
					</stepalternatives>
				</step>
				<step>
					<para>To free disk space, you may want to delete the zip file once you've extracted its contents:</para>
					<screen>mss-jboss-0.6]$ rm &quot;mss-0.6-jboss-4.2.2.GA-0809301055.zip&quot;</screen>
				</step>
			</procedure>
			<procedure>
				<title>Installing the SIP Servlets-customized JBoss Binary Distribution on Windows</title>
				<step>
					<para>For this example, we'll assume that you downloaded the binary distribution zip file to the <filename>My Downloads</filename> folder. First, using Windows Explorer, create a subfolder in <filename>My Downloads</filename> to extract the zip file's contents into. When you name this folder, it is good practice to include the version number; if you do so, remember to correctly match it with the version of the SIP Servlets-customized JBoss Application Server binary distribution you downloaded. In these instructions, we will refer to this folder as <filename>mss-jboss-0.6</filename>.</para>
				</step>
				<step>
					<para>Double-click the downloaded zip file, selecting as the destination folder the one you just created to hold the zip file's contents.</para>
					<stepalternatives>
						<step>
							<para>Alternatively, it is also possible to use Java's <command>jar <option>-xvf</option>
									</command> command to extract the binary distribution files from the zip archive. To use this method instead, first move the downloaded zip file from <filename>My Downloads</filename> to the folder that you just created to hold the SIP Servlets Server files.</para>
						</step>
						<step>
							<para>Then, open the Windows Command Prompt and navigate to the folder holding the archive using the <command>cd</command> command:</para>
							<tip
								id="tip-binary-SIP_Servlets_Server_with_JBoss-Opening_the_Command_Prompt_from_Windows_Explorer">
								<title>Opening the Command Prompt from Windows Explorer</title>
								<para>If you are using Windows Vista®, you can open the Command Prompt directly from Explorer. Hold down the <keycap>Shift</keycap> key and right-click on either a folder, the desktop, or inside a folder. This will cause an <guimenuitem>Open Command Window Here</guimenuitem> context menu item to appear, which can be used to open the Command Prompt with the current working directory set to either the folder you opened, or opened it from.</para>
							</tip>
							<screen>C:\Users\Me&gt;cd &quot;My Downloads\mss-jboss-0.6&quot;</screen>
						</step>
						<step>
							<para>Finally, use the <command>jar <option>-xvf</option>
									</command> command to extract the archive contents into the current folder.</para>
							<screen>C:\Users\Me\My Downloads\mss-jboss-0.6&gt;jar -xvf &quot;mss-0.6-jboss-4.2.2.GA-0809301055.zip&quot;</screen>
						</step>
					</stepalternatives>
				</step>
				<step>
					<para>At this point, you may want to move the folder holding the SIP Servlets-customized JBoss binary files (in this example, the folder named <filename>mss-jboss-0.6</filename>) to another location. This step is not strictly necessary, but it is probably a good idea to move the installation folder from <filename>My Downloads</filename> to a user-defined location for storing runnable programs. Any location will suffice, however.</para>
				</step>
				<step>
					<para>You may also want to delete the zip file after extracting its contents in order to free disk space:</para>
					<screen>C:\Users\Me\My Downloads\mss-jboss-0.6&gt;delete &quot;mss-0.6-jboss-4.2.2.GA-0809301055.zip&quot;</screen>
				</step>
			</procedure>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_JBoss-Configuring">
			<title>Configuring</title>
			<para>For information on configuring the Mobicents SIP Servlets-customized JBoss Application Server, refer to <ulink
					url="http://www.mobicents.org/configuration.html"/>. It is not necessary to configure it before running it.</para>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_JBoss-Running">
			<title>Running</title>
			<para>Once installed, you can run the SIP Servlets-customized JBoss Application Server by executing the one of the startup scripts in the <filename>bin</filename> directory (on Linux or Windows), or by double-clicking the <filename>run.bat</filename> executable batch file in that same directory (on Windows only). However, we suggest always starting the JBoss Application Server using the terminal or Command Prompt because you are then able to read&#8212;and act upon&#8212;any startup messages, and possibly debug any problems that may arise. In the Linux terminal or Command Prompt, you will be able to tell that the server started successfully if the last line of output is similar to the following (ending with <quote>Started in 23s:648ms</quote>):</para>
			<programlisting><![CDATA[17:48:01,247 INFO  [Server] JBoss (MX MicroKernel) [4.2.2.GA (build: SVNTag=JBoss_4_2_2_GA date=200710221139)] Started in 20s:861ms]]></programlisting>
			<para>Detailed instructions are given below, arranged by platform.</para>
			<important
				id="important-If_You_Have_Set_JBOSS_HOME_Before_Update_It">
				<title>If You Have Set <envar>JBOSS_HOME</envar> Before, Update It!</title>
				<para>It is essential, if the <envar>JBOSS_HOME</envar> environment variable is set on your system, that it points to the topmost directory of your SIP Servlets-customized JBoss installation (i.e. to the directory in which you unzipped the zip file; the one which has <filename>bin</filename> as a subdirectory). When using the binary SIP Servlets-customized JBoss, you must either not set <envar>JBOSS_HOME</envar> at all (or unset it), or set it to the correct directory.</para>
			</important>
			<procedure>
				<title>Running the SIP Servlets-customized JBoss Application Server on Linux</title>
				<step>
					<para>Change your working directory to the SIP Servlets-customized JBoss's topmost directory (the one in which you extracted the zip file's contents to):</para>
					<screen>downloads]$ cd &quot;mss-jboss-0.6&quot;</screen>
				</step>
				<step
					performance="optional">
					<para>(Optional) Ensure that the <filename>bin/run.sh</filename> start script is executable:</para>
					<screen>mss-jboss-0.6]$ chmod +x bin/run.sh</screen>
				</step>
				<step>
					<para>Finally, execute the <filename>run.sh</filename> Bourne shell script:</para>
					<screen>mss-jboss-0.6]$ ./bin/run.sh</screen>
					<stepalternatives>
						<step>
							<para>Instead of executing the Bourne shell script to start the server, you may alternatively run the <filename>run.jar</filename> executable Java archive in the <filename>bin</filename> directory:</para>
							<screen>mss-jboss-0.6]$ java -jar bin/run.jar</screen>
						</step>
					</stepalternatives>
				</step>
			</procedure>
			<procedure>
				<title>Running the SIP Servlets-customized JBoss Application Server on Windows</title>
				<step>
					<para>There are several different ways to start the SIP Servlets-customized JBoss Application Server on Windows. All of the following methods accomplish the same task.</para>
					<para>Using Windows Explorer, change your folder to the one in which you unzipped the downloaded zip file, and then to the <filename>bin</filename> subfolder.</para>
				</step>
				<step>
					<para>Although not the preferred way (see below), it is possible to start the SIP Servlets-customized JBoss by double-clicking on the <filename>run.bat</filename> executable batch file.</para>
					<stepalternatives>
						<step>
							<para>As mentioned above, the best way to start the SIP Servlets-customized JBoss is by using the Command Prompt. Doing it this way will allow you to view all of the server startup details, which will enable you to easily determine whether any problems were encountered during the startup process. You can open the Command Prompt directly from the <filename>&lt;topmost_directory&gt;\bin</filename> folder in Windows Explorer (see <xref
									linkend="tip-binary-SIP_Servlets_Server_with_JBoss-Opening_the_Command_Prompt_from_Windows_Explorer"/> for details), or you can open the Command Prompt via the <guilabel>Start</guilabel> menu and navigate to the correct folder:</para>
							<screen>C:\Users\Me\My Downloads&gt; cd &quot;mss-jboss-0.6&quot;</screen>
						</step>
						<step>
							<para>Start the JBoss Application Server by running the executable <filename>run.bat</filename> batch file:</para>
							<screen>C:\Users\Me\My Downloads\mss-jboss-0.6&gt;bin\run.bat</screen>
							<stepalternatives>
								<step>
									<para>It is also possible to start the server by running the <filename>run.jar</filename> executable Java archive:</para>
									<screen>C:\Users\Me\My Downloads\mss-jboss-0.6&gt;java -jar bin\run.jar</screen>
								</step>
							</stepalternatives>
						</step>
					</stepalternatives>
				</step>
			</procedure>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_JBoss-Using">
			<title>Using</title>
			<para>Once the server is running, you can access the Mobicents SIP Servlets Management Console by opening your browser and navigating to <ulink
					url="http://localhost:8080/sip-servlets-management/"/>.</para>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_JBoss-Stopping">
			<title>Stopping</title>
			<para>Just as there are multiple ways to run the SIP Servlets-customized JBoss Application Server, there are multiple ways to stop it. Detailed instructions for stopping the JBoss Application Server are given below, arranged by platform. Note that if you properly stop the server, you will see the following three lines as the last output in the Linux terminal or Command Prompt:</para>
			<programlisting>[Server] Shutdown complete
Shutdown complete
Halting VM</programlisting>
			<procedure>
				<title>Stopping the SIP Servlets-customized JBoss Application Server on Linux by Issuing a Control Code</title>
				<step>
					<para>Assuming that you started the JBoss Application Server as a foreground process in the terminal, the easiest way to stop it is by pressing the <keycombo
							action="simul"><keycap>Ctrl</keycap>
						<keycap>c</keycap>
					</keycombo> key combination in the same terminal in which you started it.
						</para>
				</step>
			</procedure>
			<procedure>
				<title>Stopping the SIP Servlets-customized JBoss Application Server on Linux by Executing <filename>shutdown.sh</filename> or <filename>shutdown.jar</filename>
				</title>
				<step>
					<para>Another way to shut down the JBoss Application Server is by executing the <filename>shutdown.sh</filename> Bourne shell script in the <filename>&lt;topmost_directory&gt;/bin</filename> directory. To do so, first change your working directory to the binary distribution's topmost directory (the one to which you extracted the downloaded zip file's contents):</para>
					<screen>downloads]$ cd &quot;mss-jboss-0.6&quot;</screen>
				</step>
				<step
					performance="optional">
					<para>(Optional) Ensure that the bin/shutdown.sh start script is executable:</para>
					<screen>mss-jboss-0.6]$ chmod +x bin/shutdown.sh</screen>
				</step>
				<step>
					<para>Finally, run the <filename>shutdown.sh</filename> executable Bourne shell script, and remember to add the <option>-S</option> option (which is the short option for <option>--shutdown</option>) as a command line argument:</para>
					<screen>mss-jboss-0.6]$ ./bin/shutdown.sh -S</screen>
					<stepalternatives>
						<step>
							<para>Instead of executing the Bourne shell script to stop the server, you may alternatively run the <filename>shutdown.jar</filename> executable Java archive to do so (and remembering, again, to add the <option>-S</option> command line argument):</para>
							<screen>mss-jboss-0.6]$ java -jar bin/shutdown.jar -S</screen>
						</step>
					</stepalternatives>
				</step>
			</procedure>
			<procedure>
				<title>Stopping the SIP Servlets-customized JBoss Application Server on Windows</title>
				<step>
					<para>Stopping the JBoss Application Server on Windows consists in executing either the <filename>shutdown.bat</filename> or the <filename>shutdown.jar</filename> executable file in the <filename>bin</filename> subfolder of the SIP Servlets-customized JBoss binary distribution. Make sure to add the <option>-S</option> option (which is the short option for <option>--shutdown</option>) as a command line argument.</para>
					<screen>C:\Users\Me\My Downloads\mss-jboss-0.6&gt;bin\shutdown.bat -S</screen>
					<stepalternatives>
						<step>
							<para>Alternatively, you can execute the <filename>shutdown.jar</filename> Java archive by running the <command>java <option>-jar</option>
									</command> command, and remembering to add the <option>-S</option> option as a command line argument:</para>
							<screen>C:\Users\Me\My Downloads\mss-jboss-0.6&gt;java -jar bin\shutdown.jar -S</screen>
						</step>
					</stepalternatives>
				</step>
			</procedure>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_JBoss-Testing">
			<title>Testing</title>
			<para></para>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_JBoss-Uninstalling">
			<title>Uninstalling</title>
			<para>To uninstall the SIP Servlets-customized JBoss Application Server, simply delete the directory you decompressed the binary distribution archive into.</para>
		</section>
	</section>
		
	<!-- SIP Servlet-Enabled Tomcat Servlet Container -->
	<section
		id="section-binary-SIP_Servlets_Server_with_Tomcat-Installing_Configuring_and_Running">
		<title>SIP Servlet-Enabled Tomcat Servlet Container: Installing, Configuring and Running</title>
		<para>You can also run the Mobicents SIP Servlets Server on top of the Apache Tomcat Servlet Container. This section provides information on the requirements and prerequisites for running the SIP Servlet-customized Tomcat Container, as well as instructions on how to download, install, run, stop, configure, test and uninstall it.</para>
		<formalpara>
			<title>Differences Between the Standard Tomcat Installation and One Customized for Mobicents SIP Servlets</title>
			<para>Provided here is a list of differences between a standard Tomcat Servlet Container installation and the Mobicents-provided SIP Servlets-customized Tomcat installation. The differences include:</para>
		</formalpara>
		<itemizedlist>
			<listitem>
				<para>The <filename>server.xml</filename> configuration file has been modified to provide extended classes to the standard Tomcat container classes, in order to allow SIP applications to be loaded and the SIP stack started.</para>
			</listitem>
			<listitem>
				<para>A <filename>dars</filename> directory containing the default applications' router properties files for using the SIP Servlet Click-to-Call application (which comes bundled with the release) has been added to the <filename>conf</filename> directory.</para>
			</listitem>
			<listitem>
				<para>Additional JAR files have been added to enable SIP Servlet functionality. Here is a more-or-less complete list of the JAR files added to the <filename>server/default/lib</filename> directory:</para>
				<itemizedlist>
					<listitem>
						<para>sip-servlets-impl-0.6.jar</para>
					</listitem>
					<listitem>
						<para>sip-servlets-spec-1.1.6.jar</para>
					</listitem>
					<listitem>
						<para>sip-balancer-1.0-SNAPSHOT.jar</para>
					</listitem>
					<listitem>
						<para>jain-sip-api-1.2.jar</para>
					</listitem>
					<listitem>
						<para>jain-sip-ri-1.2.83.jar</para>
					</listitem>
					<listitem>
						<para>concurrent-1.3.4.jar</para>
					</listitem>
					<listitem>
						<para>log4j-1.2.14.jar</para>
					</listitem>
					<listitem>
						<para>stun4j-1.0-MOBICENTS.jar</para>
					</listitem>
					<listitem>
						<para>dnsjava-2.0.6.jar</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
		<section
			id="section-binary-SIP_Servlets_Server_with_Tomcat-PreInstall_Requirements_and_Prerequisites">
			<title>Pre-Install Requirements and Prerequisites</title>
			<variablelist
				id="variablelist-binary-SIP_Servlets_Server_with_Tomcat-Hardware_Requirements">
				<title>Hardware Requirements</title>
				<varlistentry>
					<term>Sufficient Disk Space</term>
					<listitem>
						<para>You must have sufficient disk space in order to install the SIP Servlets-customized Tomcat binary release. Once unzipped, version 0.5 of the SIP Servlets-customized Tomcat binary release requires <emphasis>at least</emphasis> 20 MB of free disk space. Keep in mind that disk space requirements may change from release to release.</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Anything Java Itself Will Run On</term>
					<listitem>
						<para>The SIP Servlets-customized Tomcat Application Server is 100% Java. It will run on the same hardware that the Tomcat Servlet Container runs on.</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<variablelist
				id="variablelist-binary-SIP_Servlets_Server_with_Tomcat-Software_Prerequisites">
				<title>Software Prerequisites</title>
				<varlistentry>
					<term>JDK 1.5 or Higher</term>
					<listitem>
						<para>A working installation of the Java Development Kit (<acronym>JDK</acronym>) version 1.5 or higher is required in order to run the SIP Servlet-customized Tomcat Servlet Container.</para>
						<para>For instructions on how to install the JDK, refer to <xref
								linkend="para-section-Mobicents_SIP_Servlets_Server-section-Installing_the_JDK_Version_5.0"/>.</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_Tomcat-Downloading">
			<title>Downloading</title>
			<para>You can download the latest version of the SIP Servlet-customized Tomcat Servlet Container from <ulink
					url="http://www.mobicents.org/mss-downloads.html"/>. The top row of the table holds the latest version. Note that there are two different releases of the SIP Servlets Server for every version: one of them is a SIP Servlets-customized JBoss Application Server, and the other is a SIP Servlet-customized Tomcat Servlet Container. Click the <literal>Download</literal> link on the right to start the download of the SIP Servlets binary distribution you prefer (JBoss or Tomcat) from Sourceforge.net.</para>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_Tomcat-Installing">
			<title>Installing</title>
			<para>Once the requirements and prerequisites have been met and you have downloaded the binary distribution zip file, you are ready to install the SIP Servlet-customized Tomcat binary distribution. Follow the instructions below for your platform, whether Linux or Windows.</para>
			<note
				id="note-binary-SIP_Servlets_Server_with_Tomcat-Use_Version_Numbers_Relevant_to_Your_Installation">
				<title>Use Version Numbers Relevant to Your Installation!</title>
				<para>For clarity, the command line instructions presented in this chapter use specific version numbers and directory names. Remember to replace them with version numbers and file names relevant to those you are actually working with.</para>
			</note>
			<procedure>
				<title>Installing the SIP Servlet-customized Tomcat Binary Distribution on Linux</title>
				<step>
					<para>First, move to the directory to which you downloaded the binary distribution zip file. For this example, we'll assume you're currently in your home directory, and that you downloaded the zip file to a subdirectory of it, referred to as <filename>downloads</filename>.</para>
					<screen>~]# cd downloads</screen>
				</step>
				<step>
					<para>In <filename>downloads</filename>, create a subdirectory to hold the unzipped SIP Servlet-customized Tomcat files. It is good practice to include the version number in this directory name; if you do so, remember to correctly match it with the version of the SIP Servlet-customized Tomcat binary distribution you downloaded.</para>
					<screen>downloads]$ mkdir &quot;mss-tomcat-0.6&quot;</screen>
				</step>
				<step>
					<para>Move the downloaded zip file into the directory you just created:</para>
					<screen>downloads]$ mv &quot;mss-0.6-apache-tomcat-6.0.14-0809301055.zip&quot; &quot;mss-tomcat-0.6&quot;</screen>
				</step>
				<step>
					<para>Move into that directory:</para>
					<screen>downloads]$ cd &quot;mss-tomcat-0.6&quot;</screen>
				</step>
				<step>
					<para>Finally, use Java's <command>jar <option>-xvf</option>
							</command> command to extract the contents of the zip file into the current directory, thus completing the install:</para>
					<screen>mss-tomcat-0.6]$ jar -xvf &quot;mss-0.6-apache-tomcat-6.0.14-0809301055.zip&quot;</screen>
					<stepalternatives>
						<step>
							<para>Alternatively, if Linux's <command>unzip</command> utility is present on your system or is installable, you can use it in lieu of Java's <command>jar <option>-xvf</option>
									</command> command:</para>
							<screen>mss-tomcat-0.6]$ unzip &quot;mss-0.6-apache-tomcat-6.0.14-0809301055.zip&quot;</screen>
							<tip>
								<para>You can also use <command>unzip</command>'s <option>-d</option>
									<filename>
								<replaceable>&lt;unzip_to_location&gt;</replaceable>
							</filename> option to extract the zip file's contents to a location other than the current directory.</para>
							</tip>
						</step>
					</stepalternatives>
				</step>
				<step>
					<para>To free disk space, you may want to delete the zip file once you've extracted its contents:</para>
					<screen>mss-tomcat-0.6]$ rm &quot;mss-0.6-apache-tomcat-6.0.14-0809301055.zip&quot;</screen>
				</step>
			</procedure>
			<procedure>
				<title>Installing the SIP Servlet-Customized Tomcat Binary Distribution on Windows</title>
				<step>
					<para>For this example, we'll assume that you downloaded the binary distribution zip file to the <filename>My Downloads</filename> folder. First, using Windows Explorer, create a subfolder in <filename>My Downloads</filename> to extract the zip file's contents into. When you name this folder, it is good practice to include the version number; if you do so, remember to correctly match it with the version of the SIP Servlet-customized Tomcat Servlet Container binary distribution you downloaded. In these instructions, we will refer to this folder as <filename>mss-tomcat-0.6</filename>.</para>
				</step>
				<step>
					<para>Double-click the downloaded zip file, selecting as the destination folder the one you just created to hold the zip file's contents.</para>
					<stepalternatives>
						<step>
							<para>Alternatively, it is also possible to use Java's <command>jar <option>-xvf</option>
									</command> command to extract the binary distribution files from the zip archive. To use this method instead, first move the downloaded zip file from <filename>My Downloads</filename> to the folder that you just created to hold the SIP Servlets Server files.</para>
						</step>
						<step>
							<para>Then, open the Windows Command Prompt and navigate to the folder holding the archive using the <command>cd</command> command.</para>
							<tip
								id="tip-binary-SIP_Servlets_Server_with_Tomcat-Opening_the_Command_Prompt_from_Windows_Explorer">
								<title>Opening the Command Prompt from Windows Explorer</title>
								<para>If you are using Windows Vista®, you can open the Command Prompt directly from Explorer. Hold down the <keycap>Shift</keycap> key and right-click on either a folder, the desktop, or inside a folder. This will cause an <guimenuitem>Open Command Window Here</guimenuitem> context menu item to appear, which can be used to open the Command Prompt with the current working directory set to either the folder you opened, or opened it from.</para>
							</tip>
						</step>
						<step>
							<para>Finally, use the <command>jar <option>-xvf</option>
									</command> command to extract the archive contents into the current folder.</para>
							<screen>C:\Users\Me\My Downloads\mss-tomcat-0.6&gt;jar -xvf &quot;mss-0.6-apache-tomcat-6.0.14-0809301055.zip&quot;</screen>
						</step>
					</stepalternatives>
				</step>
				<step>
					<para>At this point, you may want to move the folder holding the SIP Servlet-customized Tomcat binary files (in this example, the folder named <filename>mss-tomcat-0.6</filename>) to another location. This step is not strictly necessary, but it is probably a good idea to move the installation folder from <filename>My Downloads</filename> to a user-defined location for storing runnable programs. Any location will suffice, however.</para>
				</step>
				<step>
					<para>You may want to delete the zip file after extracting its contents in order to free disk space:</para>
					<screen>C:\Users\Me\My Downloads\mss-tomcat-0.6&gt;delete &quot;mss-0.6-apache-tomcat-6.0.14-0809301055.zip&quot;</screen>
				</step>
			</procedure>
		</section>
		<section
			id="section-Configuring">
			<title>Configuring</title>
			<xi:include
				xmlns:xi="http://www.w3.org/2001/XInclude"
				href="../modules/fragment-Setting_the_CATALINA_HOME_Environment_Variable.xml" />
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_Tomcat-Running">
			<title>Running</title>
			<para>Once installed, you can run the SIP Servlets-customized Tomcat Application Server by executing the one of the startup scripts in the <filename>bin</filename> directory (on Linux or Windows), or by double-clicking the <filename>run.bat</filename> executable batch file in that same directory (on Windows only). However, we suggest always starting Tomcat using the terminal or Command Prompt because you are then able to read&#8212;and act upon&#8212;any startup messages, and possibly debug any problems that may arise. In the Linux terminal or Command Prompt, you will be able to tell that the server started successfully if the last line of output is similar to the following:</para>
			<programlisting><![CDATA[Using CATALINA_BASE:   /home/silas/temp/apps/mobicents/sip_servlets_server/mss-tomcat-0.6
Using CATALINA_HOME:   /home/silas/temp/apps/mobicents/sip_servlets_server/mss-tomcat-0.6
Using CATALINA_TMPDIR: /home/silas/temp/apps/mobicents/sip_servlets_server/mss-tomcat-0.6/temp
Using JRE_HOME:       /etc/java-config-2/current-system-vm]]></programlisting>
			<para>Detailed instructions are given below, arranged by platform.</para>
			<procedure>
				<title>Running the SIP Servlets-customized Tomcat Application Server on Linux</title>
				<step>
					<para>Change your working directory to the SIP Servlets-customized Tomcat's topmost directory (the one in which you extracted the zip file's contents to):</para>
					<screen>downloads]$ cd &quot;mss-tomcat-0.6&quot;</screen>
				</step>
				<step
					performance="optional">
					<para>(Optional) Ensure that the <filename>bin/startup.sh</filename> start script is executable:</para>
					<screen>mss-tomcat-0.6]$ chmod +x bin/startup.sh</screen>
				</step>
				<step>
					<para>Finally, execute the <filename>startup.sh</filename> Bourne shell script:</para>
					<screen>mss-tomcat-0.6]$ ./bin/startup.sh</screen>
				</step>
				<step>
					<para>After starting the server successfully, you can access the default web applications included with the SIP Servlet-customized Tomcat Servlet Container by opening the following URL in your browser: <ulink
							url="http://localhost:8080/"/>.</para>
				</step>
			</procedure>
			<procedure>
				<title>Running the SIP Servlets-customized Tomcat Application Server on Windows</title>
				<step>
					<para>There are several different ways to start the SIP Servlets-customized Tomcat Application Server on Windows. All of the following methods accomplish the same task.</para>
					<para>Using Windows Explorer, change your folder to the one in which you unzipped the downloaded zip file, and then to the <filename>bin</filename> subfolder.</para>
				</step>
				<step>
					<para>Although not the preferred way (see below), it is possible to start the SIP Servlets-customized Tomcat by double-clicking on the <filename>startup.bat</filename> executable batch file.</para>
					<stepalternatives>
						<step>
							<para>As mentioned above, the best way to start the SIP Servlets-customized Tomcat is by using the Command Prompt. Doing it this way will allow you to view all of the server startup details, which will enable you to easily determine whether any problems were encountered during the startup process. You can open the Command Prompt directly from the <filename>&lt;topmost_directory&gt;\bin</filename> folder in Windows Explorer (see <xref
									linkend="tip-binary-SIP_Servlets_Server_with_JBoss-Opening_the_Command_Prompt_from_Windows_Explorer"/> for details), or you can open the Command Prompt via the <guilabel>Start</guilabel> menu and navigate to the correct folder:</para>
							<screen>C:\Users\Me\My Downloads&gt; cd &quot;mss-tomcat-0.6&quot;</screen>
						</step>
						<step>
							<para>Start the JBoss Application Server by running the executable <filename>startup.bat</filename> batch file:</para>
							<screen>C:\Users\Me\My Downloads\mss-tomcat-0.6&gt;bin\startup.bat</screen>
						</step>
					</stepalternatives>
				</step>
				<step>
					<para>After starting the server successfully, you can access the default web applications included with the SIP Servlet-customized Tomcat Servlet Container by opening the following URL in your browser: <ulink
							url="http://localhost:8080/"/>.</para>
				</step>
			</procedure>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_Tomcat-Using">
			<title>Using</title>
			
			<section
				id="section-SIP_Connectors">
				<title>SIP Connectors</title>
				<para>You can add SIP Connectors in the same way that you add HTTP Connectors: by adding a <literal>Connector</literal> element under the <literal>Service</literal> element in the container's <filename>server.xml</filename> configuration file.</para>
				<para>For example, to add a SIP Connector on the IP address <literal>127.0.0.1</literal>, on port <literal>5080</literal>, using the UDP transport protocol, you should insert the following XML element:</para>
				
				<example
					id="example-Adding_a_SIP_Connector_to_server.xml">
	<title>Adding a SIP Connector to server.xml</title>
<programlisting
						id="proglist-Adding_a_SIP_Connector_to_server.xml"
						linenumbering="numbered"
						role="XML"><![CDATA[<Connector
	port="5080"
	ipAddress="127.0.0.1"
	protocol="org.mobicents.servlet.sip.startup.SipProtocolHandler"
	signalingTransport="udp"
	threadPoolSize="64"
	isReentrantListener="true"
	useStun="false"
	stunServerAddress="stun01.sipphone.com"
	stunServerPort="3478"
	logLevel="DEBUG"
	debugLog="logs/debuglog.txt"
	serverLog="logs/serverlog.txt"
	sipStackName="SIP-Servlet-Tomcat-Server"
	sipPathName="gov.nist"/>
]]></programlisting>
</example>
				<para>Provided here are descriptions of the SIP Connector element's attributes:</para>
				<variablelist>
					<varlistentry>
						<term>port</term>
						<listitem>
							<para>The number of the port on which the container will be able to receive SIP messages.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>ipAdress</term>
						<listitem>
							<para>The IP address at which the container will be able to receive SIP messages.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>protocol</term>
						<listitem>
							<para>This attribute specifies that this is a SIP Connector and not an HTTP Connector. There is no need to change this property.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>signalingTransport</term>
						<listitem>
							<para>the transport on which the container will be ab/le to receive SIP messages: <quote>udp</quote> for example</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>threadPoolSize</term>
						<listitem>
							<para>This attribute is for concurrency control on the number of simultaneous active threads in the NIST SIP stack. Refer to the <ulink
									url="http://www.cs.fiu.edu/~ege/JAIN/api/">NIST SIP stack Javadoc API documentation</ulink> for more information.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>isReentrantListener</term>
						<listitem>
							<para>If the listener is re-entrant, then the SIP stack manages a thread pool and synchronously calls the listener from the same thread which read the message. Refer to the <ulink
									url="http://www.cs.fiu.edu/~ege/JAIN/api/">NIST SIP stack Javadoc API documentation</ulink> for more information.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>useStun</term>
						<listitem>
							<para>Setting this attribute to <quote>true</quote> enables STUN support for this Connector. If you set it to <quote>true</quote>, ensure that the <literal>ipAddress</literal> attribute is <emphasis>not</emphasis> set to <literal>127.0.0.1</literal>. This attribute defaults to <quote>false</quote>. Refer to the documentation on STUN support for more information regarding STUN support.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>stunServerAddress</term>
						<listitem>
							<para>Set this to the STUN server address that will be used to discover the public IP address of this SIP Connector. This attribute is only required if the <literal>useStun</literal> attribute is set to <quote>true</quote>. Refer to the documentation on STUN support for more information regarding STUN support.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>stunServerPort</term>
						<listitem>
							<para>This attribute should be set to the STUN server port of the STUN server used in the <literal>stunServerAddress</literal> attribute. You should rarely need to change this attribute; also, it is only needed if the <literal>useStun</literal> attribute is set to <quote>true</quote>. Refer to the documentation on STUN support for more information regarding STUN support.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>logLevel</term>
						<listitem>
							<para>The log level of the underlying JAIN SIP stack.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>debugLog</term>
						<listitem>
							<para>The debug log location of the underlying JAIN SIP stack.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>serverLog</term>
						<listitem>
							<para>The server log location of the underlying JAIN SIP stack.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>sipStackName</term>
						<listitem>
							<para>The name of the underlying JAIN SIP sack.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>sipPathName</term>
						<listitem>
							<para>The JAIN SIP stack implementation to use. You will probably never need to change the value of this attribute. It defaults to the famous NIST SIP stack. If you ever do change this value, you should remember to insert the JAIN SIP JAR implementation in the container's <filename>lib</filename> directory.</para>
						</listitem>
					</varlistentry>
				</variablelist>
			</section>
			<section
				id="section-Application_Routing_and_Service_Configuration">
				<title>Application Routing and Service Configuration</title>
				<para>The application router is called by the container to select a SIP servlet application to service an initial request. It embodies the logic used to choose which applications to invoke. An application router is required for a container to function, but it is a separate logical entity from the container. The application router is solely responsible for application selection and must not implement application logic. For example, the application router cannot modify a request or send a response.</para>
				<para>For more information about the application router, refer to the following sections of the JSR 289 specification: Application Router Packaging and Deployment, Application Selection Process, and Appendix C.
			</para>
				<para>In order to configure the application router, you should edit the <literal>Service</literal> element in the container's <filename>server.xml</filename> configuration file:</para>
				<example
					id="example-Configuring_the_Service_Element_in_the_Containers_server.xml">
	<title>Configuring the Service Element in the Container's server.xml</title>
<programlisting
						id="proglist-Configuring_the_Service_Element_in_the_Containers_server.xml"
						linenumbering="numbered"
						role="XML"><![CDATA[<Service
	name="Sip-Servlets"
	className="org.mobicents.servlet.sip.startup.SipStandardService"
	sipApplicationDispatcherClassName="org.mobicents.servlet.sip.core.SipApplicationDispatcherImpl"
	sipApplicationRouterClassName="org.mobicents.servlet.sip.router.DefaultApplicationRouter"
	darConfigurationFileLocation="file:///home/silas/workspaces/mobicents-sip-servlets/sip-servlets-examples/reinvite-demo/reinvite-dar.properties">
]]></programlisting>
</example>
				<para>Provided here is a description of the SIP Service element's attributes:</para>
				<variablelist>
					<varlistentry>
						<term>className</term>
						<listitem>
							<para>This attribute specifies that the servlet container is a <emphasis>converged</emphasis> (i.e. SIP + HTTP) servlet container. This attribute can also be used to handle load-balancing and failover.</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>sipApplicationDispatcherClassName</term>
						<listitem>
							<para>This attribute specifies the class name of the <literal>org.mobicents.servlet.sip.core.SipApplicationDispatcher</literal> implementation to use. The routing algorithm and application selection process is performed in that class.</para>
						</listitem>
					</varlistentry>
				<!-- Evidently removed...
				<varlistentry>
					<term>sipApplicationRouterClassName</term>
					<listitem>
						<para>sipApplicationRouterClassName : (removed starting from 0.5 version since the JSR 289 PFD-2 defines a mechanism to package and load an application router) This attribute specifies the class name of the javax.servlet.sip.SipApplicationRouter implementation. This allows to plug any Application Router to change the application selection logic.</para>
					</listitem>
				</varlistentry>-->
					<varlistentry>
						<term>darConfigurationFileLocation</term>
						<listitem>
							<para>The default application router file location. This is used by the default application router to determine the application selection logic. Refer to Appendix C of the JSR 289 specification for more details.</para>
						</listitem>
					</varlistentry>
				</variablelist>
			</section>
			<section
				id="section-SIP_Serlets_Server_Logging">
				<title>SIP Serlets Server Logging</title>
				<para>There are two separate levels of logging:</para>
				<itemizedlist>
					<listitem>
						<para>Logging at the container level, which can be configured using the <filename>log4j.xml</filename> configuration file, which is usually located in the container's <filename>lib</filename> directory.</para>
					</listitem>
					<listitem>
						<para>Logging of the NIST SIP stack, which is configured in the <literal>Connector</literal> element of the container's <filename>server.xml</filename> configuration file: see <xref
								linkend="section-SIP_Connectors"/>.</para>
					</listitem>
				</itemizedlist>
			</section>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_Tomcat-Stopping">
			<title>Stopping</title>
			<para>Just as there are multiple ways to run the SIP Servlets-customized Tomcat Servlet Container, there are multiple ways to stop it. Detailed instructions for stopping the Tomcat Servlet Container are given below, arranged by platform. Note that if you properly stop the server, you will see the following three lines as the last output in the Linux terminal or Command Prompt (the terminal/Command Prompt output of both running and stopping the SIP Servlet-customized Tomcat Servlet Container is the same):</para>
			<screen><![CDATA[Using CATALINA_BASE:   /home/silas/temp/apps/mobicents/sip_servlets_server/mss-tomcat-0.6
Using CATALINA_HOME:   /home/silas/temp/apps/mobicents/sip_servlets_server/mss-tomcat-0.6
Using CATALINA_TMPDIR: /home/silas/temp/apps/mobicents/sip_servlets_server/mss-tomcat-0.6/temp
Using JRE_HOME:       /etc/java-config-2/current-system-vm]]></screen>
			<procedure>
				<title>Stopping the SIP Servlets-customized Tomcat Servlet Container on Linux by Executing <filename>shutdown.sh</filename>
				</title>
				<step>
					<para>Another way to shut down the Tomcat Servlet Container is by executing the <filename>shutdown.sh</filename> Bourne shell script in the <filename>&lt;topmost_directory&gt;/bin</filename> directory. To do so, first change your working directory to the binary distribution's topmost directory (the one to which you extracted the downloaded zip file's contents):</para>
					<screen>downloads]$ cd &quot;mss-tomcat-0.6&quot;</screen>
				</step>
				<step
					performance="optional">
					<para>(Optional) Ensure that the bin/shutdown.sh start script is executable:</para>
					<screen>mss-tomcat-0.6]$ chmod +x bin/shutdown.sh</screen>
				</step>
				<step>
					<para>Finally, run the <filename>shutdown.sh</filename> executable Bourne shell script</para>
					<screen>mss-tomcat-0.6]$ ./bin/shutdown.sh</screen>
				</step>
			</procedure>
			<procedure>
				<title>Stopping the SIP Servlets-customized Tomcat Servlet Container on Windows</title>
				<step>
					<para>Stopping the Tomcat Servlet Container on Windows consists in executing the <filename>shutdown.bat</filename> executable batch script in the <filename>bin</filename> subfolder of the SIP Servlets-customized Tomcat binary distribution:</para>
					<screen>C:\Users\Me\My Downloads\mss-tomcat-0.6&gt;bin\shutdown.bat</screen>
				</step>
			</procedure>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_Tomcat-Testing">
			<title>Testing</title>
			<para></para>
		</section>
		<section
			id="section-binary-SIP_Servlets_Server_with_Tomcat-Uninstalling">
			<title>Uninstalling</title>
			<para>To uninstall the SIP Servlet-customized Tomcat Servlet Container, simply delete the directory you decompressed the binary distribution archive into.</para>
		</section>
	</section>
</section>

