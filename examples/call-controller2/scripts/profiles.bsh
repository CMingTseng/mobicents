import java.util.Hashtable;

import javax.management.Attribute;
import javax.management.ObjectName;
import javax.naming.InitialContext;
import javax.slee.Address;
import javax.slee.AddressPlan;

import org.jboss.jmx.adaptor.rmi.RMIAdaptor;
import org.mobicents.slee.container.management.jmx.SleeBeanShellUtil;

SleeBeanShellUtil slee = null;

/* script variables */
RMIAdaptor adaptor;

String controllerProfileSpecID = "ProfileSpecificationID[CallControlProfileCMP#org.mobicents#0.1]";

// Test variables
String profileTableName = "CallControl";

//Change this value to ip address that you use to start server (-b option)
String jbossBindAddress = "127.0.0.1";

String domain = "nist.gov";

Address userAddress = null;

Address[] blockedAddresses = new Address[2];

Address backupAddress = null;

	


public void start() throws Exception {
	Hashtable env = new Hashtable();
	env.put("java.naming.factory.initial","org.jnp.interfaces.NamingContextFactory");
	env.put("java.naming.provider.url", "jnp://"+jbossBindAddress);
	env.put("java.naming.factory.url.pkgs","org.jboss.naming:org.jnp.interfaces");
	adaptor = (RMIAdaptor) new InitialContext(env).lookup("jmx/rmi/RMIAdaptor");

	System.setProperty("jboss.bind.address", jbossBindAddress);
	slee = new SleeBeanShellUtil();
	slee.createProfileTable(controllerProfileSpecID,profileTableName);
	System.out.println("*** AddressProfileTable " + profileTableName + " created.");

	System.out.println("********** CREATE PROFILE: torosvi **********");
	blockedAddresses[0] = new Address(AddressPlan.SIP, "sip:mobicents@"+domain);
	blockedAddresses[1] = new Address(AddressPlan.SIP, "sip:hugo@"+domain);
	newProfile(profileTableName, "torosvi", "sip:torosvi@"+domain, blockedAddresses, null, true);

	System.out.println("********** CREATE PROFILE: mobicents **********");
	newProfile(profileTableName, "mobicents", "sip:mobicents@"+domain, null, null, false);

	System.out.println("********** CREATE PROFILE: victor **********");
	backupAddress = new Address(AddressPlan.SIP, "sip:torosvi@"+domain);
	newProfile(profileTableName, "victor", "sip:victor@"+domain, null, backupAddress, false);

	System.out.println("********** CREATE PROFILE: vhros2 **********");
	newProfile(profileTableName, "vhros2", "sip:vhros2@"+domain, null, null, true);

	System.out.println("********** CREATE PROFILE: vmail **********");
	newProfile(profileTableName, "vmail", "sip:vmail@"+domain, null, null, true);
	
	System.out.println("********* Call Voice Mail service activated...");
	System.out.println("Finished successfully deployment of SLEE services and creation of Profiles!");

}

private void newProfile(String profileTableName, String profileName,
		String callee, Address[] block, Address backup, boolean state)
		throws Exception {

	ObjectName profileObjectName = (ObjectName) slee.createProfile(profileTableName, profileName);
	System.out.println("*** AddressProfile " + profileName + " created: " + profileObjectName);

	if (!(Boolean) adaptor.getAttribute(profileObjectName, "ProfileWriteable")) {
		Object[] o = new Object[] {};
		adaptor.invoke(profileObjectName, "editProfile", o, new String[] {});
		System.out.println("*** Setting profile editable.");
	} else {
		System.out.println("********* Profile is editable.");
	}

	// Setting and Committing
	userAddress = new Address(AddressPlan.SIP, callee);

	Attribute userAttr = new Attribute("UserAddress", userAddress);
	Attribute blockedAttr = new Attribute("BlockedAddresses", block);
	Attribute backupAttr = new Attribute("BackupAddress", backup);
	Attribute voicemailAttr = new Attribute("VoicemailState", state);

	adaptor.setAttribute(profileObjectName, userAttr);
	adaptor.setAttribute(profileObjectName, blockedAttr);
	adaptor.setAttribute(profileObjectName, backupAttr);
	adaptor.setAttribute(profileObjectName, voicemailAttr);

	System.out.println("*** Profile modifications are not committed yet.");

	adaptor.invoke(profileObjectName, "commitProfile", new Object[] {},new String[] {});
	System.out.println("*** Profile modifications are committed.");
}

try {
	start();
} catch (Exception e) {
	e.printStackTrace();
}





