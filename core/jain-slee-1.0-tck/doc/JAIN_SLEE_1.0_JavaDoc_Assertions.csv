"Last  4809","JAIN SLEE 1.0 API Javadoc Assertions",,,,,,"T?: 0","High:174","1376 (ex methods)",22,168,354,24,24,318,,449,0,0,3
,,,,,,,,,,,,,,,,,,,,
"ID","SLEE Class","SLEE Method","Para","Vsn","Type","Ref","T","Pr","Testable Assertion(s) (with Context info)","Spec Notes","Test Notes","Test Title","Equivalence Classes & Boundary Values","Chosen Test Cases","Test Procedure (including checks)","Author","Code Status","Dirty Flag","Subject to change?","May be untestable?"
"Valid Values",,,,,,,,,,,,,,,,,,,,
,,,,"Pfd2","Assertion",,"Y","High",,,,,,,,,"Active",,"Y","Y"
,,,,"Pfd3","Example",,"Y","Low",,,,,,,,,"Complete",,,
,,,,,"Implied",,"Y",,,,,,,,,,"Removed",,,
,,,,,"Ap Req",,"Y",,,,,,,,,,,,,
,,,,,"Ap Eg",,"Y",,,,,,,,,,,,,
,,,,,"Expect Repeat",,"Y",,,,,,,,,,,,,
,,,,,"Method",,"N",,,,,,,,,,,,,
,,,,,"Ap Recom",,"N",,,,,,,,,,,,,
,,,,,"Impossible",,"N",,,,,,,,,,,,,
,,,,,"Context",,"N",,,,,,,,,,,,,
,,,,,"Self-Evident",,"N",,,,,,,,,,,,,
,,,,,"Repeat",,"N",,,,,,,,,,,,,
,,,,,"Covered",,"N",,,,,,,,,,,,,
,,,,,"Optional",,"N",,,,,,,,,,,,,
,,,,,"Bug",,"N",,,,,,,,,,,,,
,,,,,"Out of Scope",,"N",,,,,,,,,,,,,
,,,,,"Removed",,"!",,,,,,,,,,,,,
"Assertions",,,,,,,,,,,,,,,,,,,,
3000,"javax.slee.ActivityContextInterface","getActivity",,"Pfd2","Method",3003,,,,,,,,,,,"Complete",,,
3001,,,1,"Pfd2","Context",,,,"Get the Activity object for the activity encapsulated by this object.",,,,,,,,,,,
3002,,,2,"Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3003,,,3.1,"Pfd2","Assertion",,,"High","Returns the Activity object.",,,"GetActivityTest",,,"Invoke getActivity(), and confirm that the returned result is not null, and is a TCKActivity.","Cath","Complete",,,
3004,,,4.1,"Pfd2","Impossible",,,,"Throws TransactionRequiredLocalException if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3005,,,4.2,"Pfd2","Impossible",,,,"Throws SLEEException if the activity could not be obtained due to a system-level failure.",,,,,,,,,,,
3006,"javax.slee.ActivityContextInterface","attach",,"Pfd2","Method","3008,3009",,,,,,,,,,,"Complete",,,
3007,,,1,"Pfd2","Covered",3008,,,"Attach an SBB entity to the Activity Context.",,,,,,,,,,,
3008,,,1,"Pfd2","Assertion",,,"High","The SBB entity will subsequently begin to receive events that it is interested in that occur on the underlying activity.",,,"AttachEventsTest",,,"Attach an Sbb to an activity, and ensure it receives events fires on that activity.","Cath","Complete",,,
3009,,,1,"Pfd2","Assertion",,,"High","If the SBB has any <event> deployment descriptor elements with the mask-on-attach attribute set to True, those events will automatically be masked from the SBB entity until the event mask is explicitly changed via the SbbContext.maskEvent method.",,,"AttachMaskedTest",,,,"Cath","Complete",,,
3010,,,2,"Pfd2","Assertion",,,"Low","If the specified SBB entity is already attached to the Activity Context, this method has no effect.",,,"AttachTwiceTest",,,,"Cath","Complete",,,
3015,,,3,"Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3016,,,4.1,"Pfd2","Assertion",,,"Low","Throws java.lang.NullPointerException if sbb is null.",,,"AttachNullTest",,,,"Cath","Complete",,,
3017,,,4.2,"Pfd2","Impossible",,,,"Throws TransactionRequiredLocalException if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3018,,,4.3,"Pfd2","Assertion",,,"High","Throws TransactionRolledbackLocalException if sbb does not reference a valid SBB entity.",,,"AttachInvalidTest",,,"In a parent SBB's initial event handler, create a child SBB, remove it, then try to attach it to the ACI. Check that the TransactionRolledbackLocalException is thrown.","Cath,Matt","Complete",,,
3019,,,4.4,"Pfd2","Impossible",,,,"Throws SLEEException if the SBB entity could not be attached due to a system-level failure.",,,,,,,,,,,
3020,"javax.slee.ActivityContextInterface","detach",,"Pfd2","Method",3022,,,,,,,,,,,"Complete",,,
3021,,,1,"Pfd2","Covered",3022,,,"Detach an SBB entity from the Activity Context.",,,,,,,,,,,
3022,,,1,"Pfd2","Assertion",,,"High","The SBB entity will no longer receive any events that occur on the underlying activity.",,,"DetachEventsTest",,,,"Cath","Complete",,,
3023,,,2,"Pfd2","Assertion",,,"Low","If the specified SBB is not attached to the Activity Context, this method has no effect.",,,"DetachUnattachedTest",,,,"Cath","Complete",,,
3024,,,3,"Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3025,,,4.1,"Pfd2","Assertion",,,"Low","Throws java.lang.NullPointerException if sbb is null.",,,"DetachNullTest",,,,"Cath","Complete",,,
3026,,,4.2,"Pfd2","Impossible",,,,"Throws TransactionRequiredLocalException if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3027,,,4.3,"Pfd2","Assertion",,,"High","Throws TransactionRolledbackLocalException if sbb does not reference a valid SBB entity.",,,"DetachInvalidTest",,,"In a parent SBB's initial event handler, create a child SBB,attach it to the ACI, remove it, then try to detach it from the ACI. Check that the TransactionRolledbackLocalException is thrown.","Cath,Matt","Complete",,,
3028,,,4.4,"Pfd2","Impossible",,,,"Throws SLEEException if the SBB entity could not be detached due to a system-level failure.",,,,,,,,,,,
4524,"javax.slee.ActivityContextInterface","isEnding",,"Pfd3","Method",4507,,,,,,,,,,,,,,
4505,,,1,"Pfd3","Context",,,,"Determine if the Activity Context is in the ending state.",,,,,,,,,,,
4506,,,1,"Pfd3","Assertion",,,"High","Events cannot be fired by SBBs on an activity context that is in the ending state.",,,"Test4506Test",,,"Create a NullActivity and fire two events on it.  In the first events handler end the activity.  In the second events handler attempt to fire a third event on the activity.  Check that an exception is thrown and that the third event is never delivered.","Nick","Complete",,,
4525,,,2,"Pfd3","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4507,,,3,"Pfd3","Assertion",,,"High","Returns true if the activity context is in the ending state, false otherwise.",,,"Test4506Test",,,"Create a NullActivity and fire two events on it.  In the first events handler check that isEnding returns false,  then end the activity.  In the second events handler check that isEnding returns true.","Nick","Complete",,,
4508,,,4.1,"Pfd3","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4509,,,4.2,"Pfd3","Impossible",,,,"SLEEException - if the ending state of the activity context could not be determined due to a system-level failure.",,,,,,,,,,,
3029,"javax.slee.ActivityEndEvent",,1,"Pfd2","Context",,,,"This interface is implemented by activity end events generated by the SLEE when an activity ends.",,,,,,,,,,,
3030,"javax.slee.ChildRelation","create",,"Pfd2","Method",3031,,,,,,,,,,,"Complete",,,
3031,,,1,"Pfd2","Assertion",,,"High","Create a new SBB entity of the SBB type associated with the relation.",,,"Test3031Test",,,"Use ChildRelation.create(), and ensure that the newly created SbbLocalObject has been added to the ChildRelation.iterator().","Cath","Complete",,,
3032,,,1,"Pfd2","Context",,,,"The new SBB entity is automatically added to the relationship set.",,,"Test3031Test",,,"See above (3031)","Cath","Complete",,,
3033,,,1,"Pfd2","Context",,,,"The returned object may be cast to the required local interface before using the normal Java typecast mechanism.",,,,,,,,,,,
3034,,,2,"Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3035,,,3,"Pfd2","Covered",3031,,,"Returns the new SBB entity.",,,,,,,,,,,
3036,,,4.1,"Pfd2","Covered","(many)",,,"Throws CreateException if an SBB entity could not be created.  This method may have propagated from the SBB object's Sbb.sbbCreate() or Sbb.sbbPostCreate(), or may have been thrown by the SLEE.",,"Covered by tests related to sbbCreate(), and sbbPostCreate() being allowed to throw CreateException.",,,,,,,,,
3037,,,4.2,"Pfd2","Impossible",,,,"Throws TransactionRequiredLocalException if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3038,,,4.3,"Pfd2","Impossible",,,,"Throws SLEEException if the child sbb could not be created due to system-level failure.",,,,,,,,,,,
4526,"javax.slee.ChildRelation",,,,"Context",,,,"The ChildRelation interface is used by SBBs that require child relationships with other SBBs.",,,,,,,,,,,
4527,,,,"Pfd3","Ap Req",,,"Low","Any child-relation accessor method defined in an SBB abstract class must have this interface as its return type.",,,,,,,,,,,
4528,,,,,"Repeat","2178",,,"A ChildRelation object and any java.util.Iterator objects obtained from it are only valid within the transaction in which they materialized.",,,,,,,,,,,
4529,,,,,"Context",,,,"A ChildRelation object conforms to the Java Collections API with the following exceptions:",,,,,,,,,,,
4530,,,,,"Repeat","2107",,,"The add and addAll methods throw java.lang.UnsupportedOperationException if an attempt is made to modify the collection.",,,,,,,,,,,
4531,,,,"Pfd3","Ap Req",,,"Low","The create method should be used instead to add child SBB entities to the collection.",,,,,,,,,,,
4532,,,,,"Repeat","2111",,,"If an SBB entity is removed from a collection as a result of a clear, remove, removeAll or retainAll method call on a ChildRelation  object, or by a remove method call on a java.util.Iterator object obtained from a ChildRelation object, a cascade delete of the SBB entity tree rooted at the removed SBB entity is initiated.  This means that removing an SBB entity  from a ChildRelation collection has the same behaviour as if the SbbLocalObject remove method was invoked on the removed SBB entity itself.",,,,,,,,,,,
4533,,,,,"Repeat","2118",,,"If a null parameter is passed to any method, a java.lang.NullPointerException is thrown.",,,,,,,,,,,
3039,"javax.slee.ChildRelation","Iterator (Collection.iterator())",,"Pfd2","Method",428,,,,,,,,,,,,,,
3040,,,1,"Pfd2","Removed",,,,"Get an iterator that iterates over the set of SBB enities currently participating in the relationship.",,,,,,,,,,,
3041,,,2,"Pfd2","Removed",,,,"The iterator returned by this method will not support the remove operation.  Attempts to use the remove operation result in java.lang.UnsupportedOperationException being thrown.",,,,,,,,,,,
3042,,,3,"Pfd2","Removed",,,,"An iterator can only be used from within the transaction context from whence it originated.",,"The Sbb can't store the Iterator in a CMP field for use in another transaction, as the Iterator is not guaranteed to be serializable. If the Sbb object stores a transient reference to it, there is no guarantee that the same Sbb object will receive the next call for the entity.  Also, the behaviour of the SLEE is not specified in the case where this rule is broken.",,,,,,,,,
3043,,,4,"Pfd2","Removed",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3044,,,5.1,"Pfd2","Assertion",,,"High","Returns an iterator that iterates over the set of SBB entities currently participating in the relationship.",,,"Test3044Test",,,"Ensure that an iterator is returned that contains the set of SBB entities participating in the relationship.  See 3031.","Cath","Complete",,,
3045,,,6.1,"Pfd2","Removed",,,,"Throws TransactionRequiredLocalException if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3046,,,6.2,"Pfd2","Removed",,,,"Throws SLEEException if the child relation iterator could not be obtained due to system-level failure.",,,,,,,,,,,
3047,"javax.slee.ChildRelation","Size (Collection.size())",,"Pfd2","Method",3050,,,,,,,,,,,"Complete",,,
3048,,,1,"Pfd2","Removed",,,,"Get the number of SBB entities in this relation.",,,,,,,,,,,
3049,,,2,"Pfd2","Removed",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3050,,,3,"Pfd2","Assertion",,,"High","Returns the number of SBB entities in this relation.",,,"Test3044Test",,,"Before creating the child ensure that this returns 0, create child, then it should return 1, then destroy the child to make it return 0 again.","Cath","Complete",,,
3051,,,4.1,"Pfd2","Removed",,,,"Throws TransactionRequiredLocalException if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3052,,,4.2,"Pfd2","Removed",,,,"Throws SLEEException if the size of the child relation could not be obtained due to a system-level failure.",,,,,,,,,,,
3053,"javax.slee.ChildRelation","Contains (Collection.contains())",,"Pfd2","Method","422,3044",,,,,,,,,,,"Complete",,,
3054,,,1,"Pfd2","Removed",,,,"Determine if this relation contains a specific SBB entity.",,,,,,,,,,,
3055,,,2,"Pfd2","Removed",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3056,,,4,"Pfd2","Assertion",,,"High","Returns true if this relation contains the specified SBB entity, false otherwise.",,"Need to create child, call ChildRelation.contains(); it should contain this child (Test 3044).  sbb/abstractclass/Test422Test has a test for this with the child removed.","Test3044Test",,,,"Cath","Complete",,,
3057,,,5.1,"Pfd2","Removed",,,,"Throws java.lang.NullPointerException if sbb is null.",,,,,,,,,,,
3058,,,5.2,"Pfd2","Removed",,,,"Throws TransactionRequiredLocalException if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3059,,,5.3,"Pfd2","Removed",,,,"Throws SLEEException if the presence of the SBB entity  could not be determined due to a system-level failure.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3060,"javax.slee.ComponentID","equals",,"Pfd2","Method",3063,,,,,,,,,,,"Complete",,,
3061,,,1,"Pfd2","Context",,,,"Compare this component identifier with equality for another object.",,,,,,,,,,,
3062,,,2,"Pfd2","Context",,,,"Overrides equals in class java.lang.Object.",,,,,,,,,,,
3063,,,4,"Pfd2","Assertion",,,"High","Returns true if obj is a component identifier that has the same type and identity as this, otherwise false.",,,"Test3063Test",,,"Install two components into the SLEE, verify that their componentIDs don't equal one another via equals.  Then check that they are equal to themselves.","Cath","Complete",,,
3064,"javax.slee.ComponentID","hashCode",,"Pfd2","Method","3067",,,,,,,,,,,,,,
3065,,,1,"Pfd2","Context",,,,"Get a hash code for this component identifier.",,,,,,,,,,,
3066,,,2,"Pfd2","Assertion",,,"Low","Overrides hashCode in class java.lang.Object.",,,,,,,,,,,
3067,,,3,"Pfd2","Assertion",,,"Low","Returns a hash code for this identifier.",,,"Test3067Test",,,"Call ComponentID.hashCode() and verify that it doesn't throw any kind of exception.","Cath","Complete",,,
3068,"javax.slee.ComponentID","toString",,"Pfd2","Method","3071",,,,,,,,,,,,,,
3069,,,1,"Pfd2","Context",,,,"Get a string representation for this identifier.",,,,,,,,,,,
3070,,,2,"Pfd2","Assertion",,,"Low","Overrides string in class java.lang.Object.",,,,,,,,,,,
3071,,,3,"Pfd2","Assertion",,,"Low","Returns a string representation for this identifier.",,,"Test3067Test",,,"Call ComponentID.toString() and make sure no exception is thrown.","Cath","Complete",,,
3072,"javax.slee.EventTypeID","-",1,"Pfd2","Context",,,,"The EventTypeID interface is a marker interface implemented by every Java object that encapsulates event type component identity.  An EventTypeID object is also known as an event type identifier.",,,,,,,,,,,
3073,"javax.slee.InitialEventSelector","-",1,"Pfd2","Context",,,,"This interface defines selection criteria for initial events for Services.  The SLEE provides an implementation of this interface to an initial event selector method defined in an SBB abstract class.",,,,,,,,,,,
3074,"javax.slee.InitialEventSelector","isActivityContextSelected.",,"Pfd2","Method",754,,,,,,,,,,,"Complete",,,
3075,,,1,"Pfd2","Context",,,,"Determine if the Activity Context has been selected for use in theconvergence name.",,,,,,,,,,,
3076,,,2,"Pfd2","Covered",754,,,"Returns true if the Activity Context has been selected for use in the convergence name, false otherwise.",,,,,,,,,,,
3077,"javax.slee.InitialEventSelector","setActivityContextSelected",,"Pfd2","Method",3079,,,,,,,,,,,"Complete",,,
3078,,,1,"Pfd2","Context",,,,"Set the selection criteria for the Activity Context convergence name variable.",,,,,,,,,,,
3079,,,2,"Pfd2","Assertion",,,"High","select - flag indicating whether or not the Activity Context should be used in the convergence name.",,,"ConvergenceNameTest-Activity-IES","Value: same as for an existing Sbb; new.","Value: same as for an existing Sbb; new.","Select ActivityContext as the sole convergence name variable, via the InitialEventSelector. Fire initial event 1 to create Sbb instance 1. Fire initial event 2 with the same relevant convergence name value as event 1. Check that the event goes to instance 1, at that no new instance is created. Fire initial event 3 with a different relevant convergence name value. Check that a new Sbb instance is created, and that the existing Sbb receives the event if and only if attached to the activity on which the event was fired.","Matt","Complete",,,
3080,"javax.slee.InitialEventSelector","isAddressProfileSelected",,"Pfd2","Method",754,,,,,,,,,,,"Complete",,,
3081,,,1,"Pfd2","Context",,,,"Determine if the Address Profile has been selected for use in the convergence name.",,,,,,,,,,,
3082,,,2,"Pfd2","Covered",754,,,"Returns true if the Address Profile has been selected for use in the convergence name, false otherwise.",,,,,,,,,,,
3083,"javax.slee.InitialEventSelector","setAddressProfileSelected",,"Pfd2","Method",3085,,,,,,,,,,,"Complete",,,
3084,,,1,"Pfd2","Context",,,,"Set the selection criteria for the Address Profile convergence name variable.",,,,,,,,,,,
3085,,,2,"Pfd2","Assertion",,,"High","select - flag indicating whether or not the Address Profile should be used in the convergence name.",,,"ConvergenceNameTest-AddressProfile-IES","Value: same as for an existing Sbb; new.","Value: same as for an existing Sbb; new.","Select AddressProfile as the sole convergence name variable, via the deployment descriptor. Fire initial event 1 to create Sbb instance 1. Fire initial event 2 with a different address from the same address profile as that of event 1. Check that the event goes to the same instance as event 1, that no new SBB instance is created. Fire initial event 3 with an address from a different profile. Check that a new Sbb instance is created, and that the existing Sbb receives the event if and only if attached to the activity on which the event was fired.","Nick","Complete",,,
3086,"javax.slee.InitialEventSelector","isAddressSelected",,"Pfd2","Method",754,,,,,,,,,,,"Complete",,,
3087,,,1,"Pfd2","Context",,,,"Determine if the Address has been selected for use in the convergence name.",,,,,,,,,,,
3088,,,2,"Pfd2","Covered",754,,,"Returns true if the address has been selected for use in the convergence name, false otherwise.",,,,,,,,,,,
4534,,,,,"Context",,,,"Note: Addresses will only be used during the construction of a convergence name if this method returns true and getAddress returns a non-null value.",,,,,,,,,,,
3089,"javax.slee.InitialEventSelector","setAddressSelected",,"Pfd2","Method",3091,,,,,,,,,,,"Complete",,,
3090,,,1,"Pfd2","Context",,,,"Set the selection criteria for the Address convergence name variable.",,,,,,,,,,,
3091,,,2,"Pfd2","Assertion",,,"High","select - flag indicating whether or not the Address should be used in the convergence name.",,,"ConvergenceNameTest-Address-IES","Value: same as for an existing Sbb; new.","Value: same as for an existing Sbb; new.","Select Address as the sole convergence name variable, via the InitialEventSelector. Fire initial event 1 to create Sbb instance 1. Fire initial event 2 with the same relevant convergence name value as event 1. Check that the event goes to instance 1, at that no new instance is created. Fire initial event 3 with a different relevant convergence name value. Check that a new Sbb instance is created, and that the existing Sbb receives the event if and only if attached to the activity on which the event was fired.","Matt","Complete",,,
3092,"javax.slee.InitialEventSelector","isEventTypeSelected",,"Pfd2","Method",754,,,,,,,,,,,"Complete",,,
3093,,,1,"Pfd2","Context",,,,"Determine if the event type has been selected for use in the convergence name.",,,,,,,,,,,
3094,,,2,"Pfd2","Covered",754,,,"Returns true if the event type has been selected for use in the convergence name.",,,,,,,,,,,
3095,"javax.slee.InitialEventSelector","setEventTypeSelected",,"Pfd2","Method",3097,,,,,,,,,,,"Complete",,,
3096,,,1,"Pfd2","Context",,,,"Set the selection criteria for the event type convergence name variable.",,,,,,,,,,,
3097,,,2,"Pfd2","Assertion",,,"High","select - flag indicating whether or not the event type should be used in the convergence name.",,,"ConvergenceNameTest-EventType-IES","Value: same as for an existing Sbb; new.","Value: same as for an existing Sbb; new.","Select EventType as the sole convergence name variable, via the InitialEventSelector. Fire initial event 1 to create Sbb instance 1. Fire initial event 2 with the same relevant convergence name value as event 1. Check that the event goes to instance 1, at that no new instance is created. Fire initial event 3 with a different relevant convergence name value. Check that a new Sbb instance is created, and that the existing Sbb receives the event if and only if attached to the activity on which the event was fired.","Matt","Complete",,,
3098,"javax.slee.InitialEventSelector","isEventSelected",,"Pfd2","Method",754,,,,,,,,,,,"Complete",,,
3099,,,1,"Pfd2","Context",,,,"Determine if the event has been selected for use in the convergence name.",,,,,,,,,,,
3100,,,2,"Pfd2","Covered",754,,,"Returns true if the event has been selected for use in the convergence name.",,,,,,,,,,,
3101,"javax.slee.InitialEventSelector","setEventSelected",,"Pfd2","Method",3103,,,,,,,,,,,"Complete",,,
3102,,,1,"Pfd2","Context",,,,"Set the selection criteria for the Event convergence name variable.",,,,,,,,,,,
3103,,,2,"Pfd2","Assertion",,,"High","select - flag indicating whether or not theEvent should be used in the convergence name.",,,"ConvergenceNameTest-EventObject-IES",,,"Select Event as the sole convergence name variable, via the InitialEventSelector. Fire initial event 1 to create Sbb instance 1. Fire initial event 2. Check that a new Sbb instance is created, and that the existing Sbb receives the event if and only if attached to the activity on which the event was fired.","Matt","Complete",,,
3104,"javax.slee.InitialEventSelector","getEventType",,"Pfd2","Method",1921,,,,,,,,,,,"Complete",,,
3105,,,1,"Pfd2","Context",,,,"Get the event type of the event under consideration by the event router.",,,,,,,,,,,
3106,,,2,"Pfd2","Covered",1921,,,"Returns the event type of the event.",,,,,,,,,,,
3107,"javax.slee.InitialEventSelector","getEvent",,"Pfd2","Method",1922,,,,,,,,,,,"Complete",,,
3108,,,1,"Pfd2","Context",,,,"Get the event object for the event under consideration by the event router.",,,,,,,,,,,
3109,,,2,"Pfd2","Covered",1922,,,"Returns the event object.",,,,,,,,,,,
3110,"javax.slee.InitialEventSelector","getActivity",,"Pfd2","Method",756,,,,,,,,,,,"Complete",,,
3111,,,1,"Pfd2","Context",,,,"Get the activity for which the event was fired.",,,,,,,,,,,
3112,,,2,"Pfd2","Covered",756,,,"Returns the activity for which the event was fired.",,,,,,,,,,,
3113,"javax.slee.InitialEventSelector","getAddress",,"Pfd2","Method",757,,,,,,,,,,,"Complete",,,
3114,,,1,"Pfd2","Context",,,,"Get the address for the event.",,,,,,,,,,,
3115,,,1,"Pfd2","Covered",757,,,"The initial value of this attribute is the default address the event was fired on.",,,,,,,,,,,
3116,,,2,"Pfd2","Covered",757,,,"Returns the address for the event.",,,,,,,,,,,
3117,"javax.slee.InitialEventSelector","setAddress",,"Pfd2","Method",766,,,,,,,,,,,"Complete",,,
3118,,,1,"Pfd2","Covered",766,,,"Set the address for the event. ",,,,,,,,,,,
3119,,,1,"Pfd2","Ap Recom",,,,"If the address convergence name variable has been selected for use in the convergence name, this method can be used to change the event address if the default event address is unsuitable.",,,,,,,,,,,
3120,"javax.slee.InitialEventSelector","getCustomName",,"Pfd2","Method",758,,,,,,,,,,,"Complete",,,
3121,,,1,"Pfd2","Context",,,,"Get the custom name of the event.",,,,,,,,,,,
3122,,,1,"Pfd2","Covered",758,,,"The default value of the custom name is null.",,,,,,,,,,,
3123,,,2,"Pfd2","Covered",758,,,"Returns the custom name for the event.",,,,,,,,,,,
3124,"javax.slee.InitialEventSelector","setCustomName",,"Pfd2","Method",750,,,,,,,,,,,"Complete",,,
3125,,,1,"Pfd2","Covered",750,,,"Set the custom name for the event.",,,,,,,,,,,
3126,"javax.slee.InitialEventSelector","isInitialEvent",,"Pfd2","Method",759,,,,,,,,,,,"Complete",,,
3127,,,1,"Pfd2","Context",,,,"Determine if the event under consideration by the event router is an initial event for the Service.",,,,,,,,,,,
3128,,,1,"Pfd2","Covered",759,,,"The default value for this attribute is true.",,,,,,,,,,,
3129,,,2,"Pfd2","Covered",759,,,"Returns true if the event under consideration is an initial event, false otherwise.",,,,,,,,,,,
3130,"javax.slee.InitialEventSelector","setInitialEvent",,"Pfd2","Method","764,1923",,,,,,,,,,,"Complete",,,
3131,,,1,"Pfd2","Context",,,,"Set the initial event flag for the event under consideration by the event router.",,,,,,,,,,,
3132,,,1,"Pfd2","Repeat",764,,,"If set to false the event is not an initial event and the router performs no further initial event processing for the Service.",,,,,,,,,,,
3133,,,2,"Pfd2","Covered","764,1923",,,"initial - whether or not further initial event processing should take place for this event.",,,,,,,,,,,
4535,"javax.slee.RolledBackContext",,,,"Context",,,,"This interface defines the context for an Sbb sbbRolledBack method invocation on an SBB abstract class.  The SLEE provides an implementation of this interface.",,,,,,,,,,,
4536,"javax.slee.RolledBackContext","getEvent",,,"Covered ","2123",,,"Get the event object that should have been handled by the transaction that rolled back.",,,,,,,,,,,
4537,,,,,"Assertion",,,"High","If the rolled back transaction was not started by the SLEE to invoke an event handler method, this method returns null.",,"Difficult to test - need to be able to cause a non-event TXN to rollback.  However, the sbbRolledBack() method requires a valid SBB context to run, and the only methods we can throw an unchecked exception in are the various life cycle methods.   We can't  rely on sbbLoad() or sbbActivate() being called. Throwing in sbbRemove() will prevent the SBB from being removed.  Throwing in any of the startup methods will prevent sbbRolledBack from being called as the SLEE won't be able to get a valid initialized SBB context to work with. It might be possible to test the sbbRemove() case, by throwing an Exception from sbbRemove() the first time (which will stop the SBB from being removed), but allowing a second attempt to succeed.  The SBB could communicate with the test engine to decide whether or not to fire the Exception.","Test4537Test",,,,"Cath","Removed",,,"Y"
4538,"javax.slee.RolledBackContext","getActivityContextInterface",,,"Covered","2123",,,"Get the ActivityContextInterface argument passed to the event handler method invoked by the SLEE in the transaction that rolled back.",,,,,,,,,,,
4539,,,,,"Assertion",,,"High","If the rolled back transaction was not started by the SLEE to invoke an event handler method, this method returns null.",,"Difficult to test - need to be able to cause a non-event TXN to rollback.  However, the sbbRolledBack() method requires a valid SBB context to run, and the only methods we can throw an unchecked exception in are the various life cycle methods.   We can't  rely on sbbLoad() or sbbActivate() being called. Throwing in sbbRemove() will prevent the SBB from being removed.  Throwing in any of the startup methods will prevent sbbRolledBack from being called as the SLEE won't be able to get a valid initialized SBB context to work with. It might be possible to test the sbbRemove() case, by throwing an Exception from sbbRemove() the first time (which will stop the SBB from being removed), but allowing a second attempt to succeed.  The SBB could communicate with the test engine to decide whether or not to fire the Exception.","Test4537Test",,,,"Cath","Removed",,,"Y"
4540,"javax.slee.RolledBackContext","isRemoveRolledBack",,,"Context",,,,"Determine if the txn that rolled back included a SLEE-originated logical cascading removal method invocation.",,,,,,,,,,,
4541,,,,,"Repeat","2125",,,"Returns true if the transaction that rolled back included a SLEE-originated logical cascading removal method invocation, false otherwise.",,,,,,,,,,,
3134,"javax.slee.Sbb",,1,"Pfd2","Context",,,,"The Sbb interface is implemented by every Service Building Block (SBB) abstract class.",,,,,,,,,,,
3135,,,1,"Pfd2","Self-Evident",,,,"Every SBB must include an SBB abstract class.",,,,,,,,,,,
3136,,,1,"Pfd2","Context",,,,"The SLEE uses the methods defined in this interface to notify SBB objects of lifecycle events.",,,,,,,,,,,
3137,,,2,"Pfd2","Context",,,,"An SBB Developer may define or implement a number of additional methods that follow certain design patterns.",,,,,,,,,,,
3138,,,"2.1.1.1","Pfd2","Assertion",,,"Low","Event handler methods are implemented in the SBB abstract class with the following signature: public void on<event-name>(<event-class-name> event, <activity-context-interface-name> aci) { ... }",,,,,,,,,,,
3139,,,"2.1.1.3","Pfd2","Covered",433,,,"Event handler methods are invoked with a valid transaction context on an SBB in the Ready state.",,,,,,,,,,,
3140,,,"2.1.2.1","Pfd2","Removed",,,,"The child-not-attached callback method must be defined if the SBB Developer declares in the SBB's deployment description to receive this callback.",,,,,,,,,,,
3141,,,"2.1.2.1","Pfd2","Removed",,,,"The callback is invoked whenever the activity context attachment count of a child SBB entity decrements to zero.",,"Subject to change in PFD3",,,,,,"Removed",,,
3142,,,"2.1.2.1","Pfd2","Removed",,,,"The child-not-attached callback  method must have the following signature: public void <method-name>(SbbLocalObject child) { ... }",,,,,,,,,,,
3143,,,"2.1.2.3","Pfd2","Removed",,,,"Child-not-attached callback methods are invoked with a valid transaction context on an SBB in the Ready state.",,"Subject to change in PFD3",,,,,,,,,
3144,,,"2.1.3.1","Pfd2","Repeat","752",,,"The initial event selector method is invoked on an SBB object in the pooled state.",,,,,,,,,,,
3145,,,"2.1.3.1","Pfd2","Context",,,,"It allows the SBB to determine the selection criteria for the convergence name variables used in event routing.",,,,,,,,,,,
3146,,,"2.1.3.1","Pfd2","Assertion",,,"Low","The initial event select method has the following signature: public InitialEventSelector <method-name>(InitialEventSelector is) { ... }",,,,,,,,,,,
3147,,,"2.1.3.3","Pfd2","Assertion",,,"Low","Initial event selector methods are invoked on the SBB in the Pooled state with an unspecified transaction context.",,,,,,,,,,,
3148,,,"2.2","Pfd2","Context",,,,"Methods invoked by SBB objects.",,,,,,,,,,,
3149,,,"2.2","Pfd2","Repeat","632, 413, 402, 95, 98",,,"These are all abstract  and are implemented by the SLEE  when the SBB is deployed.",,,,,,,,,,,
3150,,,"2.2","Pfd2","Impossible",,,,"These methods are all transactional and will throw javax.slee.TransactionRequiredLocalException if invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3151,,,"2.2","Pfd2","Covered"," 419, 560,408",,,"Additionally, methods other than CMP field accessors  can only be invoked by an SBB object  that has been assigned to an SBB entity.",,,,,,,,,,,
3152,,,"2.2","Pfd2","Covered"," 419, 560,408",,,"If the SBB object is not assigned to an SBB entity, a java.lang.IllegalStateException is thrown.",,,,,,,,,,,
3153,,,"2.2","Pfd2","Impossible",,,,"These methods may also throw javax.slee.SLEEException if the operation could not successfully completed due to a system-level failure.",,,,,,,,,,,
3154,,,"2.2.1.1","Pfd2","Repeat","393",,,"A CMP field is defined in the SBB abstract class using methods with the following signatures: public abstract void set<field-name>(<field-type> value); public abstract <field-type> get<field-name>();",,,,,,,,,,,
3155,,,"2.2.1.1","Pfd2","Repeat","393",,,"field-name is the name of the CMP field as declared in the SBB's deployment descriptor, with the first letter capitalized.",,,,,,,,,,,
3156,,,"2.2.2.1","Pfd2","Assertion",,,"Low","Methods that the SBB uses to fire events into the SLEE are defined in the SBB abstract class with the following signature: public abstract void fire<event-name>(<event-class-name> event, ActivityContextInterface aci, Address defaultAddress).",,,,,,,,,,,
3157,,,"2.2.3.1","Pfd2","Ap Req",,,"Low","This method only need be defined in the SBB abstract class if the SBB uses an Activity Context Interface other than javax.slee.ActivityContextInterface. ",,,,,,,,,,,
3158,,,"2.2.3.1","Pfd2","Context",,,,"This method allows the SBB to obtain an object that implements the SBB's Activity Context Interface from an object that implements the generic javax.slee.ActivityContextInterface.",,,,,,,,,,,
3159,,,"2.2.3.1","Pfd2","Assertion",,,"Low","If declared, the method's signature must be: public abstract <activity-context-interface-name> asSbbActivityContextInterface(ActivityContextInterface aci).",,,,,,,,,,,
3160,,,"2.2.4.1","Pfd2","Repeat","413,414,415,416",,,"For each child relation the SBB has, a method with the following signature must be declared: public abstract ChildRelation <method-name> ().",,,,,,,,,,,
3161,,,"2.2.5.1","Pfd2","Assertion",,,"Low","For each Profile Specification used by the SBB, the SBB abstract class may declare a method with the following signature: public abstract <profile-CMP-interface-name> <method-name> (ProfileID id) throws javax.slee.profile.UnrecognizedProfileTableNameException, javax.slee.UnrecognizedProfileNameException.",,,,,,,,,,,
4542,,,,,"Context",,,,"Usage Parameter Interface accessor methods:",,,,,,,,,,,
4543,,,,,"Ap Req",,,"Low","These two methods are only defined in the SBB abstract class if the SBB defines a Usage Parameter interface.",,,,,,"Define these two methods in an SBB abstract class that does not define a Usage Parameter interface in its XML.  Verify that the SBB cannot be deployed.",,,,,
4544,,,,,"Covered","2253,2254",,,"The first method provides access to the SBB's unnamed usage parameter set while the second provides access to a named usage parameter set.",,,,,,,,,,,
4545,,,,,"Ap Req",,,"Low","public abstract <usage-parameters-interface-name> <method-name>;",,,,,,,,,,,
4546,,,,,"Ap Req",,,"Low","public abstract <usage-parameters-interface-name> <method-name>(String paramSetName) throws javax.slee.usage.UnrecognizedUsageParameterSetNameException;",,,,,,,,,,,
4547,,,,,"Ap Req",,,"Low","where usage-parameters-interface-name is the name of the SBB's usage parameter interfac",,,,,,,,,,,
4548,,,,,"Ap Req",,,"Low","where method-name is the name of the usage parameter accessor method as defined in the SBB's deployment descriptor.",,,,,,,,,,,
3162,"javax.slee.Sbb","setSbbContext",,"Pfd2","Method",340,,,,,,,,,,,"Complete",,,
3163,,,"1","Pfd2","Repeat",340,,,"Set the SbbContext object for the SBB object.  The SLEE invokes this method immediately after a new SBB object has been created.",,,,,,,,,,,
3164,,,"1","Pfd2","Ap Recom",,,,"If the SBB needs to use the SbbContext object during its lifetime, it should store the SbbContext object reference in an instance variable.",,,,,,,,,,,
3165,,,"2 ","Pfd2","Assertion",,,"Low","This method is invoked with an unspecified transaction context.",,,,,,,,,,,
3166,,,"2 ","Pfd2","Assertion",,,"High","The SBB object cannot access its persistent CMP state or invoke mandatory transactional methods during this method invocation.",,,"Test3166Test",,,"Try to access CMP state with setSbbContext(), and check that an Exception or an Error is thrown.","Cath","Complete",,,
3167,"javax.slee.Sbb","unsetSbbContext",,"Pfd2","Method","(not testable)",,,,,,,,,,,,,,
3168,,,"1","Pfd2","Context",,,,"Unset the SBB context for the SBB object.",,,,,,,,,,,
3169,,,"1","Pfd2","Ap Recom",,,,"If the SBB stored a reference to the SbbContext object  given to it in the setSbbContext(javax.slee.SbbContext) method, the SBB should clear that reference during this method.",,,,,,,,,,,
3170,,,"2 ","Pfd2","Impossible",,,,"This is the last method invoked on an SBB before it becomes a candidate for garbage collection.",,"See notes for 353",,,,,,,,,
3171,,,"3","Pfd2","Impossible",,,,"This method is invoked with an unspecified transaction context.",,"See notes for 353",,,,,,,,,
3172,,,"3","Pfd2","Ap Recom",,,,"The SBB object cannot access its persistent CMP state or invoke mandatory transactional methods during this method invocation.",,,,,,,,,,,
3173,"javax.slee.Sbb","sbbCreate",,"Pfd2","Method","360",,,,,,,,,,,,,,
3174,,,"1","Pfd2","Context",,,,"The SLEE invokes this method on an SBB object in the Pooled state when it needs to create a new SBB entity.  ",,,,,,,,,,,
3175,,,"1","Pfd2","Impossible",,,,"This method is invoked before the persistent representation of the SBB entity is created.",,"There is no API for accessing the persistence layer. ",,,,,,,,,
3176,,,"1","Pfd2","Impossible",,,,"The persistent representation of the SBB entity is created after this method returns.",,"There is no API for accessing the persistence layer. ",,,,,,,,,
3177,,,"2 ","Pfd2","Context",,,,"The SBB entity typically initializes its CMP state during this method.",,,,,,,,,,,
3178,,,"2 ","Pfd2","Repeat",360,,,"The SLEE guarantees that the initial values returned from CMP accessor methods will be the default initial values as defined by the Java language.",,,,,,,,,,,
3179,,,"3","Pfd2","Repeat","361",,,"This method is invoked with an active transaction context.",,,,,,,,,,,
3180,,,"4.1","Pfd2","Self-Evident",,,,"CreateException - this exception may be thrown by the SBB code if the SBB entity could not be created successfully.",,,,,,,,,,,
3181,"javax.slee.Sbb","sbbPostCreate",,"Pfd2","Method","363,3184",,,,,,,,,,,,,,
3182,,,"1","Pfd2","Context",,,,"The SLEE invokes this method on an SBB object in the Pooled state when it needs to create a new SBB entity. ",,,,,,,,,,,
3183,,,"1","Pfd2","Repeat",363,,,"This method is invoked after the persistent representation of the SBB entity has been created.",,,,,,,,,,,
4690,,,"1","Pfd3","Repeat",2458,,,"The SBB object enters the Ready state after this method returns successfully.  ",,,,,,,,,,,
4691,,,"1","Pfd3","Repeat",2459,,,"If this method throws an exception the SBB object does not enter the Ready state.",,,,,,,,,,,
3184,,,"2 ","Pfd2","Repeat","367",,,"This method is invoked with the same transaction context that the corresponding sbbCreate() method was invoked with.",,,,,,,,,,,
3185,,,"3.1","Pfd2","Self-Evident",,,,"CreateException - this exception may be thrown by the SBB code if the SBB entity could not be created successfully.",,,,,,,,,,,
3186,"javax.slee.Sbb","sbbActivate",,"Pfd2","Method","(not testable)",,,,,,,,,,,,,,
3187,,,"1","Pfd2","Context",,,,"The SLEE invokes this method on an SBB object in the Pooled state when the SLEE reassigns the SBB object to an existing SBB entity.  This method gives the SBB object a chance to initialize additional transient state and acquire additional resources that it needs while it is in the Ready state.",,,,,,,,,,,
3188,,,"1","Pfd2","Impossible",,,,"The SBB object transitions from the Pooled state to the Ready state after this method returns.",,"There is no SLEE API for testing which state the Sbb object is in.",,,,,,,,,
3189,,,"2 ","Pfd2","Assertion",,,"Low","This method is invoked with an unspecified transaction context.",,,,,,,,,,,
3190,,,"2 ","Pfd2","Assertion",,,"Low","The SBB object cannot access its persistent CMP state or invoke mandatory transactional methods during this method invocation.","Exception?",,,,,,,,,,
3191,"javax.slee.Sbb","sbbPassivate",,"Pfd2","Method","(not testable)",,,,,,,,,,,,,,
3192,,,"1","Pfd2","Context",,,,"The SLEE invokes this method on an SBB object in the Ready state when the SLEE needs to reclaim the SBB object assigned to an SBB entity.  This method gives the SBB object a chance to release any state or resources, typically allocated during the sbbActivate() method, that should not be held while the SBB object is in the Pooled state.",,,,,,,,,,,
3193,,,"2 ","Pfd2","Assertion",,,"Low","This method is invoked with an unspecified transaction context.",,,,,,,,,,,
3194,,,"2 ","Pfd2","Assertion",,,"Low","The SBB object cannot access its persistent CMP state or invoke mandatory transactional methods during this method invocation.","Exception?",,,,,,,,,,
3195,"javax.slee.Sbb","sbbLoad",,"Pfd2","Method",378,,,,,,,,,,,,,,
3196,,,"1","Pfd2","Context",,,,"The SLEE invokes this method on an SBB entity when the state of the SBB entity needs to be sychronized with the state in the underlying data source.",,,,,,,,,,,
3197,,,"1","Pfd2","Context",,,,"The SBB entity should reload from CMP fields any transient state that depends on the state stored in those CMP fields.",,,,,,,,,,,
3198,,,"2 ","Pfd2","Repeat","378",,,"This method is invoked with an active transaction context.",,,,,,,,,,,
3199,"javax.slee.Sbb","sbbStore",,"Pfd2","Method",379,,,,,,,,,,,,,,
3200,,,"1","Pfd2","Repeat","379",,,"The SLEE invokes this method on an SBB entity when the state of the underlying data source needs to be sychronized with the state of the SBB entity.",,,,,,,,,,,
3201,,,"1","Pfd2","Ap Recom",,,,"The SBB entity should store into CMP fields any transient state that  depends on the state stored in those CMP fields.",,,,,,,,,,,
3202,,,"2 ","Pfd2","Repeat","380",,,"This method is invoked with an active transaction context.",,,,,,,,,,,
3203,"javax.slee.Sbb","sbbRemove",,"Pfd2","Method","3207,3208,3209",,,,,,,,,,,,,,
3204,,,"1","Pfd2","Context",,,,"The SLEE invokes this method on an SBB entity when the SBB entity is going to be removed.",,,,,,,,,,,
3205,,,"1","Pfd2","Assertion",,,"Low","An SBB entity can be removed by its parent SBB or by the SLEE when the Service instance the SBB entity executing on behalf of is removed.",,,,,,,,,,,
3206,,,"1","Pfd2","Ap Recom",,,,"Any resources obtained by the SBB during sbbCreate(), sbbPostCreate(), or sbbActivate() should be released by the SBB object.",,,,,,,,,,,
3207,,,"1","Pfd2","Impossible",,,,"The SBB object transitions to the Pooled state after this method returns.",,"There is no SLEE API for testing which state the Sbb object is in.",,,,,,,,,
3208,,,"2 ","Pfd2","Covered","376",,,"This method is invoked with an active transaction context.",,,,,,,,,,,
3209,,,"2 ","Pfd2","Assertion",,,"High","If the remove operation was initiated by a parent SBB entity, the transaction context is the same as the transaction context in effect when the remove operation was initiated.",,,"Test376Test",,,"Modify Test376 to have a childSbbLocalObject that gives access to a CMP field on the child to store the parent TXN id before sbbRemove() is called - and verify that the TXN id in sbbRemove() is the same as this.","Cath","Complete",,,
3210,"javax.slee.Sbb","sbbServiceDeactivated",,"Pfd2","Removed",,,,,,,,,,,,,,,
3211,,,"1","Pfd2","Removed",,,,"The SLEE invokes this method on an SBB entity when the Service that the SBB entity is executing on behalf of is deactivated by the Administrator.",,,,,,,,,,,
3212,,,"1","Pfd2","Removed",,,,"The SBB entity should gracefully treminate further processing on any attached activities so that instances of the deactivated Service can be removed in a timely manner.",,,,,,,,,,,
3213,,,"2 ","Pfd2","Removed",,,,"This method is invoked with an active transaction context.",,,,,,,,,,,
3214,"javax.slee.Sbb","sbbExceptionThrown",,"Pfd2","Method","3215,3216,4446,3217,3218",,,,,,,,,,,"Complete",,,
3215,,,"1","Pfd2","Assertion",,,"High","The SLEE invokes this method on an SBB entity when a mandatory transactional method of the SBB entity throws an unchecked exception.",,,"Test3215Test",,,"Throw exception from an event handler method (these are mandatory transactional)","Cath","Complete",,,
3216,,,"2 ","Pfd2","Assertion",,,"High","This method is invoked with the same transaction context as that held by the method that threw the exception, however the transaction has been marked for rollback.",,,"Test3215Test",,,"Before throwing the RuntimeException is 3215 store the txnContext in a CMP field.  During sbbExceptionThrown retrieve the txnContext and check against the current txn context.  Also check getSbbContext().getRollbackOnly() and verify that the TXN is marked for rollback.","Cath","Complete",,,
4446,,,"3.1","Pfd2","Assertion",,,"High","exception - the exception that was thrown.",,"Serialize the exception in a CMP field, or hardcode its message and type","Test3215Test",,,"Verify that the exception passed to sbbExceptionThrown() is of the right type and contains the right message.","Cath","Complete",,,
3217,,,"3.2","Pfd2","Assertion",,,"High","event - if the exception was thrown from an event handler method, this argument is equal to the event argument passed to the event-handler method.",,,"Test3215Test",,,"Send event object back to the TCK from event handler and from sbbExceptionThrown().  When test result reported verify them for equality.","Cath","Complete",,,
3218,,,"3.3","Pfd2","Assertion",,,"High","aci - if the exception was thrown from an event-handler method, this argument is equal to the aci argument passed to the event-handler method.",,,"Test3215Test",,,"Can't store ACI in CMP field or send to TCK as it doesn't implement Serializable, but can check the activity itself. Check that the activity is non-null and is a TCKActivity. If there is only one TCKActivity alive, it can only be the correct one.","Cath","Removed",,,
3219,"javax.slee.Sbb","sbbRolledBack",,"Pfd2","Method","3220,3221,3222,3223,3224",,,,,,,,,,,"Complete",,,
3220,,,"1","Pfd2","Assertion",,,"High","The SLEE invokes this method on an SBB entity when a mandatory transactional method of the SBB entity throws an unchecked exception.",,,"Test3220Test",,,"Throw an unchecked exception and verify that sbbRolledBack is called.","Cath","Complete",,,
4549,,,,,"Repeat","2138",,,"The SBB object will be in the Pooled state if the sbbCreate or sbbPostCreate method threw the exception, otherwise it will be in the Ready state and associated with an SBB entity.",,,,,,,,,,,
3221,,,"2 ","Pfd2","Assertion",,,"High","This method is invoked with an active transaction context that is different to the transaction context that rolled back.",,,"Test3220Test",,,"Mark a TXN for rollback.  Send the TXN ID of the rolling back TXN to the TCK.  From the sbbRolledBack method send the TXN of that method to the TCK.  IN the TCK verify that the TXNs are different.","Cath","Complete",,,
3222,,,"2 ","Pfd2","Assertion",,,"High","If this new transaction context also rolls back, this method is not reinvoked for that rollback.",,,"Test3222Test",,,"Call SbbContext.setRollbackOnly() from sbbRolledBack().  Ensure that it isn't called a second time - but how can we return test pass if it's only called once.  Is something else guaranteed to be called after this?","Cath","Complete",,,
3223,,,"3.1","Pfd2","Removed",,,,"event - if the transaction rolled back included (or was to include) a SLEE-initiated invocation of an SBB's event-handler method, this argument is equal to the event  argument passed (or that was to be passed) to the event-handler method.",,,"Test3222Test",,,"Can't store event in a CMP field - Object is not serializable.  Can only check that event is non-null.","Cath","Removed",,,
3224,,,"3.2","Pfd2","Removed",,,,"aci - if the transaction rolled back included (or was to include) a SLEE-initiated invocation of an SBB's event-handler method, this argument is equal to the aci  argument passed (or that was to be passed) to the event-handler method.",,,"Test3222Test",,,"ACI is not serializable so cannot be stored in a CMP field.  Test only tests for non-null value of ACI, rather than exact value passed to event handler whose transaction has rolled back.","Cath","Removed",,,
4685,,,,,"Covered","3222",,,"context - the RolledBackContext context of the rolled back transaction.",,,,,,,,,,,
3225,"javax.slee.SbbContext",,"2 ","Pfd2","Repeat","340",,,"An SbbContext object is given to an SBB object after the SBB object is created (via the Sbb.setSbbContext(SbbContext) method).",,,,,,,,,,,
3226,,,"2 ","Pfd2","Assertion",,,"Low","The SbbContext object remains associated with the SBB object for the lifetime of that SBB object.",,,,,,,,,,,
3227,"javax.slee.SbbContext","getSbbLocalObject",,"Pfd2","Method","3231,3232",,,,,,,,,,,"Complete",,,
3228,,,"1","Pfd2","Context",,,,"Get a local object reference to the SBB entity currently associated with the instance.",,,,,,,,,,,
3229,,,"2 ","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3230,,,"2 ","Pfd2","Assertion",,,"Low","The SBB object must have an assigned SBB entity when it invokes this method.",,,,,,,,,,,
3231,,,"2 ","Pfd2","Assertion",,,"High","The only transactional method where an SBB object is not assigned to an SBB entity is Sbb.sbbCreate().",,,"Test3231Test",,,"Call this function from several places, including sbbCreate().  Ensure the correct response from each.","Cath","Complete",,,
3232,,,"3.1","Pfd2","Assertion",,,"High","Returns an SbbLocalObject reference for the SBB entity currently associated with the instance.",,,"Test3232Test",,,"Call from sbbPostCreate - a transactional method which runs in the same transaction as sbbCreate.","Cath","Complete",,,
3233,,,"4.1","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3234,,,"4.2","Pfd2","Assertion",,,"Low","java.lang.IllegalStateException - if the SBB object invoking this method is not assigned to an SBB entity.",,,,,,,,,,,
3235,,,"4.3","Pfd2","Impossible",,,,"SLEEException - if the local object reference could not be obtained due to a system-level failure.",,,,,,,,,,,
3236,"javax.slee.SbbContext","getService",,"Pfd2","Method",3240,,,,,,,,,,,"Complete",,,
3237,,,"1","Pfd3","Covered","3240",,,"Get the Service component identifier that identifies the Service component that the SBB is executing on behalf of.",,,,,,,,,,,
3238,,,"2 ","Pfd3","Impossible",,,,"This method is a non-transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3239,,,"2 ","Pfd3","Removed",,,,"The SBB object must be in the Ready state.",,,,,,,,,,,
3240,,,"3.1","Pfd2","Assertion",,,"High","Returns the Service component identifier.",,,"Test3240Test",,,"Call this method, ensure that a valid service identifier is returned and an exception not thrown.","Cath","Complete",,,
3241,,,"4.1","Pfd3","Removed",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,,,,,,,,,,
3242,,,"4.2","Pfd3","Removed",,,,"java.lang.IllegalStateException - if the SBB object invoking this method is not assigned to an SBB entity.",,,,,,,,,,,
3243,,,"4.3","Pfd2","Impossible",,,,"SLEEException - if the Service component identifier  could not be obtained due to a system-level failure.",,,,,,,,,,,
4686,"javax.slee.SbbContext","getSbb","1","Pfd3","Assertion",,,"High","Get the SBB component identifier that identifies the SBB component of the SBB object.",,,"Test4686Test",,,"Call SbbContext.getSbb(), return the SbbID to the TCK.  Have the TCK verify this ID against that of the installed SBB.","Cath","Complete",,,
4687,,,"2 ","Pfd3","Impossible",,,,"This method is a non-transactional method.",,"No way to test: this method makes no updates to any state, transaction or non-transactional.",,,,,,,,,
4688,,,"3","Pfd3","Repeat","4686",,,"returns the SBB component identifier.",,,,,,,,,,,
4689,,,"4.1","Pfd3","Impossible",,,,"throws SLEEException if the SBB component identifier could not be obtained due to a system-level failure.",,,,,,,,,,,
3244,"javax.slee.SbbContext","getActivities",,"Pfd2","Method",3248,,,,,,,,,,,"Complete",,,
3245,,,"1","Pfd2","Context",,,,"Get the set of Activity Contexts that the SBB entity currently associated with the instance is currently attached to.",,,,,,,,,,,
3246,,,"2 ","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3247,,,"2 ","Pfd3","Assertion",,,"Low","The SBB object must have an assigned SBB when it invokes this method.",,,,,,,,,,,
3248,,,"3.1","Pfd2","Assertion",,,"High","Returns an array of generic Activity Context Interface objects that represent the Activity Contexts the SBB entity is attached to.",,,"Test3248Test",,,"Attach an SBB to several activities, ensure that the array returned by this function contains the correct A.C.s.","Cath","Complete",,,
3249,,,"4.1","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3250,,,"4.2","Pfd2","Assertion",,,"Low","java.lang.IllegalStateException - if the SBB object invoking this method is not assigned to an SBB entity.",,,,,,,,,,,
3251,,,"4.3","Pfd2","Impossible",,,,"SLEEException - if the set of attached Activity Contexts  could not be obtained due to a system-level failure.",,,,,,,,,,,
3252,"javax.slee.SbbContext","maskEvent",,"Pfd2","Method","712,3255,716",,,,,,,,,,,,,,
3253,,,"1","Pfd2","Context",,,,"Mask events fired on an Activity Context from delivery to the SBB entity currently associated with the instance.",,,,,,,,,,,
3254,,,"1","Pfd2","Repeat",712,,,"The masking affects only that SBB entity and only in the context of the specified Activity Context.",,,,,,,,,,,
3255,,,"2 ","Pfd2","Repeat","717",,,"When an SBB entity is initially attached (or reattached) to an Activity Context, the event types that are masked are the event types identified by <event> elements whose mask-on -attach atribute is set to ""true"".",,,,,,,,,,,
3256,,,"3","Pfd2","Repeat",716,,,"The effects of this method are not incremental or cumulative.",,,,,,,,,,,
3257,,,"4","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3258,,,"4","Pfd2","Repeat","720",,,"The effects of an invocation of this method are not persistent and visible beyond the current transaction until after the transaction commits.",,"impossible to test? Can test rollback?",,,,,,,,,
3259,,,"4","Pfd2","Assertion",,,"Low","The SBB object must have an assigned SBB entity when in invokes this method.",,,,,,,,,,,
3260,,,"6.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if aci is null",,,,,,,,,,,
3261,,,"6.2","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3262,,,"6.3","Pfd2","Assertion",,,"Low","java.lang.IllegalStateException - if the SBB object invoking this method is not assigned to an SBB entity.",,,,,,,,,,,
3263,,,"6.4","Pfd2","Assertion",,,"Low","UnrecognizedException - if one of the event names does not correspond with the name of an event the SBB receives",,,,,,,,,,,
3264,,,"6.5","Pfd2","Assertion",,,"High","NotAttachedException - if the SBB entity is not attached to the specified Activity Context",,,"Test724Test",,,"See events/getEventMask","Cath","Complete",,,
3265,,,"6.6","Pfd2","Impossible",,,,"SLEEException - if the event mask could not be set due to a system-level failure.",,,,,,,,,,,
3266,"javax.slee.SbbContext","getEventMask",,"Pfd2","Method","725,726",,,,,,,,,,,"Complete",,,
3267,,,"1","Pfd2","Context",,,,"Get the event mask currently set for an Activity Context for the SBB entity currently associated with the instance.",,,,,,,,,,,
3268,,,"2 ","Pfd2","Repeat",725,,,"If the SBB entity has not invoked the maskEvent method to set an event mask after the SBB entity has (re)attached to the Activity Context, then the set of event names returned by  this method is the set of event names of <event> elements whose mask-on-attach attribute is set to true.",,,,,,,,,,,
3269,,,"2 ","Pfd2","Repeat",726,,,"Otherwise, the set of event names returned by this method is the same as the set of event names specified by the most recent maskEvent method for the same SBB entity and Activity Context.",,,,,,,,,,,
3270,,,"3","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3271,,,"3","Pfd2","Assertion",,,"Low","The SBB object must have an assigned SBB entity when in invokes this method.",,,,,,,,,,,
3272,,,"4","Pfd2","Covered",725726,,,"Returns an array of event names identifying the event types that have been masked.",,,,,,,,,,,
3273,,,"5.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if aci is null",,,,,,,,,,,
3274,,,"5.2","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3275,,,"5.3","Pfd2","Assertion",,,"Low","java.lang.IllegalStateException - if the SBB object invoking this method is not assigned to an SBB entity.",,,,,,,,,,,
3276,,,"5.4","Pfd2","Repeat",724,,,"NotAttachedException - if the SBB entity is not attached to the specified Activity Context",,,,,,,,,,,
3277,,,"5.5","Pfd2","Impossible",,,,"SLEEException - if the event mask could not be obtained due to a system-level failure.",,,,,,,,,,,
3278,"javax.slee.SbbContext","setRollbackOnly",,"Pfd2","Method",3281,,,,,,,,,,,"Complete",,,
3279,,,"1","Pfd2","Context",,,,"Mark the current transaction fol rollback.",,,,,,,,,,,
3280,,,"1","Pfd2","Covered",3281,,,"The transaction will become permanently marked for rollback.",,,,,,,,,,,
3281,,,"1","Pfd2","Assertion",,,"High","A transaction marked for rollback can never commit.",,,"Test3281Test",,,"Fire events A and B on the same activity.  While handling event A set a CMP field to some value, then call SbbContext.setRollbackOnly().  In Event B's handler check the value of the CMP field - it should be as it was before Event A's handler modified the value.","Cath","Complete",,,
3282,,,"2 ","Pfd2","Context",,,,"An SBB object invokes this method when it does not want the current transaction to commit.",,,,,,,,,,,
3283,,,"3","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3284,,,"4.1","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3285,,,"4.2","Pfd2","Impossible",,,,"SLEEException - if the current transaction could not be marked for rollback due to a system-level failure.",,,,,,,,,,,
3286,"javax.slee.SbbContext","getRollbackOnly",,"Pfd2","Method",3289,,,,,,,,,,,"Complete",,,
3287,,,"1","Pfd2","Context",,,,"Test if the current transaction has been marked for rollback only.  An SBB object invokes this method while executing within a transaction to determine if the transaction has been marked for rollback.",,,,,,,,,,,
3288,,,"2 ","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3289,,,"3","Pfd2","Assertion",,,"High","Returns true if the current transaction has been marked for rollback, otherwise false.",,,"Test3289Test",,,"Call getRollbackOnly() before marking the transaction for rollback through setRollbackOnly(), call getRollbackOnly() again afterwards.","Cath","Complete",,,
3290,,,"4.1","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3291,,,"4.2","Pfd2","Impossible",,,,"SLEEException - if the current state of the transaction could not be obtained due to a system-level failure.",,,,,,,,,,,
3292,"javax.slee.SbbID",,"1","Pfd2","Context",,,,"The SbbID interface is a marker interface implemented by every Java object that encapsulates SBB component identity.  An SbbID object is also known as an SBB identifier.",,,,,,,,,,,
3293,"javax.slee.SbbLocalObject",,"1","Pfd2","Ap Req",,,"Low","The SbbLocalObject interface must be extended by all SBB local interfaces used for synchronous SBB invocations.",,,,,,,,,,,
3294,"javax.slee.SbbLocalObject","isIdentical",,"Pfd2","Method",3297,,,,,,,,,,,"Complete",,,
3295,,,"1","Pfd2","Context",,,,"Compare this SbbLocalObject for identity equality with another.",,,,,,,,,,,
3296,,,"2 ","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3297,,,"4.1","Pfd2","Assertion",,,"High","Returns true if obj is a reference to an SBB entity with the same identity as the SBB entity referenced by this SbbLocalObject object, false otherwise.",,,"Test3297Test",,,"Get two SbbLocalObject references that should be identical, ensure that this method returns true.  Get two SbbLocalObject references that should not be identical, ensure that this method returns false.","Cath","Complete",,,
3298,,,"5.1","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3299,,,"5.2","Pfd2","Impossible",,,,"SLEEException - if the equality test could not be completed due to a system-level failure.",,,,,,,,,,,
3300,"javax.slee.SbbLocalObject","setSbbPriority",,"Pfd2","Method","3301,3303",,,,,,,,,,,"Complete",,,
3301,,,"1","Pfd2","Assertion",,,"High","Set the invocation priority for the SBB entity referenced by this SbbLocalObject.",,,"Test3301Test",,,"Call SbbLocalObject.setPriority() and somehow check what the invocation priority of the SBB now is.","Cath","Complete",,,
3302,,,"2 ","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3303,,,"3","Pfd2","Covered","296",,,"The valid range for priorities is -128 to 127.",,"The invalid cases are detected by the complier; test boundary values for the valid cases (-128,-1,0,1,127)",,,,,,,,,
3304,,,"4.1","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3305,,,"4.2","Pfd2","Assertion",,,"Low","NoSuchObjectLocalException - If the SBB entity referenced by this SbbLocalObject is no longer valid.",,,,,,,,,,,
3306,,,"4.3","Pfd2","Assertion",,,"Low","NoSuchObjectLocalException - if sbb does not reference a valid SBB entity",,,,,,,,,,,
3307,,,"4.4","Pfd2","Impossible",,,,"SLEEException - if the priority could not be set due to a system-level failure.",,,,,,,,,,,
3308,"javax.slee.SbbLocalObject","getSbbPriority",,"Pfd2","Method",3311,,,,,,,,,,,"Complete",,,
3309,,,"1","Pfd2","Context",,,,"Get the invocation priority for the SBB entity referenced by this SbbLocalObject.",,,,,,,,,,,
3310,,,"2 ","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3311,,,"3","Pfd2","Assertion",,,"High","Returns the priority of the SBB entity.",,,"Test3311Test",,,"Set the priority to a certain value and check that this value is returned by getSbbPriority()","Cath","Complete",,,
3312,,,"4.1","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3313,,,"4.2","Pfd2","Assertion",,,"Low","NoSuchObjectLocalException - If the SBB entity referenced by this SbbLocalObject is no longer valid.",,,,,,,,,,,
3314,,,"4.3","Pfd2","Impossible",,,,"SLEEException - if the SBB's priority could not be obtained due to a system -level failure.",,,,,,,,,,,
3315,"javax.slee.SbbLocalObject","remove",,"Pfd2","Method","3316,3317,3318",,,,,,,,,,,"Complete",,,
3316,,,"1","Pfd2","Assertion",,,"High","Remove the SBB entity referenced by this SbbLocalObject.",,,"Test3316Test",,,"Check that the SBB removed really has been removed - perhaps by checking its parents ChildRelation class for its lack of presence.","Cath","Complete",,,
3317,,,"1","Pfd2","Assertion",,,"High","Any children of the removed SBB entity will also be removed.",,,"Test3317Test",,,"Remove an SBB entity that has children.  Ensure that its children are also removed by ...","Cath","Complete",,,
3318,,,"1","Pfd2","Assertion",,,"High","Any removed SBB entity is automatically detached from any Activity Contexts it is attached to.",,"test AC can end","Test3318Test",,,,"Cath","Complete",,,
3319,,,"2 ","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3320,,,"3.1","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3321,,,"3.2","Pfd2","Assertion",,,"Low","NoSuchObjectLocalException - If the SBB entity referenced by this SbbLocalObject is no longer valid.",,,,,,,,,,,
3322,,,"3.3","Pfd2","Impossible",,,,"SLEEException - if the SBB entity could not be removed due to a system-level failure.",,,,,,,,,,,
3323,"javax.slee.ServiceID",,"1","Pfd2","Context",,,,"The ServiceID interface is a marker interface implemented by every Java object that encapsulates Service component identity.  A ServiceID object is also known as a Service identifier.",,,,,,,,,,,
3324,"javax.slee.Address",,,"Pfd2","Context",,,,"The Address class encapsulates an address that can be used by the SLEE.",,,,,,,,,,,
3325,,,,"Pfd2","Context",,,,"An address consists of the the following two components:",,,,,,,,,,,
3326,,,,"Pfd2","Context",,,,"Address Plan - the plan that defines the address or numbering type and the format of the address string.",,,,,,,,,,,
3327,,,,"Pfd2","Context",,,,"Address String - some combination of alphanumeric characters and symbols that identify an address within the domain identified by the address plan.",,,,,,,,,,,
3328,,,,"Pfd2","Self-Evident",,,,"An Address object is immutable.",,,,,,,,,,,
3329,"javax.slee.Address","Address(AddressPlan addressPlan, java.lang.String addressString)",,"Pfd2","Method","3330",,,,,,,,,,,,,,
3330,,,"1","Pfd2","Assertion",,,"Low","Create a new Address using an address plan and address string.",,,,,,,,,,,
3331,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if either addressPlan or addressString is null.",,,,,,,,,,,
3332,,,"3.2","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException is addressString is zero-length.",,,,,,,,,,,
3333,"javax.slee.Address","Address(AddressPlan addressPlan, java.lang.String addressString, AddressPresentation addressPresentation, AddressScreening addresScreening, java.lang.String subAddressString, java.lang.String addressName)",,"Pfd2","Method",,,,,,,"Test3333Test",,,,"Cath","Complete",,,
4474,,,"1","Pfd2","Assertion",,,"Low","Create a new Address using an address plan, an address string, an additional optional attributes",,,,,,,,,,,
3334,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if either addressPlan or addressString is null.",,,,,,,,,,,
3335,,,"3.2","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException is addressString is zero-length.",,,,,,,,,,,
3336,"javax.slee.Address","getAddressPlan",,"Pfd2","Method","3333",,,,,,,,,,,,,,
3337,,,"2 ","Pfd2","Assertion",,,"Low","Returns the address plan.",,,,,,,,,,,
3338,"javax.slee.Address","getAddressString",,"Pfd2","Method","3333",,,,,,,,,,,,,,
3339,,,"2 ","Pfd2","Assertion",,,"Low","Returns the address string.",,,,,,,,,,,
3340,"javax.slee.Address","getAddressPresentation",,"Pfd2","Method","3333",,,,,,,,,,,,,,
3341,,,"2 ","Pfd2","Assertion",,,"Low","Returns the address presentation attribute, or null if no address presentation attribute was specified.",,,,,,,,,,,
3342,"javax.slee.Address","getAddressScreening",,"Pfd2","Method","3333",,,,,,,,,,,,,,
3343,,,"2 ","Pfd2","Assertion",,,"Low","Returns the addressScreening attribute, or null if no address screening attribute was specified.",,,,,,,,,,,
3344,"javax.slee.Address","getSubAddressString",,"Pfd2","Method","3333",,,,,,,,,,,,,,
3345,,,"2 ","Pfd2","Assertion",,,"Low","Returns the sub-address string, or null if no sub-address string was specified.",,,,,,,,,,,
3346,"javax.slee.Address","getAddressName",,"Pfd2","Method","3333",,,,,,,,,,,,,,
3347,,,"2 ","Pfd2","Assertion",,,"Low","Returns the address name, or null if no address name was specified.",,,,,,,,,,,
3348,"javax.slee.Address","equals",,"Pfd2","Method","3349",,,,,,,,,,,,,,
3349,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is an instance of this class containing the same address plan and address string as this, false otherwise.",,,,,,"Compare the same object with itself and with a different object.",,,,,
3350,"javax.slee.Address","hashCode",,"Pfd2","Method","3333",,,,,,,,,,,,,,
3351,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code value.",,,,,,,,,,,
3352,"javax.slee.Address","toString",,"Pfd2","Method","3333",,,,,,,,,,,,,,
3353,,,"3","Pfd2","Assertion",,,"Low","Returns the textual representation of the address object.",,,,,,,,,,,
3354,"javax.slee.AddressPlan",,"1","Pfd2","Context",,,,"This class defines an enumerated type that encapsulates the values available for address or numbering plans.  An address plan specifies the format and structure of an associated address string.  A numbering plan typically consists of decimal digits segmented into groups in order to identify specific elements used for identification, routing, and charging capablities.",,,,,,,,,,,
3355,,,"2 ","Pfd2","Assertion",,,"Low","A singleton instance of each enumerated value is guaranteed so that equality tests uses == are always evaluated correctly.",,,,,,,,,,,
3356,"javax.slee.AddressPlan","fromInt",,"Pfd2","Method",,,,,,,"Test3356Test",,,,"Cath","Complete",,,
3357,,,"3","Pfd2","Assertion",,,"Low","Returns an AddressPlan object corresponding to plan.",,,,,,,,,,,
3358,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException if plan is not a valid address plan value.",,,,,,,,,,,
3359,"javax.slee.AddressPlan","toInt",,"Pfd2","Method","3360",,,,,,,,,,,,,,
3360,,,"2 ","Pfd2","Assertion",,,"Low","Returns an integer value representation for this AddressPlon object.",,,"Test3356Test",,,,"Cath","Complete",,,
3361,"javax.slee.AddressPlan","isNotPresent",,"Pfd2","Method","3363",,,,,,,,,,,,,,
3362,,,"1","Pfd2","Context",,,,"Determine if this AddressPlan object represents the NOT_PRESENT address plan value.",,,,,,,,,,,
3363,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the NOT_PRESENT address plan value, false otherwise.",,,"Test3356Test",,,"Call AddressPlan.isNotPresent() on a plan matching NOT_PRESENT and not matching NOT_PRESENT.  Verify that correct values are returned.","Cath","Complete",,,
3364,"javax.slee.AddressPlan","isUndefined",,"Pfd2","Method","3365",,,,,,,,,,,,,,
3365,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the UNDEFINED address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3366,"javax.slee.AddressPlan","isIP",,"Pfd2","Method","3356",,,,,,,,,,,,,,
3367,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the IP address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3368,"javax.slee.AddressPlan","isMulticast",,"Pfd2","Method","3369",,,,,,,,,,,,,,
3369,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the MULTICAST address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3370,"javax.slee.AddressPlan","isUnicast",,"Pfd2","Method","3371",,,,,,,,,,,,,,
3371,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the UNICAST address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3372,"javax.slee.AddressPlan","isE164",,"Pfd2","Method","3373",,,,,,,,,,,,,,
3373,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the E164  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3374,"javax.slee.AddressPlan","isAESA",,"Pfd2","Method","3375",,,,,,,,,,,,,,
3375,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the AESA  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3376,"javax.slee.AddressPlan","isURI",,"Pfd2","Method","3377",,,,,,,,,,,,,,
3377,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the URI  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3378,"javax.slee.AddressPlan","isNSAP",,"Pfd2","Method","3379",,,,,,,,,,,,,,
3379,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the NSAP  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3380,"javax.slee.AddressPlan","isSMTP",,"Pfd2","Method","3381",,,,,,,,,,,,,,
3381,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the SMTP  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3382,"javax.slee.AddressPlan","isX400",,"Pfd2","Method","3383",,,,,,,,,,,,,,
3383,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the X400  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3384,"javax.slee.AddressPlan","isSIP",,"Pfd2","Method","3385",,,,,,,,,,,,,,
3385,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the SIP  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3386,"javax.slee.AddressPlan","isE164Mobile",,"Pfd2","Method","3387",,,,,,,,,,,,,,
3387,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the E164_MOBILE  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3388,"javax.slee.AddressPlan","isH323",,"Pfd2","Method","3389",,,,,,,,,,,,,,
3389,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the H323  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3390,"javax.slee.AddressPlan","isGT",,"Pfd2","Method","3391",,,,,,,,,,,,,,
3391,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the GT  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3392,"javax.slee.AddressPlan","isSSN",,"Pfd2","Method","3393",,,,,,,,,,,,,,
3393,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the SSN  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3394,"javax.slee.AddressPlan","isSleeProfileTable",,"Pfd2","Method","3395",,,,,,,,,,,,,,
3395,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the SLEE_PROFILE_TABLE  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3396,"javax.slee.AddressPlan","isSleeProfileTable",,"Pfd2","Method","3397",,,,,,,,,,,,,,
3397,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the SLEE_PROFILE  address plan value, false otherwise.",,,"Test3356Test",,,"Call function and verify that it returns true when presented with the right type of  address plan and false if presented with the wrong.","Cath","Complete",,,
3398,"javax.slee.AddressPlan","equals",,"Pfd2","Method","3399",,,,,,,,,,,,,,
3399,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is an instance of this class representing the same address plan value as this, false otherwise.",,,"Test3356Test",,,"Call equals with matching objects and non-matching objects.  Verify correct results received.","Cath","Complete",,,
3400,"javax.slee.AddressPlan","hashCode",,"Pfd2","Method","3401",,,,,,,,,,,,,,
3401,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code value.",,,,,,,,,,,
3402,"javax.slee.AddressPlan","toString",,"Pfd2","Method","3403",,,,,,,,,,,,,,
3403,,,"3","Pfd2","Assertion",,,"Low","Returns the textual representation of the address plan object.",,,,,,,,,,,
3404,"javax.slee.AddressPresentation",,"2 ","Pfd2","Assertion",,,"Low","A singleton instance of each enumerated value is guaranteed so that equality tests uses == are always evaluated correctly.",,,,,,,,,,,
3405,"javax.slee.AddressPresentation","fromInt",,"Pfd2","Method","3406",,,,,,,,,,,,,,
3406,,,"1","Pfd2","Assertion",,,"Low","Returns an AddressPresentation object corresponding to value.",,,"Test3406Test",,,,"Cath","Complete",,,
3407,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException if value is not a valid address presentation value.",,,,,,,,,,,
3408,"javax.slee.AddressPresentation","toInt",,"Pfd2","Method","3409",,,,,,,,,,,,,,
3409,,,"2 ","Pfd2","Assertion",,,"Low","Returns an integer value representation for this AddressPresentation object.",,,"Test3406Test",,,,"Cath","Complete",,,
3410,"javax.slee.AddressPresentation","isUndefined",,"Pfd2","Method","3411",,,,,,,,,,,,,,
3411,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the UNDEFINED  address presentation value, false otherwise.",,,"Test3406Test",,,,"Cath","Complete",,,
3412,"javax.slee.AddressPresentation","isAllowed",,"Pfd2","Method","3413",,,,,,,,,,,,,,
3413,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the ALLOWED address presentation value, false otherwise.",,,"Test3406Test",,,,"Cath","Complete",,,
3414,"javax.slee.AddressPresentation","isRestricted",,"Pfd2","Method","3415",,,,,,,,,,,,,,
3415,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the RESTRICTED address presentation value, false otherwise.",,,"Test3406Test",,,,"Cath","Complete",,,
3416,"javax.slee.AddressPresentation","isAddressNotAvailable",,"Pfd2","Method","3417",,,,,,,,,,,,,,
3417,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the ADDRESS_NOT_AVAILABLE address presentation value, false otherwise.",,,"Test3406Test",,,,"Cath","Complete",,,
3418,"javax.slee.AddressPresentation","equals",,"Pfd2","Method","3419",,,,,,,,,,,,,,
3419,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is an instance of this class representing the same address presentation value as this, otherwise false.",,,"Test3406Test",,,,"Cath","Complete",,,
3420,"javax.slee.AddressPresentation","hashCode",,"Pfd2","Method","3421",,,,,,,,,,,,,,
3421,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code value.",,,,,,,,,,,
3422,"javax.slee.AddressPresentation","toString",,"Pfd2","Method","3423",,,,,,,,,,,,,,
3423,,,"3","Pfd2","Assertion",,,"Low","Returns the textual representation of the address presentation object.",,,,,,,,,,,
3424,"javax.slee.AddressScreening",,"2 ","Pfd2","Assertion",,,"Low","A singleton instance of each enumerated value is guaranteed so that equality tests uses == are always evaluated correctly.",,,,,,,,,,,
3425,"javax.slee.AddressPresentation","fromInt",,"Pfd2","Method",,,,,,,"Test3425Test",,,,"Cath","Complete",,,
3426,,,"3","Pfd2","Assertion",,,"Low","Returns an AddressScreening object corresponding to value.",,,"Test3425Test",,,,"Cath","Complete",,,
3427,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException if value is not a valid address screening value.",,,,,,,,,,,
3428,"javax.slee.AddressPresentation","toInt",,"Pfd2","Method","3425",,,,,,,,,,,,,,
3429,,,"2 ","Pfd2","Assertion",,,"Low","Returns an integer value representation for this AddressScreening object.",,,"Test3425Test",,,"Create AddressScreening object, call toInt() verify that right value returned.","Cath","Complete",,,
3430,"javax.slee.AddressPresentation","isUndefined",,"Pfd2","Method","3425",,,,,,,,,,,,,,
3431,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the UNDEFINED address screening value, false otherwise.",,,"Test3425Test",,,"Create AddressScreening that matches and call method, verify true is returned.  Create AddressScreening that doesn't match, verify false returned.","Cath","Complete",,,
3432,"javax.slee.AddressPresentation","isUserNotVerified",,"Pfd2","Method","3425",,,,,,,,,,,,,,
3433,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the USER_NOT_VERIFIED address screening value, false otherwise.",,,"Test3425Test",,,"Create AddressScreening that matches and call method, verify true is returned.  Create AddressScreening that doesn't match, verify false returned.","Cath","Complete",,,
3434,"javax.slee.AddressPresentation","isUserVerifiedPassed",,"Pfd2","Method","3425",,,,,,,,,,,,,,
3435,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the USER_VERIFIED_PASSED address screening value, false otherwise.",,,"Test3425Test",,,"Create AddressScreening that matches and call method, verify true is returned.  Create AddressScreening that doesn't match, verify false returned.","Cath","Complete",,,
3436,"javax.slee.AddressPresentation","isUserVerifiedFailed",,"Pfd2","Method","3425",,,,,,,,,,,,,,
3437,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the USER_VERIFIED_FAILED address screening value, false otherwise.",,,"Test3425Test",,,"Create AddressScreening that matches and call method, verify true is returned.  Create AddressScreening that doesn't match, verify false returned.","Cath","Complete",,,
3438,"javax.slee.AddressPresentation","isNetwork",,"Pfd2","Method","3425",,,,,,,,,,,,,,
3439,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the NETWORK address screening value, false otherwise.",,,"Test3425Test",,,"Create AddressScreening that matches and call method, verify true is returned.  Create AddressScreening that doesn't match, verify false returned.","Cath","Complete",,,
3440,"javax.slee.AddressPresentation","equals",,"Pfd2","Method","3425",,,,,,,,,,,,,,
3441,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is an instance of this class representing the same address screening value as this, false otherwise.",,,"Test3425Test",,,"Create AddressScreening that matches and call method, verify true is returned.  Create AddressScreening that doesn't match, verify false returned.","Cath","Complete",,,
3442,"javax.slee.AddressPresentation","hashCode",,"Pfd2","Method","3425",,,,,,,,,,,,,,
3443,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code value.",,,,,,,,,,,
3444,"javax.slee.AddressPresentation","toString",,"Pfd2","Method","3425",,,,,,,,,,,,,,
3445,,,"3","Pfd2","Assertion",,,"Low","Returns the textual representation of the address screening object.",,,,,,,,,,,
3446,"javax.slee.connection.ExternalActivity",,"1","Pfd2","Removed",,,,"The ExternalActivity interface is a marker interface implemented by external activity objects generated by the SLEE for interoperability purposes.","Removed in PFD3",,,,,,,,,,
3447,"javax.slee.connection.ExternalEvent",,"1","Pfd2","Removed",,,,"The ExternalEvent interface is implemented by an EJB component external to the SLEE that is firing an event on an external activity.","Removed in PFD3",,,,,,,,,,
3448,,,"2 ","Pfd2","Removed",,,,"The event type name of external events is ""javax.slee.connection.ExternalEvent"".","Removed in PFD3",,,,,,,,,,
3449,"javax.slee.connection.ExternalEvent","getAddress",,"Pfd2","Removed",,,,,"Removed in PFD3",,,,,,,,,,
3450,,,"2 ","Pfd2","Removed",,,,"Returns the default address of the event.","Removed in PFD3",,,,,,,,,,
3451,"javax.slee.connection.ExternalEvent","getPayload",,"Pfd2","Removed",,,,,"Removed in PFD3",,,,,,,,,,
3452,,,"2 ","Pfd2","Removed",,,,"Returns the event payload.","Removed in PFD3",,,,,,,,,,
4510,"javax.slee.connection.SleeConnectionFactory",,,"Pfd3","Context",,,,"A factory interface allowing the creation of SleeConnection instances. ",,,,,,,,,,,
4511,,,,"Pfd3","Context",,,,"This is modelled as a Connector Architecture non-CCI connection factory interface.",,,,,,,,,,,
4512,,,,"Pfd3","Optional",,,,"A SLEE vendor provides an implementation of this interface if they support external interoperability.",,,,,,,,,,,
4513,,,,"Pfd3","Context",,,,"An implementation of the SleeConnectionFactory is expected to hold all the information necessary to create connections on demand and will be bound into JNDI.  An EJB application retrieves the SleeConnectionFactory from JNDI and uses it to create SleeConnection objects as needed.",,,,,,,,,,,
4514,,,,"Pfd3","Optional",,,,"Implementations of SleeConnectionFactory that are packaged as part of a Connector Architecture ResourceAdaaptor should additionally implement java.io.Serializable and javax.resource.Referencable",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4515,"javax.slee.connection.SleeConnectionFactory","getConnection",,"Pfd3","Optional",,,,"Return a SleeConnection object that corresponds to a connection to the SLEE this factory is associated with.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4516,,,,"Pfd3","Optional",,,,"ResourceException - if a SleeConnection cannot be created",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4517,"javax.slee.connection.ExternalActivityHandle",,,"Pfd3","Context",,,,"A marker interface implemented by external activity handle implementations",,,,,,,,,,,
4518,,,,"Pfd3","Self-Evident",,,,"Instances implementing this interface are returned by SleeConnection.createActivityHandle",,,,,,,,,,,
4519,"javax.slee.connection.ExternalActivityHandle","equals",,"Pfd3","Context",,,,"Compares this handle to another for equality",,,,,,,,,,,
4520,,,,"Pfd3","Optional",,,,"Returns true if other refers to an ExternalActivityHandle corresponding to the same underlying SLEE activity.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4521,"javax.slee.connection.ExternalActivityHandle","hashCode",,"Pfd3","Optional",,,,"Returns a hashcode for this handle",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4522,,,,"Pfd3","Optional",,,,"Implementations of ExternalActivityHandle should ensure their implementation of hashCode() is consistent with equals()",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4485,"javax.slee.connection.SleeConnection",,"1","Pfd3","Context",,,,"An application handle to a physical event-delivery connection to a SLEE.",,,,,,,,,,,
3453,,,"1","Pfd2","Optional",,,,"This interface is used by EJB components external to the SLEE to communicate with the SLEE's event routing subsystem.",,,,,,,,,,,
3454,,,"2 ","Pfd2","Optional",,,,"A SLEE vendor provides an implementation of this interface if they support external interoperability.",,,,,,,,,,,
4486,,,"3","Pfd3","Context",,,,"Instances of SleeConnection are created by an EJB application calling SleeConnectionFactory.getConnection ",,,,,,,,,,,
4487,,,"4","Pfd3","Out of Scope",,,,"Implementations may defer validation of arguments and detection of errors beyond the return of a method invocation.",,,,,,,,,,,
4488,,,"4","Pfd3","Ap Recom",,,,"... Clients of this interface should not depend on exceptions being thrown in the face of these errors",,,,,,,,,,,
3455,"javax.slee.connection.SleeConnection","createActivity",,"Pfd2","Removed",,,,,"Removed in PFD3",,,,,,,,,,
3456,,,"2 ","Pfd2","Removed",,,,"This is a required transactional method.","Removed in PFD3",,,,,,,,,,
3457,,,"3","Pfd2","Removed",,,,"Returns an ExternalActivity object representing a new activity created in the SLEE.","Removed in PFD3",,,,,,,,,,
3458,,,"4.1","Pfd2","Removed",,,,"FactoryException - if the activity could not be created by the SLEE due to a system-level failure.","Removed in PFD3",,,,,,,,,,
4489,"javax.slee.connection.SleeConnection","createActivityHandle","1","Pfd3","Method",,,,,,"Not testable, as SLEE vendors are not required to support external interoperability.",,,,,,,,,
4490,,,"2 ","Pfd3","Optional",,,,"Creates a new external activity handle.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4491,,,"2 ","Pfd3","Optional",,,,"The external handle may be used to fire events to an external SLEE activity.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4492,,,"2 ","Pfd3","Optional",,,,"Events fired using a particular external activity handle will be delivered to a single activity within the SLEE, with the exception that the SLEE may end the activity if no SBBs remain attached, and recreate a new activity for a subsequent event fired with the same handle.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4493,,,"3.2","Pfd3","Optional",,,,"ResourceException - if this connection is closed, or an activity handle could not be allocated due to a system level failure.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4494,,,"3.1","Pfd3","Optional",,,,"Returns a new, unique ExternalActivityHandle object",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
3459,"javax.slee.connection.SleeConnection","endActivity",,"Pfd2","Removed",,,,,"Removed in PFD3",,,,,,,,,,
3460,,,"2 ","Pfd2","Removed",,,,"This is a required transactional method.","Removed in PFD3",,,,,,,,,,
3461,,,"3","Pfd2","Removed",,,,"activity - the external activity to end.  This activity must have been previously obtained from the createActivity() method.","Removed in PFD3",,,,,,,,,,
3462,,,"4.1","Pfd2","Removed",,,,"java.lang.NullPointerException - if activity is null.","Removed in PFD3",,,,,,,,,,
3463,,,"4.2","Pfd2","Removed",,,,"UnrecognizedActivityException - if activity is not a valid external activity created by the SLEE.","Removed in PFD3",,,,,,,,,,
3464,,,"4.3","Pfd2","Removed",,,,"SLEEException - if the activity could not be ended due to a system-level failure.","Removed in PFD3",,,,,,,,,,
4495,"javax.slee.connection.SleeConnection","getEventTypeID",,"Pfd3","Method",,,,,,"Not testable, as SLEE vendors are not required to support external interoperability.",,,,,,,,,
4496,,,"1","Pfd3","Optional",,,,"Retrieves an EventTypeID that identifies a particular SLEE event",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4497,,,"1","Pfd3","Context",,,,"This method does not necessarily validate the existence of the event type in the SLEE.",,,,,,,,,,,
4498,,,"2.1","Pfd3","Optional",,,,"UnrecognizedEventException if the SleeConnection determines there is no corresponding event known to the SLEE",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4499,,,"2.2","Pfd3","Optional",,,,"ResourcecException if this connection is closed, or the relevant EventTypeID could not be located due to a system-level failure.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
3465,"javax.slee.connection.SleeConnection","fireEvent",,"Pfd2","Optional",,,,,,,,,,,,,,,
4500,,,"1","Pfd3","Optional",,,,"Fires an event on an external activity.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
3466,,,"2 ","Pfd2","Optional",,,,"If a transaction is in progress, the event is only delivered if the transaction commits.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
3467,,,"4.1","Pfd2","Optional",,,,"java.lang.NullPointerException - if event, eventType or activityHandle is null.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
3468,,,"4.2","Pfd2","Optional",,,,"UnrecognizedActivityException - if activity is not a valid external activity handle.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4501,,,"4.2","Pfd3","Optional",,,,"UnrecognizedEventException if eventType is not a valid SLEE event type.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
3469,,,"4.3","Pfd2","Impossible",,,,"ResourceException - if the connection is closed or the event could not be fired due to a system-level failure.",,,,,,,,,,,
4502,"javax.slee.connection.SleeConnection","close",,"Pfd3","Method",,,,,,"Not testable, as SLEE vendors are not required to support external interoperability.",,,,,,,,,
4503,,,"1","Pfd3","Optional",,,,"Closes this SleeConnection, any further use of this SleeConnection will result in a ResourceException being thrown.",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
4504,,,"2 ","Pfd3","Optional",,,,"ResourceException - if the connection is already closed or could not be closed due to a system level failure",,"SLEE vendors are not required to support external interoperability.",,,,,,,,,
3470,"javax.slee.facilities.ActivityContextNamingFacility",,"1","Pfd2","Context",,,,"The Activity Context Naming Facility provides a global flat namespace for naming Activity Contexts.",,,,,,,,,,,
3471,,,"1","Pfd2","Context",,,,"It allows an SBB entity to bind a name to an Activity Context, and other SBb entities to lookup the Activity Context by this name.",,,,,,,,,,,
3472,,,"1","Pfd2","Covered",1347,,,"An Activity Context can be bound to zero or more names.",,,,,,,,,,,
3473,,,"2 ","Pfd2","Assertion",,,"High","This facility is transactional in nature.  Naming operations only take effect once the enclosing transaction commits.",,,"Test3473Test",,,"Name an Activity, mark the transaction for rollback, ensure that the created name is not visible in another transaction (for example a following event handler).","Cath","Complete",,,
3474,,,"3","Pfd2","Covered",1413,,,"SBB JNDI Location: java:comp/env/slee/facilities/activitycontextnaming",,,,,,,,,,,
3475,"javax.slee.facilities.ActivityContextNamingFacility","bind",,"Pfd2","Method","1353,1360,1362,1361,1356",,,,,,,,,,,"Complete",,,
3476,,,"2 ","Pfd2","Covered",1353,,,"This method is a mandatory transactional method.",,,,,,,,,,,
3477,,,"4.1","Pfd2","Covered",1360,,,"java.lang.NullPointerException - if any argument is null.",,,,,,,,,,,
3478,,,"4.2","Pfd2","Covered",1362,,,"java.lang.IllegalArgumentException - if name is zero-length",,,,,,,,,,,
3479,,,"4.3","Pfd2","Covered",1361,,,"NameAlreadyBoundException - if the specified name is already bound to some Activity Context.",,,,,,,,,,,
4807,,,"4.4","Pfd3","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3480,,,"4.5","Pfd2","Removed",,,,"TransactionRolledBackLocalException - if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
3481,,,"4.6","Pfd2","Covered",1356,,,"FacilityException - if the activity context could not be bound due to a system-level failure.",,,,,,,,,,,
3482,"javax.slee.facilities.ActivityContextNamingFacility","unbind",,"Pfd2","Method","1353,1366,1367,1356",,,,,,,,,,,"Complete",,,
3483,,,"2 ","Pfd2","Covered",1353,,,"This method is a mandatory transactional method.",,,,,,,,,,,
3484,,,"4.1","Pfd2","Covered",1366,,,"NullPointerException - if name is null",,,,,,,,,,,
4808,,,"4.2","Pfd3","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3485,,,"4.3","Pfd2","Covered",1367,,,"NameNotBoundException - if the specified name is not currently bound to an Activity Context.",,,,,,,,,,,
3486,,,"4.4","Pfd2","Removed",,,,"TransactionRolledBackLocalException - if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
3487,,,"4.5","Pfd2","Covered",1356,,,"FacilityException  - if the name could not be unbound due to a system-level failure.",,,,,,,,,,,
3488,"javax.slee.facilities.ActivityContextNamingFacility","lookup",,"Pfd2","Method","1353,13790,1372,1371,1356",,,,,,,,,,,"Complete",,,
3489,,,"2 ","Pfd2","Covered",1353,,,"This method is a mandatory transactional method.",,,,,,,,,,,
3490,,,"4","Pfd2","Covered","1370,1372",,,"Returns an ActivityContextInterface object that encapsulates the Activity Context bound to the specified name.  If no Activity Context is bound to the name, this method returns null.",,,,,,,,,,,
3491,,,"5.1","Pfd2","Covered",1371,,,"java.lang.NullPointerException - if name is null.",,,,,,,,,,,
4809,,,"5.2","Pfd3","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
3492,,,"5.2","Pfd2","Removed",,,,"TransactionRolledBackLocalException - if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
3493,,,"5.3","Pfd2","Covered",1356,,,"FacilityException - if the lookup failed due to a system-level failure.",,,,,,,,,,,
3494,"javax.slee.facilities.AlarmFacility",,"1","Pfd2","Context",,,,"The Alarm Facility is used by SBBs (and other components as determined by the SLEE vendor) to generate alarm notifications intended for consumption by management clients external to the SLEE.",,,,,,,,,,,
3495,,,"1","Pfd2","Assertion",,,"Low","Management clients register interest in receiving alarm notifications using the SLEE's AlarmMBean object.",,,,,,,,,,,
3496,,,"2 ","Pfd2","Assertion",,,"Low","The Alarm Facility is non-transactional.",,,,,,,,,,,
3497,,,"2 ","Pfd2","Assertion",,,"Low","The effects of operations invoked on this facility occur immediately regardless of the state or outcome of any enclosing transaction.",,,,,,,,,,,
3498,,,"3","Pfd2","Repeat","1410",,,"SBB JNDI Location: java:comp/env/slee/facilities/alarm",,,,,,,,,,,
3499,"javax.slee.facilities.AlarmFacility","createAlarm",,"Pfd2","Method","4465",,,,,,,,,,,,,,
4465,,,"1","Pfd2","Assertion",,,"High","Emit an alarm notification containing the specified alarm message",,,"Test4465Test",,,"Register to receive AlarmNotification messages.  Send event to SBB, in SBB event handler createAlarm(), verify that Alarm Notification is received with the specified message.","Cath","Complete",,,
3500,,,"2 ","Pfd2","Assertion",,,"Low","This method is a non-transactional method.",,,,,,,,,,,
3501,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if any parameter is null.",,,,,,,,,,,
3502,,,"4.2","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException - if alarmLevel == Level.OFF.",,,,,,,,,,,
3503,,,"4.3","Pfd2","Assertion",,,"Low","UnrecognizedComponentException - if alarmSource is not a recognizable ComponentID object for the SLEE or it does not correspond with a component installed in the SLEE.",,,,,,,,,,,
3504,,,"4.4","Pfd2","Impossible",,,,"FacilityException - if the alarm could not be generated due to a system-level failure.",,,,,,,,,,,
3505,"javax.slee.facilities.TimerEvent",,"2 ","Pfd2","Self-Evident",,,,"The event type name of timer events is ""javax.slee.facilities.TimerEvent"".",,,,,,,,,,,
3506,"javax.slee.facilities.TimerEvent","getTimerID",,"Pfd2","Method",3507,,,,,,,,,,,,,,
3507,,,"2 ","Pfd2","Assertion",,,"High","Returns the timer ID.",,,"Test3507Test",,,"Create a timer, store its ID in a CMP field.  When the TimerEvent goes off verify that the TimerEvent.getTimerID() is equal to that stored in the CMP field.","Cath","Complete",,,
3508,"javax.slee.facilities.TimerEvent","getScheduledTime",,"Pfd2","Method",3509,,,,,,,,,,,,,,
3509,,,"2 ","Pfd2","Assertion",,,"High","Returns the time (in ms since January 1, 1970 UTC) that this timer event was scheduled to be fired.",,,"Test3507Test",,,"Create a timer, store the requested fire time in a CMP field.  When the event is fired ensure that the getScheduledTime() value is within expected parameters (i.e. <= firedTime() + timeout).","Cath","Complete",,,
3510,"javax.slee.facilities.TimerEvent","getExpireTime",,"Pfd2","Method",3511,,,,,,,,,,,,,,
3511,,,"2 ","Pfd2","Assertion",,,"High","Returns the time (in ms since January 1, 1970 UTC) that timer event was fired.",,,"Test3507Test",,,"Create a timer, check that getExpireTime() is close to the current time when the event is fired.","Cath","Complete",,,
3512,"javax.slee.facilities.TimerEvent","getPeriod",,"Pfd2","Method",3513,,,,,,,,,,,,,,
3513,,,"2 ","Pfd2","Assertion",,,"High","Returns the period of the timer.  For non-repeating timers, the value returned is Long.MAX_VALUE.",,,"Test3507Test",,,"Create a non-repeating timer.  Verify that TimerEvent.getPeriod() == Long.MAX_VALUE.","Cath","Complete",,,
3514,"javax.slee.facilities.TimerEvent","getNumRepetitions",,"Pfd2","Method","1244,3516,3517",,,,,,,,,,,,,,
3515,,,"2 ","Pfd2","Covered","1244",,,"Returns the number of repetitions for the timer.",,,,,,,,,,,
3516,,,"2 ","Pfd2","Assertion",,,"High","For infinitely repeating timers, then value returned is 0.",,,"Test3516Test",,,"Create an infinitely repeating timer, in its first event check that getNumRepetitions is 0, then cancel the timer.","Cath","Complete",,,
3517,,,"2 ","Pfd2","Assertion",,,"High","For non repeating timers the value returned is 1.",,,"Test3507Test",,,"Create a non-repeating timer.  Verify that the number of repetitions is 1.","Cath","Complete",,,
3518,"javax.slee.facilities.TimerEvent","getRemainingRepetitions",,"Pfd2","Method","1245,3520,3521,3522",,,,,,,,,,,,,,
3519,,,"2 ","Pfd2","Covered","1245",,,"Returns the number of remaining repetitions.",,,,,,,,,,,
3520,,,"2 ","Pfd2","Assertion",,,"High","For infinitely repeating timers, the value returned is always Integer.MAX_VALUE.",,,"Test3516Test",,,"Create infinitely repeating timer, verify that getRemainingRepetitions() is Long.MAX_VALUE in the event handler.","Cath","Complete",,,
3521,,,"2 ","Pfd2","Assertion",,,"High","For finitely repeating timers the value is getNumRepetitions() - iteration number.",,,"Test3521Test",,,"Create finite repeating timer, in the TimerEvent check that getRemainingRepetitions() = getNumRepetitions() - iteration number.","Cath","Complete",,,
3522,,,"2 ","Pfd2","Assertion",,,"High","For non-repeating timers the value returned is 0.",,,"Test3507Test",,,"Create non-repeating timer.  In event handler check that getRemainingRepetitions() is 0.","Cath","Complete",,,
3523,"javax.slee.facilities.TimerEvent","getMissedRepetitions",,"Pfd2","Method",3524,,,,,,,,,,,,,,
3524,,,"2 ","Pfd2","Assertion",,,"High","Returns the number of missed repetitions.",,,"Test3507Test",,,"Create non-repeating timer, in event handler retrieve number of missed repetitions - should be 0.","Cath","Complete",,,
3525,"javax.slee.facilities.TimerFacility",,"1","Pfd2","Context",,,,"The Timer Facility allows an SBB entity to set and cancel timers.",,,,,,,,,,,
3526,,,"1","Pfd2","Assertion",,,"High","Timers are identified by a serializable TimerID object. When a new timer is set, the Timer Facility generates a TimerID that identifies the timer.  ",,,"Test3526Test",,,"Create two timers and verify that they are not equal to one another.  Serializable is tested by assertion 1175.","Cath","Complete",,,
3527,,,"1","Pfd2","Covered","1203",,,"The timer can be cancelled at a later time by passing this TimerID to the cancelTimer(TimerID) method.",,,,,,,,,,,
3528,,,"2 ","Pfd2","Covered",1180,,,"This facility is transactional in nature.  Timers are only set or cancelled if the transaction in which their setup or cancellation took place commits successfully.",,,,,,,,,,,
3529,,,"2 ","Pfd2","Assertion",,,"High","A timer may be set and cancelled in the same transaction, in which case the Timer Facility can consider it never set.",,,"Test3526Test",,,"Create and cancel a timer within a single event handler.  Make sure no exceptions are thrown.","Cath","Complete",,,
3530,,,"3","Pfd2","Context",,,,"Although the unit for the period of a periodic timer is specified in milliseconds, a Timer Facility implementation may be limited by the available clock resolution and/or schedular implementation of the underlying platform. The approximate timer resolution of the Timer Facility can be obtained via getResolution(), allowing SBB entities to create timers that take into account the timer resolution of the Timer Facility. ",,,,,,,,,,,
3531,,,"4","Pfd2","Assertion",,,"High","SBB JNDI Location: java:comp/env/slee/facilities/timer",,,"Test3531Test",,,"Look up the timer facility and ensure it is there.","Cath","Complete",,,
3532,"javax.slee.facilities.TimerFacility","setTimer",,"Pfd2","Method","3533,3534,3535,3536,3537,3538,3539,3540,3541,3542",,,,,,,,,,,,,,
3533,,,"1","Pfd2","Assertion",,,"High","A single timer event is generated when the timer expires, after which the timer ceases to exist. ",,,"Test3533Test",,,"Can determine that a timer only goes off once by creating the timer, sending message to the TCK when it goes off.  Then on TCK timeout check that the timer has gone off only once.","Cath","Complete",,,
3534,,,"1","Pfd2","Repeat",1952,,,"The timer event is delivered on the specified Activity Context.",,,,,,,,,,,
3535,,,"2 ","Pfd2","Assertion",,,"High","If the expiry time is in the past, the timer event is fired immediately after the transaction commits (subject to the options specified for the timer).",,,"Test3535Test",,,"Create timer with expiry time in the past, verify that timer event is received within a small time of the TXN committing.","Cath","Complete",,,
3536,,,"3","Pfd2","Assertion",,,"High","This method is a required transactional method.",,,"Test3549Test",,,"As for 3549, but using this variant of setTimer() method.","Cath","Complete",,,
3537,,,"4","Pfd2","Covered","1952",,,"aci - the Activity Context on which the timer event should be fired.",,,,,,,,,,,
3538,,,"4","Pfd2","Assertion",,,"High","address - the optional default address on which the timer event should be fired.",,"Could check re Sbb entity creation/convergence names; but this should be covered by event router tests - i.e. The convergence name tests Related to 3551",,,,,,,,,"Y"
3539,,,"4","Pfd2","Covered",1195,,,"expireTime - the time (in ms since January 1, 1970 UTC) that the timer event should be fired.",,"ExpireTime is startTime",,,,,,,,,
3540,,,"4","Pfd2","Covered","3546, 3562",,,"options - the desired behavior of the timer.",,"Covered by 3546, 3562 and many other tests.",,,,,,,,,
3541,,,"5.1","Pfd2","Covered","1200",,,"java.lang.NullPointerException - if aci or options is null.",,,,,,,,,,,
3542,,,"5.2","Pfd2","Covered","1201",,,"java.lang.IllegalArgumentException - if startTime or numRepetitions is less than zero, period is not greater than zero, or the timeout specified in options is greater than period.",,,,,,,,,,,
3543,,,"5.3","Pfd2","Impossible",,,,"TransactionRolledBackLocalException - if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
3544,,,"5.4","Pfd2","Impossible",,,,"FacilityException - if the timer could not be set due to a system-level failure.",,,,,,,,,,,
3545,"javax.slee.facilities.TimerFacility","setTimer",,"Pfd2","Method","3546,3547,3548,3549,3550,3551,3552,3553,3554,3556,3557",,,,,,,,,,,,,,
3546,,,"1","Pfd2","Assertion",,,"High","When the start time of a periodic timer has been reached, a timer event is generated and the timer continues, generating further timer events at the rate specified by the timer's period.  A periodic timer may have either a finite or infinite number of repetitions.",,,"Test3546Test",,,"Create a periodic timer with three repetitions.  Ensure that the first timer event is fired and received at a time close to the start time.  Ensure that the second and third events are received then return test pass.","Cath","Complete",,,
3547,,,"1","Pfd2","Covered","1952",,,"Timer events are delivered on the specified Activity Context.",,,,,,,,,,,
3548,,,"2 ","Pfd2","Repeat","1195",,,"If the start time is in the past, the start time is advanced to the current time.",,,,,,,,,,,
3549,,,"3","Pfd2","Assertion",,,"High","This method is a required transactional method.",,,"Test3549Test",,,"Create a timer, roll back the txn and verify that the timer does not get fired","Cath","Complete",,,
3550,,,"4","Pfd2","Covered",1952,,,"aci - the Activity Context on which timer events should be fired.",,,,,,,,,,,
3551,,,"4","Pfd2","Assertion",,,"High","address - the optional default address on which timer events should be fired.",,"Could check re Sbb entity creation/convergence names; but this should be covered by event router tests - i.e. The convergence name tests Related to 3538",,,,,,,,,
3552,,,"4","Pfd2","Covered",1195,,,"startTime - the time (in ms since January 1, 1970 UTC) at which the periodic timer should first fire.",,,,,,,,,,,
3553,,,"4","Pfd2","Covered","3546",,,"period - the period (in milliseconds) between timer events.",,"Covered by 3546 - ""generating further events at the rate specified by the timer's period"".",,,,,,,,,
3554,,,"4","Pfd2","Repeat",1197,,,"numRepetitions - the maximum number of timer events that should be generated by the timer. If this argument is 0 an infinitely repeating timer is set.",,,,,,,,,,,
3555,,,"4","Pfd2","Context",,,,"options - the desired behavior of the timer.",,,,,,,,,,,
3556,,,"5.1","Pfd2","Covered","1200",,,"java.lang.NullPointerException - if aci or options is null.",,,,,,,,,,,
3557,,,"5.2","Pfd2","Assertion",,,"High","java.lang.IllegalArgumentException - if startTime or numRepetitions is less than zero, or the timeout specified in options is greater than period.",,"The TimerFacilityTest-exception test checks  the negative numRepetitions case as 3557. The other two cases are checked as 1201","facilities/timerfacility/TimerFacilityTest-exception",,,,"Ben","Complete",,,
3558,,,"5.3","Pfd2","Impossible",,,,"TransactionRolledBackLocalException - if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
3559,,,"5.4","Pfd2","Impossible",,,,"FacilityException - if the timer could not be set due to a system-level failure.",,,,,,,,,,,
3560,"javax.slee.facilities.TimerFacility","cancelTimer",,"Pfd2","Method","1203,3562,3563,3564",,,,,,,,,,,,,,
3561,,,"1","Pfd2","Repeat","1203",,,"Cancel a previously set timer",,,,,,,,,,,
3562,,,"2 ","Pfd2","Assertion",,,"High","This method has no effect if the timer has already been cancelled.",,,"Test3562Test",,,"Cancel a timer, then cancel it again.  Ensure that no exceptions, etc are thrown.","Cath","Complete",,,
3563,,,"3","Pfd2","Assertion",,,"High","This method is a required transactional method.",,,"Test3563Test",,,"Create a timer, then in a separate txn cancel the timer and  rolls back that txn, then verify that the timer gets fired after the  cancel timer txn was rolled back","Cath","Complete",,,
3564,,,"4","Pfd2","Covered","1203",,,"timerID - the timer ID of the timer to cancel",,,,,,,,,,,
3565,,,"5.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if timerID is null.",,,,,,,,,,,
3566,,,"5.2","Pfd2","Impossible",,,,"TransactionRolledBackLocalException - if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
3567,,,"5.3","Pfd2","Impossible",,,,"FacilityException - if the timer could not be cancelled due to a system-level failure.",,,,,,,,,,,
3568,"javax.slee.facilities.TimerFacility","getResolution",,"Pfd2","Method","3570",,,,,,,,,,,,,,
3569,,,"2 ","Pfd2","Optional",,,,"This method is a non-transactional method.",,"Unspecified txn context: the vendor can choose whether or not to invoke within a txn context.",,,,,,,,,
3570,,,"3","Pfd2","Assertion",,,"High","Returns the approximate timer resolution (in milliseconds).",,,"Test3570Test",,,"Call TimerFacility.getResolution(), ensure a value is returned.","Cath","Complete",,,
3571,,,"4.1","Pfd2","Impossible",,,,"FacilityException - if the timer resolution could not be obtained due to a system-level failure.",,,,,,,,,,,
3572,"javax.slee.facilities.TimerFacility","getDefaultTimeout",,"Pfd2","Method","3574",,,,,,,,,,,,,,
3573,,,"2 ","Pfd2","Optional",,,,"This method is a non-transactional method.",,"Unspecified txn context: the vendor can choose whether or not to invoke within a txn context.",,,,,,,,,
3574,,,"3","Pfd2","Assertion",,,"High","Returns the default timeout period (in milliseconds) of the Timer Facility.",,,"Test3574Test",,,"Call TimerFacility.getDefaultTimeout().","Cath","Complete",,,
3575,,,"4.1","Pfd2","Impossible",,,,"FacilityException - if the default timeout period could not be obtained due to a system-level failure.",,,,,,,,,,,
3576,"javax.slee.facilities.TimerID","equals",,"Pfd2","Method","3577",,,,,,,,,,,,,,
3577,,,"4","Pfd2","Assertion",,,"High","Returns true if obj is an instance of this class representing the same timer as this, false otherwise.",,,"Test3577Test",,,"Compare a timer against itelf and ensure that true is returned.  Compare a timer against another timer and ensure false is returned.  Compare timer against null timer, ensure false is returned.","Cath","Complete",,,
3578,"javax.slee.facilities.TimerID","hashCode",,"Pfd2","Method","3579",,,,,,,,,,,,,,
3579,,,"4","Pfd2","Assertion",,,"Low","Returns a hash code value.",,,"Test3579Test",,,"Call and verify that exception isn't thrown.","Cath","Complete",,,
3580,"javax.slee.facilities.TimerID","toString",,"Pfd2","Method","3581",,,,,,,,,,,,,,
3581,,,"4","Pfd2","Assertion",,,"Low","Returns the texual representation of the timer ID object.",,,"Test3579Test",,,"Call and verify that non-null value is returned and no exception is thrown.","Cath","Complete",,,
3582,"javax.slee.facilities.TraceFacility",,"1","Pfd2","Context",,,,"The Trace Facility is used by SBBs (and other components as determined by the SLEE vendor) to generate trace notifications intended for consumption by management clients external to the SLEE.",,,,,,,,,,,
3583,,,"1","Pfd2","Assertion",,,"Low","Management clients register interest in receiving trace notifications using the SLEE's TraceMBean object.",,,,,,,,,,,
4484,,,"1","Pfd3","Assertion",,,"High","The Trace Facility is non-transactional.  The effects  of operations invoked in this facility occur immediately regardless of the state or outcome of any enclosing transaction.",,,"Test4484Test",,,"Register a TraceNotification listener and count the tracece notifications received.  Call create trace from an Sbb event handler and count the number of trace notifications received in the test.  Set rollback-only in the Sbb event handler.  Check that a notification is received for every trace made by the Sbb, regardless of whether the transaction rolls back.","Nick","Complete",,,
3584,,,"2 ","Pfd2","Repeat",1411,,,"SBB JNDI Location: java:comp/env/slee/facilities/trace",,,,,,,,,,,
3585,"javax.slee.facilities.TraceFacility","getTraceLevel",,"Pfd2","Method","3588",,,,,,,,,,,,,,
3586,,,"2 ","Pfd2","Assertion",,,"Low","This method is a non-transactional method.",,,,,,,,,,,
3587,,,"4","Pfd2","Assertion",,,"Low","Returns the current trace filter level for the identified component.",,,,,,,,,,,
3588,,,"5.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException if id is null.",,,"Test3588Test",,,"Call TraceFacility.getTraceLevel() with null id argument.","Cath","Complete",,,
3589,,,"5.2","Pfd2","Assertion",,,"Low","UnrecognizedComponentException - if id is not a recognizable ComponentID object for the SLEE or it does not correspond with a component installed in the SLEE.",,,,,,,,,,,
3590,,,"5.3","Pfd2","Impossible",,,,"FacilityException - if the trace level could not be obtained due to a system-level failure.",,,,,,,,,,,
3591,"javax.slee.facilities.TraceFacility","createTrace",,"Pfd2","Method","4466",,,,,,,,,,,,,,
4466,,,"1","Pfd2","Assertion",,,"High","Emit a trace notification containing the specified trace message",,,"Test4466Test",,,"Add Notification Listener, create trace, verify that received notification contains the correct message.","Cath","Complete",,,
3592,,,"1","Pfd2","Assertion",,,"Low","The trace notification will only be generated by the TraceMBean if the trace filter level of the specified component does not cause the trace message to be filtered.",,,,,,,,,,,
3593,,,"2 ","Pfd2","Assertion",,,"Low","This method is a non-transactional method.",,,,,,,,,,,
3594,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if any parameter is null.",,,,,,,,,,,
3595,,,"4.2","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException - if traceLevel = Level.OFF.",,,,,,,,,,,
3596,,,"4.3","Pfd2","Assertion",,,"Low","UnrecognizedComponentException - if messageSource is not a recognizable Component ID object for the SLEE or it does not correspond with a component installed in the SLEE.",,,,,,,,,,,
3597,,,"4.4","Pfd2","Impossible",,,,"FacilityException - if the trace could not be generated due to a system-level failure.",,,,,,,,,,,
3598,"javax.slee.facilities.UsageFacility",,"1","Pfd2","Removed",,,,"The Usage Facility is used by an SBB to update the values of the usage parameters that the SBB has declared in its deployment descriptor.",,,,,,,,,,,
3599,,,"2 ","Pfd2","Removed",,,,"The current values of all usage parameters for an SBB are available by interrogating the ServiceUsageMBean for the Service that uses the SBB.",,,,,,,,,,,
3600,,,"3","Pfd2","Removed",,,,"SBB JNDI Location: java:comp/env/slee/facilities/usage.",,,,,,,,"Removed",,,
3601,"javax.slee.facilities.UsageFacility","increment",,"Pfd2","Removed",,,,,,,,,,,,"Removed",,,
4467,,,"1","Pfd2","Removed",,,,"Increment the value of a usage parameter.",,,,,,,,"Removed",,,
3602,,,"2 ","Pfd2","Removed",,,,"This method is a required transactional method.",,,,,,,,,,,
3603,,,"4.1","Pfd2","Removed",,,,"java.lang.NullPointerException - if serviceID, sbbID, or paramName is null.",,,,,,,,,,,
3604,,,"4.2","Pfd2","Removed",,,,"UnrecognizedServiceException - if serviceID is not a recognizable ServiceID for the SLEE or it does not correspond with a Service installed in the SLEE",,,,,,,,,,,
3605,,,"4.3","Pfd2","Removed",,,,"UnrecognizedSbbException - if sbbID is not a recognizable SbbID for the SLEE, does not correspond with an SBB installed in the SLEE, or is not an SBB that participates in the specified Service.",,,,,,,,,,,
3606,,,"4.4","Pfd2","Removed",,,,"UnrecognizedUsageParameterException - if paramName does not match with one of the usage parameters defined in the SBB's deployment descriptor.",,,,,,,,,,,
3607,,,"4.5","Pfd2","Removed",,,,"TransactionRolledBackLocalException - if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
3608,,,"4.6","Pfd2","Removed",,,,"FacilityException - if the usage parameter could not be updated due to a system-level failure.",,,,,,,,,,,
3609,"javax.slee.facilities.UsageFacility","set ",,"Pfd2","Removed",,,,,,,,,,,,"Removed",,,
4468,,,"1","Pfd2","Removed",,,,"Set the value of a usage parameter to an explicit value",,,,,,,,"Removed",,,
3610,,,"2 ","Pfd2","Removed",,,,"This method is a required transactional method.",,,,,,,,,,,
3611,,,"4.1","Pfd2","Removed",,,,"java.lang.NullPointerException - if serviceID, sbbID, or paramName is null.",,,,,,,,,,,
3612,,,"4.2","Pfd2","Removed",,,,"UnrecognizedServiceException - if serviceID is not a recognizable ServiceID for the SLEE or it does not correspond with a Service installed in the SLEE",,,,,,,,,,,
3613,,,"4.3","Pfd2","Removed",,,,"UnrecognizedSbbException - if sbbID is not a recognizable SbbID for the SLEE, does not correspond with an SBB installed in the SLEE, or is not an SBB that participates in the specified Service.",,,,,,,,,,,
3614,,,"4.4","Pfd2","Removed",,,,"UnrecognizedUsageParameterException - if paramName does not match with one of the usage parameters defined in the SBB's deployment descriptor.",,,,,,,,,,,
3615,,,"4.5","Pfd2","Removed",,,,"TransactionRolledBackLocalException - if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
3616,,,"4.6","Pfd2","Removed",,,,"FacilityException - if the usage parameter could not be updated due to a system-level failure.",,,,,,,,,,,
3617,"javax.slee.facilities.Level",,"1","Pfd2","Context",,,,"This class defines an enumerated type for the alarm and trace levels supported by the Alarm Facility and Trace Facility.  The class is based on the Java Logging API included with J2SE 1.4.",,,,,,,,,,,
3618,,,"2 ","Pfd2","Assertion",,,"Low","A singleton instance of each enumerated value is guaranteed so that equality tests uses == are always evaluated correctly.",,,,,,,,,,,
3619,,,"2 ","Pfd2","Assertion",,,"Low","This equality test is only guaranteed if this class is loaded in the application's boot class path, rather than dynamically loaded at runtime.",,,,,,,,,,,
3620,,,"3","Pfd2","Assertion",,,"Low","The levels in descending order are:",,,,,,,,,,,
3621,,,"3.1","Pfd2","Assertion",,,"Low","SEVERE (highest value)",,,,,,,,,,,
3622,,,"3.2","Pfd2","Assertion",,,"Low","WARNING",,,,,,,,,,,
3623,,,"3.3","Pfd2","Assertion",,,"Low","INFO",,,,,,,,,,,
3624,,,"3.4","Pfd2","Assertion",,,"Low","CONFIG",,,,,,,,,,,
3625,,,"3.5","Pfd2","Assertion",,,"Low","FINE",,,,,,,,,,,
3626,,,"3.6","Pfd2","Assertion",,,"Low","FINER",,,,,,,,,,,
3627,,,"3.7","Pfd2","Assertion",,,"Low","FINEST (lowest value)",,,,,,,,,,,
3628,"javax.slee.facilities.Level","fromInt",,"Pfd2","Method","3629",,,,,,,,,,,,,,
3629,,,"3","Pfd2","Assertion",,,"Low","Returns a Level object corresponding to level.",,,"Test3629Test",,,"Call Level.fromInt(Level.LEVEL_WARNING) and verify that returned object passes isWarning test.","Cath","Complete",,,
3630,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.IllegalStateException - if level is not a valid level value.",,,,,,,,,,,
3631,"javax.slee.facilities.Level","toInt",,"Pfd2","Method","3632",,,,,,,,,,,,,,
3632,,,"2 ","Pfd2","Assertion",,,"Low","Returns an integer value representation for this Level object.",,,"Test3629Test",,,"Create Level.fromInt(Level.LEVEL_WARNING).toInt() == Level.LEVEL_WARNING.","Cath","Complete",,,
3633,"javax.slee.facilities.Level","isOff",,"Pfd2","Method","3634",,,,,,,,,,,,,,
3634,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the OFF level, false otherwise.",,,"Test3629Test",,,"Create Level object with this lever, verify that check succeeds.  Create second object with different level, check must fail.","Cath","Complete",,,
3635,"javax.slee.facilities.Level","isSevere",,"Pfd2","Method","3636",,,,,,,,,,,,,,
3636,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the SEVERE level, false otherwise.",,,"Test3629Test",,,"Create Level object with this lever, verify that check succeeds.  Create second object with different level, check must fail.","Cath","Complete",,,
3637,"javax.slee.facilities.Level","isWarning",,"Pfd2","Method","3638",,,,,,,,,,,,,,
3638,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the WARNING level, false otherwise.",,,"Test3629Test",,,"Create Level object with this lever, verify that check succeeds.  Create second object with different level, check must fail.","Cath","Complete",,,
3639,"javax.slee.facilities.Level","isMinor",,"Pfd2","Method","3640",,,,,,,,,,,,,,
3640,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the INFO level, false otherwise.",,,"Test3629Test",,,"Create Level object with this lever, verify that check succeeds.  Create second object with different level, check must fail.","Cath","Complete",,,
3641,"javax.slee.facilities.Level","isConfig",,"Pfd2","Method","3642",,,,,,,,,,,,,,
3642,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the CONFIG level, false otherwise.",,,"Test3629Test",,,"Create Level object with this lever, verify that check succeeds.  Create second object with different level, check must fail.","Cath","Complete",,,
3643,"javax.slee.facilities.Level","isFine",,"Pfd2","Method","3644",,,,,,,,,,,,,,
3644,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the FINE level, false otherwise.",,,"Test3629Test",,,"Create Level object with this lever, verify that check succeeds.  Create second object with different level, check must fail.","Cath","Complete",,,
3645,"javax.slee.facilities.Level","isFiner",,"Pfd2","Method","3646",,,,,,,,,,,,,,
3646,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the FINER level, false otherwise.",,,"Test3629Test",,,"Create Level object with this lever, verify that check succeeds.  Create second object with different level, check must fail.","Cath","Complete",,,
3647,"javax.slee.facilities.Level","isFinest",,"Pfd2","Method","3648",,,,,,,,,,,,,,
3648,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the FINEST level, false otherwise.",,,"Test3629Test",,,"Create Level object with this lever, verify that check succeeds.  Create second object with different level, check must fail.","Cath","Complete",,,
3649,"javax.slee.facilities.Level","isHigherLevel",,"Pfd2","Method","3650",,,,,,,,,,,,,,
3650,,,"3","Pfd2","Assertion",,,"Low","Returns true if the level represented by this Level object is a higher level than the level represented by the specified Level object, false otherwise.",,,"Test3629Test",,,"Create Level.LEVEL_MINOR and Level.LEVEL_SEVERE objects, verify that isHigherLevel returns correctly for both permutations.","Cath","Complete",,,
3651,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if other is null.",,,,,,,,,,,
3652,"javax.slee.facilities.Level","equals",,"Pfd2","Method","3653",,,,,,,,,,,,,,
3653,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is an instance of this class representing the same level as this, false otherwise.",,,"Test3629Test",,,"Create two objects of the same level, verify result is true.  Create two of different levels, result must be false.","Cath","Complete",,,
3654,"javax.slee.facilities.Level","hashCode",,"Pfd2","Method","3655",,,,,,,,,,,,,,
3655,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code value.",,,"Test3629Test",,,"Verify that a hashcode is returned and no exception thrown.","Cath","Complete",,,
3656,"javax.slee.facilities.Level","toString",,"Pfd2","Method","3657",,,,,,,,,,,,,,
3657,,,"3","Pfd2","Assertion",,,"Low","Returns the textual representation of the Level object.",,,"Test3629Test",,,"Verify that a non-null String is returned.","Cath","Complete",,,
3658,"javax.slee.facilities.TimerOptions",,"2 ","Pfd2","Assertion",,,"Low","A persistent timer is reinstated when the SLEE restarts after a complete shutdown (due to catastrophic failure or operator shutdown).  A non-persistent timer is lost in the same circumstance.",,"Too impractical to test?",,,,,,,,,
3659,,,"3","Pfd2","Impossible",,,,"Even though a timer can be persistent, its timer events cannot be fired when the SLEE is not running.",,,,,,,,,,,
3660,,,"4","Pfd2","Context",,,,"Under normal conditions and expected workload, a SLEE and its Timer Facility should be able to fire events on time.  However, under overload conditions, or when the SLEE is not running, the Timer Facility may not be able to do so.  The timeout value allows some flexibility in deciding when a scheduled timer becomes late.  A timer is considered late if the Timer Facility cannot fire a scheduled timer event by its scheduled expiry time + timer timeout.  ",,,,,,,,,,,
3661,,,"4","Pfd2","Repeat","1199",,,"For a periodic timer, the timeout must be less than the timer's period.",,"Repeat of 1199, which is covered by 1201.",,,,,,,,,
3662,,,"5","Pfd2","Removed",,,,"By default the Timer Facility does not generate timer events for timers that fire late.  However an SBB can choose to still receive some or all of the late timer events if desired.",,,,,,,,,,,
4756,,,"5","Pfd3","Context",,,,"The default timer options cause the Timer Facility to only generate the last event in a sequence of late timer events for a timer that fires late.  This guarantees at least one timer event (the last, for a periodic timer) will be generated for a timer.  However an SBB can choose to still receive all or none of the later timer events if desired.",,,,,,,,,,,
3663,"javax.slee.facilities.TimerOptions","TimerOptions()",,"Pfd2","Method","3533,3534,3535,3536,3537,3538,3539,3540,3541,3542",,,,,,,,,,,,,,
3664,,,"1","Pfd2","Context",,,,"Create a TimerOptions object that describes the default timer behavior. The default time behaviour is:",,,,,,,,,,,
3665,,,"2.1","Pfd2","Assertion",,,"Low","the timer is not persistent.",,,,,,,,,,,
3666,,,"2.2","Pfd2","Assertion",,,"Low","The timeout is the SLEE's default timeout period.",,,,,,,,,,,
3667,,,"2.3","Pfd3","Removed",,,,"late timer events are not preserved.",,,,,,,,,,,
4757,,,"2.3","Pfd3","Assertion",,,"Low","only the last in a sequence of late timer events is preserved.",,,,,,,,,,,
3668,"javax.slee.facilities.TimerOptions","TimerOptions(TimerOptions options)",,"Pfd2","Method","3669",,,,,,,,,,,,,,
3669,,,"1","Pfd2","Assertion",,,"Low","Create a TimerOptions object that has the same behavioural properties as another TimerOptions.",,,"Test3669Test",,,"Create TimerOptions object, modify it, create second TimerOptions object with this constructor, verify that two objects are equal.","Cath","Complete",,,
3670,"javax.slee.facilities.TimerOptions","TimerOptions(boolean persistent...)",,"Pfd2","Method","4469",,,,,,,,,,,,,,
4469,,,"1","Pfd2","Assertion",,,"Low","Create a TimerOptions object for the specified timer behavior",,,,,,,,,,,
3671,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if preserveMissed is null.",,,"Test3671Test",,,"Try creating TimerOptions with valid other arguments but null preserveMissed argument.  Verify that nullpointer exception is thrown.","Cath","Complete",,,
3672,,,"3.2","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException - if timeout is less than zero.",,,,,,,,,,,
3673,"javax.slee.facilities.TimerOptions","isPersistent",,"Pfd2","Method","3674",,,,,,,,,,,,,,
3674,,,"2 ","Pfd2","Assertion",,,"Low","Returns true if the timer should be persistent, false otherwise.",,,"Test3674Test",,,,"Cath","Complete",,,
3675,"javax.slee.facilities.TimerOptions","setPersistent",,"Pfd2","Method","3676",,,,,,,,,,,,,,
3676,,,"1","Pfd2","Assertion",,,"High","Set the persistent flag.",,,"Test3674Test",,,"Create TimerOptions, call setPersistent(true), verify that isPersistent() returns true.","Cath","Complete",,,
3677,"javax.slee.facilities.TimerOptions","getTimeout",,"Pfd2","Method","1231",,,,,,,,,,,,,,
3678,,,"2 ","Pfd2","Assertion",,,"Low","Returns the timeout period.",,,,,,,,,,,
3679,"javax.slee.facilities.TimerOptions","setTimeout",,"Pfd2","Method","1180,1235",,,,,,,,,,,,,,
3680,,,"1","Pfd2","Covered","1180,1235",,,"Set the timeout period.",,"Covered by 1180 with valid argument, and 1235 with invalid argument.",,,,,,,,,
3681,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException - if timeout is less than zero.",,,,,,,,,,,
3682,"javax.slee.facilities.TimerOptions","getPreserveMissed",,"Pfd2","Method","3683",,,,,,,,,,,,,,
3683,,,"2 ","Pfd2","Assertion",,,"Low","Returns the value of the preserve-missed option.",,,"Test3683Test",,,"Set the preserve missed value to a known value, then call getpreservemissed and verify the right value is returned.","Cath","Complete",,,
3684,"javax.slee.facilities.TimerOptions","setPreserveMissed",,"Pfd2","Method","1225, 1226, 1227",,,,,,,,,,,,,,
3685,,,"1","Pfd2","Covered","1225, 1226, 1227",,,"Set the value of the preserve-missed option.",,,,,,,,,,,
3686,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if preserveMissed is null.",,,,,,,,,,,
3687,"javax.slee.facilities.TimerOptions","equals",,"Pfd2","Method","3688",,,,,,,,,,,,,,
3688,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is an instance of this class representing the same timer options as this, false otherwise.",,,,,,,,,,,
3689,"javax.slee.facilities.TimerOptions","hashCode",,"Pfd2","Method","3690",,,,,,,,,,,,,,
3690,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code value.",,,"Test3690Test",,,"Call TimerOptions.hashCode() and verify that no exception is thrown.","Cath","Complete",,,
3691,"javax.slee.facilities.TimerOptions","toString",,"Pfd2","Method","3692",,,,,,,,,,,,,,
3692,,,"3","Pfd2","Assertion",,,"Low","Returns the textual representation of the timer options object.",,,"Test3690Test",,,"Call TimerOptions.toString() and verify no exception is thrown and that the returned String is non-null","Cath","Complete",,,
3693,"javax.slee.facilities.TimerPreserveMissed",,"1","Pfd2","Context",,,,"This class defines an enumerated type for the late-timer preservation options supported by the Timer Facility.",,,,,,,,,,,
3694,,,"1","Pfd2","Assertion",,,"Low","A singleton instance of each enumerated value is guaranteed so that equality tests uses == are always evaluated correctly.",,,,,,,,,,,
3695,,,"1","Pfd2","Impossible",,,,"This equality test is only guaranteed if this class is loaded in the application's boot class path, rather than dynamically loaded at runtime.",,,,,,,,,,,
3696,,,"2 ","Pfd2","Context",,,,"The late-timer preservation options are:",,,,,,,,,,,
3697,,,"2.1","Pfd2","Repeat","1226",,,"NONE - timer events for a late timer are not generated",,,,,,,,,,,
3698,,,"2.2","Pfd2","Repeat","1225",,,"ALL - timer events for a late timer are always generated",,,,,,,,,,,
3699,,,"2.3","Pfd2","Repeat","1227",,,"LAST - only one timer event is generated for a late timer, that event corresponding to the most recent firing of the timer. ",,,,,,,,,,,
3700,"javax.slee.facilities.TimerPreserveMissed","fromInt",,"Pfd2","Method","3701",,,,,,,,,,,,,,
3701,,,"3","Pfd2","Assertion",,,"Low","Returns a TimerPreserveMissed object corresponding to the preserveMissed.",,,"Test3701Test",,,"Call TimerPreserveMissed.fromInt(ALL) and verify that it's equal to TimerPreserveMissed.PRESERVE_ALL.","Cath","Complete",,,
3702,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException - if option is not a valid preserve-missed option value.",,,,,,,,,,,
3703,"javax.slee.facilities.TimerPreserveMissed","toInt",,"Pfd2","Method","3704",,,,,,,,,,,,,,
3704,,,"2 ","Pfd2","Assertion",,,"Low","Returns an integer value representation for this TimerPreserveMissed object.",,,"Test3701Test",,,"Verify that TimerPreserveMissed.PRESERVE_ALL.toInt() returns TimerPreserveMissed.ALL.","Cath","Complete",,,
3705,"javax.slee.facilities.TimerPreserveMissed","isNone",,"Pfd2","Method","3706",,,,,,,,,,,,,,
3706,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the NONE option, false otherwise.",,,"Test3701Test",,,"Verify that TimerPreserveMissed.NONE.isNone() returns true, and that TimerPreserveMissed.ALL.isNone() returns false.","Cath","Complete",,,
3707,"javax.slee.facilities.TimerPreserveMissed","isAll",,"Pfd2","Method","3708",,,,,,,,,,,,,,
3708,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the ALL option, false otherwise.",,,"Test3701Test",,,"Verify that TimerPreserveMissed.ALL.isAll() returns true, and that TimerPreserveMissed.ALL.isNone() returns false.","Cath","Complete",,,
3709,"javax.slee.facilities.TimerPreserveMissed","isLast",,"Pfd2","Method","3710",,,,,,,,,,,,,,
3710,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the LAST option, false otherwise.",,,"Test3701Test",,,"Verify that TimerPreserveMissed.LAST.isLast() returns true, and that TimerPreserveMissed.ALL.isLast() returns false.","Cath","Complete",,,
3711,"javax.slee.facilities.TimerPreserveMissed","equals",,"Pfd2","Method","3712",,,,,,,,,,,,,,
3712,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is an instance of this class representing the same preserve-missed option as this, false otherwise.",,,"Test3701Test",,,"Test two equal and two non-equal objects.","Cath","Complete",,,
3713,"javax.slee.facilities.TimerPreserveMissed","hashCode",,"Pfd2","Method","3714",,,,,,,,,,,,,,
3714,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code value.",,,"Test3701Test",,,"Make sure no exception thrown.","Cath","Complete",,,
3715,"javax.slee.facilities.TimerPreserveMissed","toString",,"Pfd2","Method","3716",,,,,,,,,,,,,,
3716,,,"3","Pfd2","Assertion",,,"Low","Returns the textual representation of the TimerPreserveMissed object.",,,"Test3701Test",,,"Verify that toString() doesn't throw an exception and that the returned string is non-null.","Cath","Complete",,,
3717,"javax.slee.management.AlarmMBean",,"1","Pfd2","Context",,,,"The AlarmMBean interface defines the management interface for the AlarmFacility (and other vendor-specific alarm generating interfaces).  No management operations are defined by the AlarmMBean interface, instead it is used as a notification source in the generation of Alarm notifications.",,,,,,,,,,,
3718,,,"2 ","Pfd2","Assertion",,,"Low","The Object Name of a AlarmMBean object can be obtained by a management client via the SleeManagementMBean.getAlarmMBean() method.",,,,,,,,,,,
3719,,,"3","Pfd2","Assertion",,,"Low","Since AlarmMBean objects can emit Alarm notifications, it is required that AlarmMBean object implement the javax.management.NotificationBroadcaster interface.",,,,,,,,,,,
3720,"javax.slee.management.AlarmMBean","ALARM_NOTIFICATION_TYPE","1","Pfd2","Assertion",,,"Low","The notification type of Alarm notifications emitted by this MBean.  The notification type is equal to the string ""javax.slee.management.alarm"".",,,,,,,,,,,
3721,"javax.slee.management.ComponentDescriptor",,"1","Pfd2","Context",,,,"This interface is the common base interface for the interfaces that define the attributes of a component descriptor.",,,,,,,,,,,
3722,,,"1","Pfd2","Context",,,,"The ComponentDescriptor interface is the common base interface for all other component descriptor interfaces.",,,,,,,,,,,
3723,,,"1","Pfd2","Assertion",,,"Low","All deployable components installed in th SLEE have a descriptor containing deployment-related information, specified as a derivitive interface of ComponentDescriptor.",,,,,,,,,,,
3724,"javax.slee.management.ComponentDescriptor","getDeployableUnit",,"Pfd2","Method","3725",,,,,,,,,,,,,,
3725,,,"1","Pfd2","Assertion",,,"Low","Returns the identifier of the deployable unit from which this component was installed.",,,"Test3725Test",,,"Call ComponentDescriptor().getDeployableUnit().equals(duID) where duID is the DUID returned by mgmt.install().","Cath","Complete",,,
3726,"javax.slee.management.ComponentDescriptor","getSource",,"Pfd2","Method","3730",,,,,,,,,,,,,,
3727,,,"1","Pfd2","Context",,,,"Get the name of the source object from which this component was installed.",,,,,,,,,,,
3728,,,"1","Pfd2","Assertion",,,"Low","For Services, this is the name of the deployment descriptor XML file specified in the respective <service-xml> element of the enclosing deployable unit's deployment descriptor.",,,,,,,,,,,
3729,,,"1","Pfd2","Assertion",,,"Low","For components installed from a component jar file, the source is the name of the component jar as specified in the respective <jar> element of the enclosing deployable unit's deployment descriptor.",,,"Test3729Test",,,"Call ComponentDescriptor.getSource() and verify that the name of the returned jar is correct.","Cath","Complete",,,
3730,,,"2 ","Pfd2","Assertion",,,"Low","Returns the name of the source object from where this component was installed.",,,,,,,,,,,
3731,"javax.slee.management.ComponentDescriptor","getID",,"Pfd2","Method","3732",,,,,,,,,,,,,,
3732,,,"2 ","Pfd2","Assertion",,,"Low","Returns the component identifier for this descriptor.",,,"Test3732Test",,,"Call ComponentDescriptor.getID() and verify that it matches th ComponentID of the SBB.","Cath","Complete",,,
3733,"javax.slee.management.ComponentDescriptor","getName",,"Pfd2","Method","3734",,,,,,,,,,,,,,
3734,,,"2 ","Pfd2","Assertion",,,"Low","Returns the name of the component.",,,"Test3732Test",,,"Call ComponentDescriptor.getName() and verify correct name for SBB ComponentDesrciptor.","Cath","Complete",,,
3735,"javax.slee.management.ComponentDescriptor","getVendor",,"Pfd2","Method","3736",,,,,,,,,,,,,,
3736,,,"2 ","Pfd2","Assertion",,,"Low","Returns the vendor of the component.",,,"Test3732Test",,,"Call ComponentDescriptor.getVendor() and verify correct vendor for SBB ComponentDesrciptor.","Cath","Complete",,,
3737,"javax.slee.management.ComponentDescriptor","getVersion",,"Pfd2","Method","3738",,,,,,,,,,,,,,
3738,,,"2 ","Pfd2","Assertion",,,"Low","Returns the version of the component.",,,"Test3732Test",,,"Call ComponentDescriptor.getVersion() and verify correct version for SBB ComponentDesrciptor.","Cath","Complete",,,
3739,"javax.slee.management.DeployableUnitDescriptor","getURL",,"Pfd2","Method","3740",,,,,,,,,,,,,,
3740,,,"2 ","Pfd2","Assertion",,,"Low","Returns the URL that the deployable unit was installed from.",,,"Test3740Test",,,"Call DeployableUnitDescriptor.getURL() and verify that result is equal to the URL that was installed.","Cath","Complete",,,
3741,"javax.slee.management.DeployableUnitDescriptor","getDeploymentDate",,"Pfd2","Method","3742",,,,,,,,,,,,,,
3742,,,"2 ","Pfd2","Assertion",,,"Low","Returns the date that the deployable unit was installed.",,,"Test3742Test",,,"Get current Date, install DU, call method, get current Date, verify that method's return value is between the two retrieved dates.","Cath","Complete",,,
3743,"javax.slee.management.DeployableUnitDescriptor","getComponents",,"Pfd2","Method","3725",,,,,,,,,,,,,,
3744,,,"2 ","Pfd2","Assertion",,,"Low","Returns the component identifiers of the components installed with this deployable unit.",,,,,,,,,,,
3745,"javax.slee.management.DeployableUnitID","equals",,"Pfd2","Method","3746",,,,,,,,,,,,,,
3746,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is a deployable unit identifier with the same identity as this, false otherwise.",,,"Test3746Test",,,"Install two Dus, verify that they are not equal to each other, but that they are each equal to themselves.","Cath","Complete",,,
3747,"javax.slee.management.DeployableUnitID","hashCode",,"Pfd2","Method","3748",,,,,,,,,,,,,,
3748,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code value.",,,"Test3746Test",,,"Verify that no exception is thrown when calling this method.","Cath","Complete",,,
3749,"javax.slee.management.DeployableUnitID","toString",,"Pfd2","Method","3750",,,,,,,,,,,,,,
3750,,,"4","Pfd2","Assertion",,,"Low","Returns a string representation for this identifier.",,,"Test3746Test",,,"Verify that no exception is thrown when calling this method, additionally verify that returned string is non-null.","Cath","Complete",,,
3751,"javax.slee.management.DeploymentMBean",,"1","Pfd2","Context",,,,"The DeploymentMBean interface defines deployment related management operations.  Using the DeploymentMBean a management client may install and remove deployment unit jar files in to and out from the SLEE, obtain lists and/or descriptors of the various types of components installed in the SLEE, and generate dependency graphs of the installed components.",,,,,,,,,,,
3752,,,"2 ","Pfd2","Assertion",,,"Low","The Object Name of a DeploymentMBean object can be obtained by a management client via teh SleeManagementMBean.getDeploymentMBean() method.",,,,,,,,,,,
3753,"javax.slee.management.DeploymentMBean","install",,"Pfd2","Method","1571",,,,,,,,,,,,,,
3754,,,"1","Pfd2","Assertion",,,"Low","The jar file must contain a deployable unit deployment descriptor at the path location META-INF/deployable-unit.xml.",,,,,,,,,,,
3755,,,"3","Pfd2","Assertion",,,"Low","Returns a DeployableUnitID that identifies the installed jar file.",,,,,,,,,,,
3756,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if url is null.",,,,,,,,,,,
3757,,,"4.2","Pfd2","Assertion",,,"Low","java.net.MalformedURLException - if url is not a properly formatted URL.",,,,,,,,,,,
3758,,,"4.3","Pfd2","Assertion",,,"Low","AlreadyDeployedException - if the URL has already been installed, or the jar file contains a component with the same type and identity as a component already installed.",,,,,,,,,,,
3759,,,"4.4","Pfd2","Assertion",,,"Low","DeploymentException - if the jar file could not be successfully installed due to a problem directly related to it or any of its contained components.",,,,,,,,,,,
3760,,,"4.5","Pfd2","Impossible",,,,"ManagementException - if the jar file could not be successfully installed due to a system-level failure.",,,,,,,,,,,
3761,"javax.slee.management.DeploymentMBean","uninstall",,"Pfd2","Method","1895,1896,1583,1584,1586,1587",,,,,,,,,,,"Complete",,,
3762,,,"1","Pfd2","Context",,,,"Uninstall a deployable unit jar file out of the SLEE.",,,,,,,,,,,
3763,,,"1","Pfd2","Repeat",1895,,,"All the components contained within the deployable unit are also uninstalled.",,,,,,,,,,,
3764,,,"1","Pfd2","Repeat","1896,1583,1584,1586,1587",,,"A deployable unit cannot be uninstalled if any other deployable unit installed in the SLEE contains a component that is dependent on one of the components in the deployable unit being installed.",,,,,,,,,,,
3765,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,,,,,,,,,
3766,,,"3.2","Pfd2","Assertion",,,"Low","UnrecognizedDeployableUnitException - if id is not a recognizable DeployableUnitID for the SLEE or it does not correspond with a deployable unit installed in the SLEE.",,,,,,,,,,,
3767,,,"3.3","Pfd2","Assertion",,,"Low","DependencyException - if another deployable unit installed in the SLEE contains a component that is dependent on the deployable unit being uninstalled.",,,,,,,,,,,
3768,,,"3.4","Pfd2","Assertion",,,"Low","InvalidStateException - if a component in the deployable unit could not be uninstalled due to being in an invalid state.",,,,,,,,,,,
3769,,,"3.5","Pfd2","Impossible",,,,"ManagementException - if the jar file could not be successfully uninstalled due to a system-level failure.",,,,,,,,,,,
3770,"javax.slee.management.DeploymentMBean","getDeployableUnit",,"Pfd2","Method","1893",,,,,,,,,,,,,,
3771,,,"1","Pfd2","Assertion",,,"Low","Returns a DeployableUnitID that identifies the installed jar file.",,,,,,,,,,,
3772,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if url is null.",,,,,,,,,,,
3773,,,"4.2","Pfd2","Assertion",,,"Low","UnrecognizedDeployableUnitException - if url does not correspond with the URL of a deployable unit installed in the SLEE.",,,,,,,,,,,
3774,,,"4.3","Pfd2","Impossible",,,,"ManagementException - if the identifier could not be obtained due to a system-level failure.",,,,,,,,,,,
3775,"javax.slee.management.DeploymentMBean","getDeployableUnits",,"Pfd2","Method","3776",,,,,,,,,,,,,,
3776,,,"1","Pfd2","Assertion",,,"Low","Returns an array of deployable unit identifiers.",,,"Test3776Test",,,"Count the number of DUs returned by getDeployableUnits() X. Install a DU containing one SBB, one Event and one Profile Specification, and one Service. Check that getDeployableUnits() returns X+1.  Uninstall the DU, then check that getDeployableUnits() returns X.","Cath","Complete",,,
3777,,,"3.1","Pfd2","Impossible",,,,"ManagementException - if the identifiers could not be obtained due to a system-level failure.",,,,,,,,,,,
3778,"javax.slee.management.DeploymentMBean","getSbbs",,"Pfd2","Method","3780",,,,,,,,,,,,,,
3779,,,"1","Pfd2","Context",,,,"Get the set of SBBs installed in the SLEE.",,,,,,,,,,,
3780,,,"2 ","Pfd2","Assertion",,,"Low","Returns an array of SBB identifiers.",,,"Test3776Test",,,"See 3776","Cath","Complete",,,
3781,,,"3.1","Pfd2","Impossible",,,,"ManagementException - if the identifiers could not be obtained due to a system-level failure.",,,,,,,,,,,
3782,"javax.slee.management.DeploymentMBean","getEventTypes",,"Pfd2","Method","3784",,,,,,,,,,,,,,
3783,,,"1","Pfd2","Context",,,,"Get the set of event types installed in the SLEE.",,,,,,,,,,,
3784,,,"2 ","Pfd2","Assertion",,,"Low","Returns an array of event type identifiers.",,,"Test3776Test",,,"See 3776","Cath","Complete",,,
3785,,,"3.1","Pfd2","Impossible",,,,"ManagementException - if the identifiers could not be obtained due to a system-level failure.",,,,,,,,,,,
3786,"javax.slee.management.DeploymentMBean","getProfileSpecifications",,"Pfd2","Method","3788",,,,,,,,,,,,,,
3787,,,"1","Pfd2","Context",,,,"Get the set of profile specifications installed in the SLEE.",,,,,,,,,,,
3788,,,"2 ","Pfd2","Assertion",,,"Low","Returns an array of profile specification identifiers.",,,3776,,,"See 3776","Cath","Complete",,,
3789,,,"3.1","Pfd2","Impossible",,,,"ManagementException - if the identifiers could not be obtained due to a system-level failure.",,,,,,,,,,,
3790,"javax.slee.management.DeploymentMBean","getServices",,"Pfd2","Method","3792",,,,,,,,,,,,,,
3791,,,"1","Pfd2","Context",,,,"Get the set of services installed in the SLEE.",,,,,,,,,,,
3792,,,"2 ","Pfd2","Assertion",,,"Low","Returns an array of Service identifiers.",,,3776,,,"See 3776","Cath","Complete",,,
3793,,,"3.1","Pfd2","Assertion",,,"Low","ManagementException - if the identifiers could not be obtained due to a system-level failure.",,,,,,,,,,,
3794,"javax.slee.management.DeploymentMBean","getResourceAdaptorTypes",,"Pfd2","Method","3796",,,,,,,,,,,,,,
3795,,,"1","Pfd2","Context",,,,"Get the set of resource adaptor types installed in the SLEE.",,,,,,,,,,,
3796,,,"2 ","Pfd2","Assertion",,,"Low","Returns an array of resource adaptor type identifiers.",,,"Test3776Test",,,"See 3776","Cath","Complete",,,
3797,,,"3.1","Pfd2","Assertion",,,"Low","ManagementException - if the identifiers could not be obtained due to a system-level failure.",,,,,,,,,,,
3798,"javax.slee.management.DeploymentMBean","getResourceAdaptors",,"Pfd2","Method","4475",,,,"Add javadoc comment",,,,,,,,,,
4475,,,"2 ","Pfd2","Assertion",,,"Low","Returns: an array of resource adaptor identifiers.",,,"Test3776Test",,,"See 3776","Cath","Complete",,,
3799,"javax.slee.management.DeploymentMBean","getReferringComponents",,"Pfd2","Method","3802",,,,,,,,,,,,,,
3800,,,"1","Pfd2","Context",,,,"Get the set of components that use or make reference to a specified component.",,,,,,,,,,,
3801,,,"2 ","Pfd2","Assertion",,,"Low","Returns an array of component identifiers for the components that use or make reference to the component specified by id.",,,,,,,,,,,
3802,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,3776,,,"Call duProxy.getReferringComponents(null) and verify that NullPointerException is thrown.","Cath","Complete",,,
3803,,,"3.2","Pfd2","Assertion",,,"Low","UnrecognizedComponentException - if id is not a recognizable ComponentID object for the SLEE or it does not correspond with a component installed in the SLEE.",,,,,,,,,,,
3804,,,"3.3","Pfd2","Assertion",,,"Low","ManagementException - if the identifiers could not be obtained due to a system-level failure.",,,,,,,,,,,
3805,"javax.slee.management.DeploymentMBean","getDescriptor",,"Pfd2","Method","3808",,,,,,,,,,,,,,
3806,,,"1","Pfd2","Context",,,,"Get the deployable unit descriptor for a deployable unit.",,,,,,,,,,,
3807,,,"3","Pfd2","Assertion",,,"Low","Returns the deployable unit descriptor for the deployable unit.",,,,,,,,,,,
3808,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,"Test3776Test",,,"Call duProxy.getDescriptor(null) and verify that NPE is thrown.","Cath","Complete",,,
3809,,,"4.2","Pfd2","Assertion",,,"Low","UnrecognizedDeployableUnitException - if id is not a recognizable DeployableUnitID for the SLEE or it does not correspond with a deployable unit installed in the SLEE.",,,,,,,,,,,
3810,,,"4.3","Pfd2","Assertion",,,"Low","ManagementException - if the descriptor could not be obtained due to a system-level failure.",,,,,,,,,,,
3811,"javax.slee.management.DeploymentMBean","getDescriptors",,"Pfd2","Method","3814",,,,,,,,,,,,,,
3812,,,,"Pfd2","Context",,,,"Get an array of deployable unit descriptors corresponding to an array of deployable units.",,,,,,,,,,,
3813,,,,"Pfd2","Assertion",,,"Low","Returns an array of deployable unit descriptors.  This array will be the same length as the supplied array, and if descriptors == getDescriptors(ids) then descriptors[i] == getDescriptor(ids[i]).  Any unrecognized deployable unit identifier present in ids results in a null value at the corresponding array index in this array.",,,,,,,,,,,
3814,,,,"Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if ids is null.",,,"Test3776Test",,,"Call duProxy.getDescriptors(null) and verify that NPE is thrown.","Cath","Complete",,,
3815,,,,"Pfd2","Impossible",,,,"ManagementException - if the descriptors could not be obtained due to a system-level failure.",,,,,,,,,,,
3816,"javax.slee.management.DeploymentMBean","getDescriptor(ComponentID)",,"Pfd2","Method","3819",,,,,,,,,,,,,,
3817,,,"1","Pfd2","Context",,,,"Get the component descriptor for a component identifier.",,,,,,,,,,,
3818,,,"3","Pfd2","Assertion",,,"Low","Returns the component descriptor for the component.",,,,,,,,,,,
3819,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,"Test3776Test",,,"Call duProxy.getDescriptor(null) and verify that NPE is thrown.","Cath","Complete",,,
3820,,,"4.2","Pfd2","Assertion",,,"Low","UnrecognizedComponentException - if id is not a recognizable ComponentID object for the SLEE or it does not correspond with a component installed in the SLEE.",,,,,,,,,,,
3821,,,"4.3","Pfd2","Assertion",,,"Low","ManagementException - if the descriptor could not be obtained due to a system-level failure.",,,,,,,,,,,
3822,"javax.slee.management.DeploymentMBean","getDescriptors(ComponentID [])",,"Pfd2","Method","3825",,,,,,,,,,,,,,
3823,,,"1","Pfd2","Context",,,,"Get an array of component descriptors corresponding to an array of component identifiers.",,,,,,,,,,,
3824,,,"2 ","Pfd2","Assertion",,,"Low","Returns an array of component descriptors.  This array will be the same length as the supplied array, and if descriptors == getDescriptors(ids) then descriptors[i] == getDescriptor(ids[i]).  Any unrecognized component identifier present in ids results in a null value at the corresponding array index in this array.",,,,,,,,,,,
3825,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if ids is null.",,,"Test3776Test",,,"Call duProxy.getDescriptors(null) and verify that NPE is thrown.","Cath","Complete",,,
3826,,,"3.2","Pfd2","Assertion",,,"Low","ManagementException - if the descriptors could not be obtained due to a system-level failure.",,,,,,,,,,,
3827,"javax.slee.management.DeploymentMBean","isInstalled(DeployableUnitID)",,"Pfd2","Method","3829",,,,,,,,,,,,,,
3828,,,"3","Pfd2","Assertion",,,"Low","Returns true if id is a recognizable deployable unit identifier for the SLEE and it corresponds to a deployable unit that is currently installed in the SLEE, false otherwise.",,,,,,,,,,,
3829,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,3776,,,"Call DeploymentMBean.isInstalled(null) and verify that NPE is thrown.","Cath","Complete",,,
3830,,,"4.2","Pfd2","Assertion",,,"Low","ManagementException - if the presence of the deployable unit could not be determined due to a system-level failure.",,,,,,,,,,,
3831,"javax.slee.management.DeploymentMBean","isInstalled(ComponentID)",,"Pfd2","Method","3833",,,,,,,,,,,,,,
3832,,,"3","Pfd2","Assertion",,,"Low","Returns true if id is a recognizable component identifier for the SLEE and it corresponds to a component that is currently installed in the SLEE, false otherwise.",,,,,,,,,,,
3833,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,"Test3776Test",,,"Call DeploymentMBean.isInstalled(null) and verify that NPE is thrown.","Cath","Complete",,,
3834,,,"4.2","Pfd2","Assertion",,,"Low","ManagementException - if the presence of the component could not be determined due to a system-level failure.",,,,,,,,,,,
3835,"javax.slee.management.EventTypeDescriptor","getEventClassName",,"Pfd2","Method",,,,,,,"Test3835Test",,,,"Cath","Complete",,,
3836,,,"2 ","Pfd2","Assertion",,,"Low","Returns the name of the interface or class used in the event type.",,,,,,,,,,,
3837,"javax.slee.management.NamesMBean",,"1","Pfd2","Removed",,,,"The NamesMBean interface defines an iterator-style management interface used to access the names of profiles and profile tables in the SLEE.",,,,,,,,,,,
3838,,,"2 ","Pfd2","Removed",,,,"The Object Name of a NameMBean object can be obtained by a management client via a ProfileProvisioningMBean object.",,,,,,,,,,,
3839,"javax.slee.management.NamesMBean","nextName",,"Pfd2","Removed",,,,,,,,,,,,"Removed",,,
3840,,,"2 ","Pfd2","Removed",,,,"Returns the next name in this iteration,  or null if there are no more names.",,,,,,,,,,,
3841,,,"3.1","Pfd2","Removed",,,,"java.util.ConcurrentModificationException - if the underlying collection or database store has changed since this MBean object was obtained and concurrent modifications are not supported by the implementation.",,,,,,,,,,,
3842,,,"3.2","Pfd2","Removed",,,,"ManagementException - if the next name could not be obtained due to a system-level failure.",,,,,,,,,,,
3843,"javax.slee.management.NamesMBean","reset",,"Pfd2","Removed",,,,,,,,,,,,"Removed",,,
3844,,,"1","Pfd2","Removed",,,,"Reset the iteration pointer to the first name in the list.",,,,,,,,,,,
3845,,,"2.1","Pfd2","Removed",,,,"java.util.ConcurrentModificationException - if the underlying collection or database store has changed since this MBean object was obtained and concurrent modifications are not supported by the implementation.",,,,,,,,,,,
3846,,,"2.2","Pfd2","Removed",,,,"ManagementException - if the iterator could not be reset due to a system-level failure.",,,,,,,,,,,
3847,"javax.slee.management.NamesMBean","contains",,"Pfd2","Removed",,,,,,,,,,,,"Removed",,,
3848,,,"3","Pfd2","Removed",,,,"Returns true if the MBean's collection contains the specified name, false otherwise.",,,,,,,,,,,
3849,,,"4.1","Pfd2","Removed",,,,"java.lang.NullPointerException - if name is null.",,,,,,,,,,,
3850,,,"4.2","Pfd2","Removed",,,,"java.util.ConcurrentModificationException - if the underlying collection or database store has changed since this MBean object was obtained and concurrent modifications are not supported by the implementation.",,,,,,,,,,,
3851,,,"4.3","Pfd2","Removed",,,,"ManagementException - if the collection could not be searched due to a system-level failure.",,,,,,,,,,,
3852,"javax.slee.management.NamesMBean","size",,"Pfd2","Removed",,,,,,,,,,,,,,,
3853,,,"2 ","Pfd2","Removed",,,,"Returns the size of the collection accessed via this MBean object.",,,,,,,,,,,
3854,,,"3.1","Pfd2","Removed",,,,"java.util.ConcurrentModificationException - if the underlying collection or database store has changed since this MBean object was obtained and concurrent modifications are not supported by the implementation.",,,,,,,,,,,
3855,,,"3.2","Pfd2","Removed",,,,"ManagementException - if the size of the collection could not be obtained due to a system-level failure.",,,,,,,,,,,
3856,"javax.slee.management.NamesMBean","close",,"Pfd2","Removed",,,,,,,,,,,,,,,
3857,,,"1","Pfd2","Removed",,,,"Notify the SLEE that the MBean object is no longer required by the management client.  ",,"Can only test that the method doesn't throw an Exception when closing a valid profile.",,,,,,,,,
4476,,,"1","Pfd2","Removed",,,,"As the SLEE may subsequently deregister the MBean from the MBean server, a client that invokes this method should assume that the Object Name they had for the MBean is no longer  valid once this method returns.",,,,,,,,,,,
3858,,,"2.1","Pfd2","Removed",,,,"ManagementException - if the MBean object could not be closed due to a system-level failure.",,,,,,,,,,,
3859,"javax.slee.management.ProfileProvisioningMBean",,,"Pfd2","Context",,,,"The ProfileProvisiningMBean interface defines management operations for creating, removing, and interacting with profiles and profile tables",,,,,,,,,,,
3860,,,"2 ","Pfd2","Assertion",,,"Low","The Object Name of a ProfileProvisioningMBean object can be obtained by a management client via the SleeManagementMBean.getProfileProvisioningMBean() method.",,,,,,,,,,,
3861,"javax.slee.management.ProfileProvisioningMBean","createProfileTable",,"Pfd2","Method","1638,3866,3864,3865,3867",,,,,,,,,,,"Complete",,,
3862,,,"1","Pfd2","Repeat",1638,,,"Create a new profile table from a profile specification.",,,,,,,,,,,
3863,,,"2.2","Pfd2","Repeat",3866,,,"newProfileTableName - the name of the profile table to create.  The name cannot inlcude the / character.",,,,,,,,,,,
3864,,,"3.1","Pfd2","Assertion",,,"High","java.lang.NullPointerException - if newProfileTableName is null.",,,"Test3864Test",,,,"Cath","Complete",,,
3865,,,"3.2","Pfd2","Assertion",,,"High","UnrecognizedProfileSpecificationException - if id is not a recognizable ProfileSpecificationID for the SLEE or it does not correspond with a profile specification installed in the SLEE.",,,"Test3865Test",,,,"Cath","Complete",,,
3866,,,"3.3","Pfd2","Assertion",,,"High","InvalidArgumentException - if newProfileTableName is zero-length or contains a '/' character.",,,"Test3866Test",,,,"Cath","Complete",,,
3867,,,"3.4","Pfd2","Assertion",,,"High","ProfileTableAlreadyExistsException - if a profile table with the same name already exists.",,,"Test3864Test",,,,"Cath","Complete",,,
3868,,,"3.5","Pfd2","Impossible",,,,"ManagementException - if the profile table could not be created due to a system-level failure.",,,,,,,,,,,
3869,"javax.slee.management.ProfileProvisioningMBean","removeProfileTable",,"Pfd2","Method","3870,3871,3872",,,,,,,,,,,"Complete",,,
3870,,,,"Pfd2","Assertion",,,"High","Remove a profile table",,,"Test3870Test",,,,"Cath","Complete",,,
3871,,,"3.1","Pfd2","Assertion",,,"High","java.lang.NullPointerException - if profileTableName is null.",,,"Test3870Test",,,,"Cath","Complete",,,
3872,,,"3.2","Pfd2","Assertion",,,"High","UnrecognizedProfileTableNameException - if a profile table with the specified name does not exist.",,,"Test3870Test",,,,"Cath","Complete",,,
3873,,,"3.3","Pfd2","Impossible",,,,"ManagementException - if the profile table could not be removed due to a system-level failure.",,,,,,,,,,,
3874,"javax.slee.management.ProfileProvisioningMBean","getProfileSpecification",,"Pfd2","Method","1638",,,,,,,,,,,,,,
3875,,,"3","Pfd2","Assertion",,,"Low","Returns the component identifier of the profile specification that the profile table was created with.",,,,,,,,,,,
3876,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if profileTableName is null.",,,,,,,,,,,
3877,,,"4.2","Pfd2","Assertion",,,"Low","UnrecognizedProfileTableNameException - if a profile table with the specified name does not exist.",,,,,,,,,,,
3878,,,"4.3","Pfd2","Impossible",,,,"ManagementException - if the component identifier could not be obtained due to a system-level failure.",,,,,,,,,,,
3879,"javax.slee.management.ProfileProvisioningMBean","renameProfileTable",,"Pfd2","Method","3883",,,,,,,,,,,"Complete",,,
3880,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if either argument is null.",,,,,,,,,,,
3881,,,"3.2","Pfd2","Assertion",,,"Low","UnrecognizedProfileTableNameException - if a profile table with the name oldProfileTable does not exist.",,,,,,,,,,,
3882,,,"3.3","Pfd2","Assertion",,,"Low","InvalidArgumentException - if newProfileTableName is zero-length or contains a '/' character.",,,,,,,,,,,
3883,,,"3.4","Pfd2","Assertion",,,"High","ProfileTableAlreadyExistsException - if a profile table with the same name as newProfileTableName  already exists.",,,"Test3883Test",,,"Two ProfileTables, rename one to that of the first.","Cath","Complete",,,
3884,,,"3.5","Pfd2","Impossible",,,,"ManagementException - if the profile table could not be renamed due to a system-level failure.",,,,,,,,,,,
3885,"javax.slee.management.ProfileProvisioningMBean","getDefaultProfile",,"Pfd2","Method","3887,3888,3889",,,,,,,,,,,"Complete",,,
3886,,,"1","Pfd2","Context",,,,"Get the JMX Object name of the default profile for a profile table.",,,,,,,,,,,
3887,,,"1","Pfd2","Assertion",,,"High","Every profile table has one default profile.",,,"Test3887Test",,,,"Cath","Complete",,,
3888,,,"1","Pfd2","Assertion",,,"High","New profiles created in a profile table obtain their initial values from the default profile.",,,"Test3888Test",,,"Use profileInitialize() within a profile to get the default profile's values set.  This is only called for the default profile, subsequent profiles get their values from the default profile.  Create a new profile, and somehow check its values against that of the default profile.","Cath","Complete",,,
3889,,,"3","Pfd2","Assertion",,,"High","Returns the Object Name of the default profile for the specified profile table.",,,"Test3887Test",,,,"Cath","Complete",,,
3890,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if profileTableName is null.",,,,,,,,,,,
3891,,,"4.2","Pfd2","Assertion",,,"Low","UnrecognizedProfileTableNameException - if a profile table with the specified name  does not exist.",,,,,,,,,,,
3892,,,"4.3","Pfd2","Impossible",,,,"ManagementException - if the Object Name could not be obtained due to a system-level failure.",,,,,,,,,,,
3893,"javax.slee.management.ProfileProvisioningMBean","createProfile",,"Pfd2","Method","1644,3900",,,,,,,,,,,"Complete",,,
3894,,,"1","Pfd2","Covered","1644",,,"Create a new profile in a profile table.",,,,,,,,,,,
3895,,,"1","Pfd2","Covered",1644,,,"The profile is added to the profile table using the unique profile name specified.",,,,,,,,,,,
4550,,,,"Pfd3","Covered",1111,,,"The ObjectName returned by this method provides the management client with the name of a ProfileMBean for the created profile.  This ProfileMBean is in the read-write state allowing the management client a chance to configure the initial values for the profile attributes before it is added to the profile table.",,,,,,,,,,,
4551,,,,"Pfd3","Assertion",,,"High","The new profile is not visible in the profile table until the ProfileMBean state is committed.",,"Create a Profile, fire event at SBB.  In SBB try to access profile, verify it can't.  Send result to TCK.  After TCK gets result commit the profile, fire another event at SBB.  Get whole test result.","Test4551Test",,,,"Cath","Complete",,,
3896,,,"3","Pfd2","Assertion",,,"Low","Returns the Object Name of the new profile.",,,,,,,,,,,
3897,,,"4.1","Pfd2","Assertion",,,"High","java.lang.NullPointerException - if either argument is null.",,,"ProfileNamesTest",,,"Call createProfile() with null arguments, and check that the NullPointerException is thrown.","Matt","Complete",,,
3898,,,"4.2","Pfd2","Assertion",,,"Low","UnrecognizedProfileTableNameException - if a profile table with the specified name does not exist.",,,,,,,,,,,
3899,,,"4.3","Pfd2","Assertion",,,"High","InvalidArgumentException - if newProfileName is zero length.",,,"ProfileNamesTest",,,"Call createProfile() with a zero length profile name, and check that the InvalidArgumentException is thrown.","Matt","Complete",,,
3900,,,"4.4","Pfd2","Assertion",,,"High","ProfileAlreadyExistsException - if a profile with the same name already exists in the profile table.",,,"Test3900Test",,,,"Cath","Complete",,,
3901,,,"4.5","Pfd2","Impossible",,,,"ManagementException - if the profile could not be created due to a system-level failure.",,,,,,,,,,,
3902,"javax.slee.management.ProfileProvisioningMBean","removeProfile",,"Pfd2","Method","1645",,,,,,,,,,,,,,
3903,,,"1","Pfd2","Covered","1645",,,"Remove a profile from the profile table.",,,,,,,,,,,
3904,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if either argument is null.",,,,,,,,,,,
3905,,,"3.2","Pfd2","Assertion",,,"Low","UnrecognizedProfileTableNameException - if a profile table with the specified name does not exist.",,,,,,,,,,,
3906,,,"3.3","Pfd2","Assertion",,,"Low","UnrecognizedProfileNameException - if a profile with the specified name does not exist in the profile table.",,,,,,,,,,,
3907,,,"3.4","Pfd2","Impossible",,,,"ManagementException - if the profile could not be removed due to a system-level failure.",,,,,,,,,,,
3908,"javax.slee.management.ProfileProvisioningMBean","getProfile",,"Pfd2","Method","1117",,,,,,,,,,,,,,
3909,,,"1","Pfd2","Context",,,,"Get the JMX Object Name of a profile.",,,,,,,,,,,
3910,,,"3","Pfd2","Assertion",,,"Low","Returns the Object Name of the profile.",,,,,,,,,,,
3911,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if either argument is null.",,,,,,,,,,,
3912,,,"4.2","Pfd2","Assertion",,,"Low","UnrecognizedProfileTableNameException - if a profile table with the specified name does not exist.",,,,,,,,,,,
3913,,,"4.3","Pfd2","Assertion",,,"Low","UnrecognizedProfileNameException - if a profile with the specified name does not exist in the profile table.",,,,,,,,,,,
3914,,,"4.4","Pfd2","Impossible",,,,"ManagementException - if the profile could not be obtained due to a system-level failure.",,,,,,,,,,,
3915,"javax.slee.management.ProfileProvisioningMBean","getProfileTables",,"Pfd2","Method","1647",,,,,,,,,,,,,,
3916,,,"1","Pfd2","Removed",,,,"Get the JMX Object Name of a NamesMBean object that can be used to iterate over the names of all the profile tables that have been created.",,,,,,,,,,,
3917,,,"2 ","Pfd2","Removed",,,,"Returns the Object Name of a NamesMBean object that allows iteration over all the profile table names.",,,,,,,,,,,
4552,,,,"Pfd3","Covered","1647",,,"Get a Collection of java.lang.String objects that identify the names of all the profile tables that have been created in the SLEE.",,,,,,,,,,,
3918,,,"3.1","Pfd2","Impossible",,,,"ManagementException - if the MBean object could not be obtained due to a system-level failure.",,,,,,,,,,,
3919,"javax.slee.management.ProfileProvisioningMBean","getProfiles",,"Pfd2","Method","4460",,,,,,,,,,,,,,
4553,,,,,"Covered","4460",,,"Get a Collection of ProfileID objects that identify all the profiles contained in a specified profile table.",,,,,,,,,,,
4460,,,"2 ","Pfd2","Covered","4448",,,"Note: A profile identifier for the profile table's default profile will not be included in the collection iterated over by the NamesMBean returned by this method as the default profile has no such identifier.",,,,,,,,,,,
3920,,,"4","Pfd2","Removed",,,,"Returns the Object Name of a NamesMBean object that allows iteration over all the names of the profiles contained in the specified profile table.",,,,,,,,,,,
3921,,,"5.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if profileTableName is null.",,,,,,,,,,,
3922,,,"5.2","Pfd2","Assertion",,,"Low","UnrecognizedProfileTableNameException - if a profile table with the name oldProfileTable does not exist.",,,,,,,,,,,
3923,,,"5.3","Pfd2","Impossible",,,,"ManagementException - if the MBean object could not be obtained due to a system-level failure.",,,,,,,,,,,
3924,"javax.slee.management.ProfileProvisioningMBean","getProfilesByIndexedAttribute",,"Pfd2","Method","4461",,,,,,,,,,,,,,
4461,,,"2 ","Pfd2","Covered","1653",,,"Note: The profile table's default profile is not considered when determining matching profiles as it has no profile identifier that can be included in the collection iterated over by the NamesMBean returned by this method.",,,,,,,,,,,
3925,,,"4","Pfd2","Removed",,,,"Returns the Object Name of a NamesMBean object that allows iteration over the profiles contained in the specified profile table where the specified attribute of the profile equals the specified value.",,,,,,,,,,,
4554,,,,,"Covered","4461",,,"Returns a Collection of ProfileID objects identifying the profiles contained in the specified profile table, where the specified attribute of each profile equals the specified value.",,,,,,,,,,,
3926,,,"5.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if any argument is null.",,,,,,,,,,,
3927,,,"5.2","Pfd2","Assertion",,,"Low","UnrecognizedProfileTableNameException - if a profile table with the specified name does not exist.",,,,,,,,,,,
3928,,,"5.3","Pfd2","Assertion",,,"Low","UnrecognizedAttributeException - if an attribute with the specified name is not defined in the profile specification for the specified profile table.",,,,,,,,,,,
3929,,,"5.4","Pfd2","Assertion",,,"Low","AttributeNotIndexedException - if the specified attribute is not indexed in the profile specification for the specified profile table.",,,,,,,,,,,
3930,,,"5.5","Pfd2","Removed",,,,"InvalidArgumentException - if the type of the supplied attribute value does not match the type of the specified indexed attribute.",,,,,,,,,,,
4612,,,,,"Assertion",,,"Low","AttributeTypeMismatchException - if the type of the supplied attribute value does not match the type of the specified indexed attribute.",,,,,,,,,,,
3931,,,"5.6","Pfd2","Impossible",,,,"ManagementException - if the MBean object could not be obtained due to a system-level failure.",,,,,,,,,,,
3932,"javax.slee.management.SbbDescriptor","getChildSbbs",,"Pfd3","Removed",,,,,,,,,,,,,,,
3933,,,"2 ","Pfd3","Removed",,,,"Returns the component identifiers of the SBB's child SBBs.",,,"Test3932Test",,,"Create Service with Root SBB and child SBB.  Verify that only one child SBB is returned by SbbDescriptor.getChildSbbs().","Cath","Removed",,,
4758,"javax.slee.management.SbbDescriptor","getSbbs",,"Pfd3","Method","4759",,,,,,,,,,,,,,
4759,,,,,"Assertion",,,"Low","Get the component identifiers of the SBBs used by this SBB.  These SBBs may be child SBBs or stored in CMP fields of this SBB.",,,"Test3932Test",,,"Create Service with Root SBB and child SBB.  Verify that only one child SBB is returned by SbbDescriptor.getChildSbbs().","Cath","Complete",,,
3934,"javax.slee.management.SbbDescriptor","getEventTypes",,"Pfd2","Method","3932",,,,,,,,,,,,,,
3935,,,"2 ","Pfd2","Assertion",,,"Low","Returns the component identifiers of the event types used by this SBB.",,,,,,,,,,,
3936,"javax.slee.management.SbbDescriptor","getProfileSpecifications",,"Pfd2","Method","3932",,,,,,,,,,,,,,
3937,,,"2 ","Pfd2","Assertion",,,"Low","Returns the component identifiers of the profile specifications used by this SBB.",,,,,,,,,,,
3938,"javax.slee.management.SbbDescriptor","getResourceAdaptorTypes",,"Pfd2","Method","3932",,,,,,,,,,,,,,
3939,,,"2 ","Pfd2","Assertion",,,"Low","Returns the component identifiers of the resource adaptor types used by this SBB.",,,,,,,,,,,
4760,"javax.slee.management.SbbDescriptor","getResourceAdaptorEntityLinks",,"Pfd3","Method","4761",,,,,,,,,,,,,,
4761,,,"2 ","Pfd3","Assertion",,,"Low","Get the names of the resource adaptor entity links used by this SBB.",,,,,,,,,,,
3940,"javax.slee.management.ServiceDescriptor","getRootSbb",,"Pfd2","Method","3941",,,,,,,,,,,,,,
3941,,,"2 ","Pfd2","Assertion",,,"Low","Returns the component identifier of the Service's root SBB.",,,,,,,,,,,
3942,"javax.slee.management.ServiceDescriptor","getAddressProfileTable",,"Pfd2","Method","3943",,,,,,,,,,,,,,
3943,,,"2 ","Pfd2","Assertion",,,"Low","Returns the name of the Address Profile Table used by the Service, or null if the Service does not use one.",,,"Test3940Test",,,"Make sure no exception is thrown and that result is null.","Cath","Complete",,,
3944,"javax.slee.management.ServiceDescriptor","getResourceInfoProfileTable",,"Pfd2","Method","3945",,,,,,,,,,,,,,
3945,,,"2 ","Pfd2","Assertion",,,"Low","Returns the name of the Resource Info Profile Table used by the Service, or null if the Service does not use one.",,,"Test3940Test",,,"Make sure no exception is thrown, and that the result is non-null.","Cath","Complete",,,
3946,"javax.slee.management.ServiceManagementMBean",,"1","Pfd3","Context",,,,"The ServiceManagementMBean interface defines Service-related management operations.  Using the ServiceManagementMBean a client may get or change the operational state of Services, and get the set of services that are in a particular state.",,,,,,,,,,,
3947,,,"2 ","Pfd2","Repeat","4039",,,"The Object Name of a ServiceManagementMBean object can be obtained by a management client via the SleeManagementMBean.getServiceManagementMBean() method.",,,,,,,,,,,
3948,"javax.slee.management.ServiceManagementMBean","getState",,"Pfd2","Method","3949",,,,,,,,,,,,,,
3949,,,"3","Pfd2","Assertion",,,"High","Returns the current state of the Service.",,,"Test3949Test",,,"Install Service, get its state, make sure it's INACTIVE.  Activate service, check its state, it should be ACTIVE.","Cath","Complete",,,
3950,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,,,,,,,,,
3951,,,"4.2","Pfd2","Assertion",,,"Low","UnrecognizedServiceException - if id is not arecognizable ServiceID for the SLEE or it does not correspond with a Service installed in the SLEE.",,,,,,,,,,,
3952,,,"4.3","Pfd2","Impossible",,,,"ManagementException - if the state of the Service could not be obtained due to a system-level failure.",,,,,,,,,,,
3953,"javax.slee.management.ServiceManagementMBean","getServices",,"Pfd2","Method","3954,3955",,,,,,,,,,,"Complete",,,
3954,,,"3","Pfd2","Assertion",,,"High","Returns an array of ServiceID objects identifying the services that are in the specified state.",,,"Test3954Test",,,"Install DU containing two Services, activate one, do not activate the other.  Call getServices(ACTIVE) and getServices(INACTIVE) and verify that the correct services are returned for each.","Cath","Complete",,,
3955,,,"4.1","Pfd2","Assertion",,,"High","java.lang.NullPointerException - if state is null.",,,"Test3954Test",,,"Call getServices(NULL)","Cath","Complete",,,
3956,,,"4.2","Pfd2","Impossible",,,,"ManagementException - if the set of services could not be obtained due to a system-level failure.",,,,,,,,,,,
4762,"javax.slee.management.ServiceManagementMBean","activate[]",,"Pfd3","Method","2470",,,"Activate a set of Services.",,,,,,,,,,,
4763,,,"1","Pfd3","Repeat","1616, 1617",,,"All Services in the set must currently be in the INACTIVE state, and transition to ACTIVE state during this method invocation.",,,,,,,,,,,
4764,,,"1.1","Pfd3","Repeat","1612",,,"throws NullPointerException if ids is null",,,,,,,,,,,
4765,,,"1.2","Pfd3","Repeat","2470",,,"throws InvalidArgumentException if ids is zero-length, or contains null or duplicate elements.",,,,,,,,,,,
4766,,,"1.3","Pfd3","Assertion",,,"Low","throws UnrecognizedServiceException if any member of ids is not a recognizable ServiceID for the SLEE or does not correspond with a Service installed in the SLEE.",,,,,,,,,,,
4767,,,"1.4","Pfd3","Repeat","1618",,,"throws InvalidStateException if the current state of any of the Services identified by ids is not INACTIVE",,,,,,,,,,,
4768,,,"1.5","Pfd3","Impossible",,,,"throws ManagementException if the state of any Service could not be cahnged due to a system-level failure.  In the case of such an error the state of all Services identified in ids remains unchanged.",,,,,,,,,,,
3957,"javax.slee.management.ServiceManagementMBean","activate",,"Pfd2","Method","1616,1617,1618",,,,,,,,,,,"Complete",,,
3958,,,"1","Pfd2","Context",,,,"Activate a Service.",,,,,,,,,,,
3959,,,"1","Pfd2","Repeat","1616, 1617",,,"The Service must currently be in the ServiceState.INACTIVE state, and transitions to ServiceState.ACTIVE state during this method invocation.",,,,,,,,,,,
3960,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,,,,,,,,,
3961,,,"3.2","Pfd2","Assertion",,,"Low","UnrecognizedServiceException - if id is not arecognizable ServiceID for the SLEE or it does not correspond with a Service installed in the SLEE.",,,,,,,,,,,
3962,,,"3.3","Pfd2","Repeat",1618,,,"InvalidStateException - if the current state of the Service is not ServiceState.INACTIVE.",,,,,,,,,,,
3963,,,"3.4","Pfd2","Impossible",,,,"ManagementException - if the state of the Service could not be changed due to a system-level failure.",,,,,,,,,,,
4769,"javax.slee.management.ServiceManagementMBean","deactivate[]",,"Pfd3","Method","2471",,,,,,,,,,,,,,
4770,,,,"Pfd3","Repeat","1620,1621",,,"Deactivate a set of Services.  All Services in the set must currently be in the ACTIVE state, and transition to the STOPPING state during this method invocation.",,,,,,,,,,,
4771,,,,"Pfd3","Repeat","1612",,,"throws NullPointerException if ids is null",,,,,,,,,,,
4772,,,,"Pfd3","Repeat","2471",,,"throws InvalidArgumentException if ids is zero-length, or contains null or duplicate elements.",,,,,,,,,,,
4773,,,,"Pfd3","Assertion",,,"Low","throws UnrecognizedServiceException if any member of ids is not a recognizable ServiceID for the SLEE or does not correspond with a Service installed in the SLEE.",,,,,,,,,,,
4774,,,,"Pfd3","Repeat","1618",,,"throws InvalidStateException if the current state of any of the Services identified by ids is not ACTIVE",,,,,,,,,,,
4775,,,,"Pfd3","Impossible",,,,"throws ManagementException if the state of any Service could not be cahnged due to a system-level failure.  In the case of such an error the state of all Services identified in ids remains unchanged.",,,,,,,,,,,
3964,"javax.slee.management.ServiceManagementMBean","deactivate",,"Pfd2","Method","1620,1621,1622",,,,,,,,,,,"Complete",,,
3965,,,"1","Pfd2","Repeat","1620, 1621",,,"Deactivate a Service.  The Service must currently be in the ServiceState.ACTIVE state, and transitions to ServiceState.STOPPING state during this method invocation.",,,,,,,,,,,
3966,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,,,,,,,,,
3967,,,"3.2","Pfd2","Assertion",,,"Low","UnrecognizedServiceException - if id is not arecognizable ServiceID for the SLEE or it does not correspond with a Service installed in the SLEE.",,,,,,,,,,,
3968,,,"3.3","Pfd2","Repeat",1622,,,"InvalidStateException - if the current state of the Service is not ServiceState.ACTIVE.",,,,,,,,,,,
3969,,,"3.4","Pfd2","Impossible",,,,"ManagementException - if the state of the Service  could not be changed due to a system-level failure.",,,,,,,,,,,
4776,"javax.slee.management.ServiceManagementMBean","deactivateAndActivate",,"Pfd3","Method","2271",,,,,,,,,,,,,,
4777,,,,"Pfd3","Repeat","2271,2272",,,"Deactivate one Service and activate another Service.  The first Service must currently be in the ACTIVE state, and transitions to the STOPPING state during this method invocation.  The second Service must be in the INACTIVE state and transitions to the ACTIVE state during this method invocation.",,,,,,,,,,,
4778,,,,"Pfd3","Repeat","1612",,,"throws NullPointerException if either argument is null.",,,,,,,,,,,
4779,,,,"Pfd3","Repeat","2478",,,"throws InvalidArgumentException if deactivateID and activateID identify the same service.",,,,,,,,,,,
4780,,,,"Pfd3","Assertion",,,"Low","throws UnrecognizedServiceException if either argument is not a recognizable ServiceID for the SLEE or does not correspond with a Service installed in the SLEE.",,,,,,,,,,,
4781,,,,"Pfd3","Repeat","2273",,,"throws InvalidStateException if the current state of the Service identified by deactivateID is not ACTIVE, or the current state of the Service identified by activateID is not INACTIVE.",,,,,,,,,,,
4782,,,,"Pfd3","Impossible",,,,"throws ManagementException if the state of either Service could not be changed due to a system-level failure.  In the case of such an error the state of both Services remains unchanged.",,,,,,,,,,,
4783,,"deactivateAndActivate[]",,"Pfd3","Method","2271",,,"Deactivate one set of Services and activate another set of Services.",,,,,,,,,,,
4784,,,,"Pfd3","Repeat","2271,2272",,,"All services in the first set must currently be in the ACTIVE state, and transition to STOPPING during this method invocation.  All Services in the second set must be in the INACTIVE state and transition to the ACTIVE state during this method invocation.",,,,,,,,,,,
4785,,,,"Pfd3","Repeat","1612",,,"throws NullPointerException if either argument is null.",,,,,,,,,,,
4786,,,,"Pfd3","Repeat","2473,2478",,,"throws InvalidArgumentException if either argument is zero-length, contais null or duplicate elements, or a Service identified by a component identifier in deactivateIDs is the same as a Service identified by a component identifier in activateIDs.",,,,,,,,,,,
4787,,,,"Pfd3","Assertion",,,"Low","throws UnrecognizedServiceException if any member of deactivateIDs or activateIDs is not a recognizable ServiceID for the SLEE or does not correspond with a Service installed in the SLEE.",,,,,,,,,,,
4788,,,,"Pfd3","Repeat","2273",,,"throws InvalidStateException if the current state of any of the Services identified by activateIDs is not ACTIVE or the current state of any of the services identified by activateIDs is not INACTIVE.",,,,,,,,,,,
4789,,,,"Pfd3","Impossible",,,,"throws ManagementException if the state of any Service could not be cahnged due to a system-level failure.  In the case of such an error the state of all Services identified in *ids remains unchanged.",,,,,,,,,,,
3970,"javax.slee.management.ServiceManagementMBean","getServiceUsageMBean",,"Pfd2","Method","1997",,,,"Add jdoc comment for return",,,,,,,,,,
3971,,,"1","Pfd2","Assertion",,,"High","Get the JMX Object Name of a ServiceUsageMBean object for a Service.",,,"Test3971Test",,,"Checks that a ServiceUsageMBean returned by getServiceUsageMBean()  extends the ServiceUsageMBean interface, and that it represents  the correct service.","Matt","Complete",,,
3972,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,,,,,,,,,
3973,,,"3.2","Pfd2","Assertion",,,"Low","UnrecognizedServiceException - if id is not arecognizable ServiceID for the SLEE or it does not correspond with a Service installed in the SLEE.",,,,,,,,,,,
3974,,,"3.3","Pfd2","Impossible",,,,"ManagementException - if the Object Name could not be obtained due to a system-level failure.",,,,,,,,,,,
3975,"javax.slee.management.ServiceUsageMBean",,"2 ","Pfd2","Assertion",,,"Low","Each SBB maintains separate sets of usage information for each Service that it participates in.",,,,,,,,,,,
3976,,,"2 ","Pfd2","Context",,,,"A ServiceUsageMBean object allows management of usage information accumulated for a single Service for all the SBBs participating in that Service.",,,,,,,,,,,
3977,,,"3","Pfd2","Covered","3971",,,"The Object Name of a ServiceUsageMBean object can be obtained by a management client via the ServiceManagementMBean.getServiceUsageMBean(javax.slee.ServiceID) method.",,,,,,,,,,,
3978,,,"4","Pfd2","Removed",,,,"Since ServiceUsageMBean objects can emit Usage notifications, it is required that the ServiceUsageMBean object implement the javax.management.NotificationBroadcaster interface.",,,,,,,,,,,
3979,"javax.slee.management.ServiceUsageMBean","getService",,"Pfd2","Method","3980",,,,,,,,,,,,,,
3980,,,"2 ","Pfd2","Assertion",,,"High","Returns the component identifier of the Service that this MBean is presenting usage information for.",,,"Test3980Test",,,"Call method and verify that returned ServiceID is correct.","Cath","Complete",,,
3981,,,"3.1","Pfd2","Impossible",,,,"ManagementException - if the Service component identifier could not be obtained due to a system-level failure.",,,,,,,,,,,
4555,"javax.slee.management.ServiceUsageMBean","createUsageParameterSet",,"Pfd3","Method","2245",,,,,,,,,,,,,,
4613,,,,"Pfd3","Covered","2245",,,"Create a new usage paramater set that the specified SBB is permitted to use in the one-argument form of the get-usage-parameters method, when the service component identifier argument of the get-usage-parameters method identifies the service that this MBean provides usage management access for.",,,,,,,,,,,
4556,,,,"Pfd3","Covered","2243,4559",,,"id - the component identifier of the SBB.  The SBB must be an SBB that is used in the Service whose usage information is being managed by this MBean.",,,,,,,,,,,
4557,,,,"Pfd3","Covered","2294,4558",,,"name - the usage parameter set name.  Names must be non-null and greater than 0 in length.",,,,,,,,,,,
4558,,,,"Pfd3","Assertion",,,"High","throws NullPointerException if either argument is null.",,,"Test2294and4558Test",,,"Checks that createUsageParameterSet() throws a NullPointerException for a null parameter set name or a null SbbID.","Matt","Complete",,,
4559,,,,"Pfd3","Assertion",,,"High","throws UnrecognizedSbbException if id is not a recognizable SbbID for the SLEE, does not correspond with an SBB installed in the SLEE, or is not an SBB that participates in the service whose usage information is being managed by this  MBean.",,"Note: not possible to test an unrecognized SbbID (other than null), as the  SLEE being tested is the TCK's only access to an implementation of SbbID. A mock implementation class may not be recognized by the SLEE.","ServiceUsageMBeanExceptionsTest",,,"Calls createUsageParameterSet() with the SbbID of an uninstalled SBB. Calls createUsageParameterSet() with the SbbID of an SBB not in the service represented by the ServiceUsageMBean.","Matt","Complete",,,
4560,,,,"Pfd3","Covered",2294,,,"throws InvalidArgumentException if name is zero-length or the identified SBB participates in this service but does not define a usage parameters interface.",,,,,,,,,,,
4561,,,,"Pfd3","Assertion",,,"High","throws UsageParameterSetNameAlreadyExistsException if the name has already been used to create a usage parameter set for the SBB",,,"Test2294and4558Test",,,"Try to create 2 parameter sets with the same name for the same Sbb, and check that the UsageParameterSetNameAlreadyExistsException is thrown.","Matt","Complete",,,
4562,,,,"Pfd3","Impossible",,,,"throws ManagementException if the usage parameter set could not be created due to a system-level failure",,,,,,,,,,,
3982,"javax.slee.management.ServiceUsageMBean","getSbbParameterNames",,"Pfd2","Removed",,,,,,,,,,,,"Removed",,,
3983,,,"1","Pfd2","Removed",,,,"Get the names of the usage parameters defined by an SBB.",,,,,,,,,,,
3984,,,"1","Pfd2","Removed",,,,"The current value of a specific usage parameter can be obtained using the getSbbParameterValue method.",,,,,,,,"Removed",,,
3985,,,"3","Pfd2","Removed",,,,"Returns the array of usage parameters defined by the SBB.",,,"Test3980Test",,,"Call method and verify that correct set of names is returned.","Cath","Removed",,,
3986,,,"4.1","Pfd2","Removed",,,,"java.lang.NullPointerException - if id is null.",,,,,,,,,,,
3987,,,"4.2","Pfd2","Removed",,,,"UnrecognizedSbbException - if sbbID is not a recognizable SbbID for the SLEE, does not correspond with an SBB installed in the SLEE, or is not an SBB that participates in th Service whose usage information is being managed by this MBean.",,,,,,,,,,,
3988,,,"4.3","Pfd2","Impossible",,,,"ManagementException - if the names of the usage parameters could not be obtained due to a system-level failure.",,,,,,,,,,,
4563,"javax.slee.management.ServiceUsageMBean","removeUsageParameterSet","removeUsageParameterSet","Pfd3","Method","2295",,,,,,,,,,,,,,
4564,,,,"Pfd3","Covered",2295,,,"Remove an existing usage parameter set that the specified SBB is permitted to use in the one-argument form of the get-usage-parameters method, when the service component identifier argument of the get-usage-parameters method identifies the Service that this MBean provides usage management access for.",,,,,,,,,,,
4565,,,,"Pfd3","Context",,,,"id - the component identifier of the SBB.  ",,,,,,,,,,,
4649,,,,"Pfd3","Covered","4568",,,"The SBB must be an SBB that is used in the Service whose usage information is being managed by this MBean.",,,,,,,,,,,
4566,,,,"Pfd3","Context",,,,"name - the usage parameter set name.",,,,,,,,,,,
4567,,,,"Pfd3","Assertion",,,"High","throws NullPointerException if either argument is null.",,,"ServiceUsageMBeanExceptionsTest",,,"Calls removeUsageParameterSet() with null arguments.","Matt","Complete",,,
4568,,,,"Pfd3","Assertion",,,"High","throws UnrecognizedSbbException if id is not a recognizable SbbID for the SLEE, does not correspond with an SBB installed in the SLEE, or is not an SBB that participates in the service whose usage information is being managed by this  MBean.",,"Note: not possible to test an unrecognized SbbID (other than null), as the  SLEE being tested is the TCK's only access to an implementation of SbbID. A mock implementation class may not be recognized by the SLEE.","ServiceUsageMBeanExceptionsTest",,,"Calls removeUsageParameterSet() with id of an uninstalled SBB. Calls removeUsageParameterSet() with the id of an SBB not in the service represented by the ServiceUsageMBean.","Matt","Complete",,,
4569,,,,"Pfd3","Assertion",,,"High","throws InvalidArgumentException if the identified SBB participates in this service but does not define a usage parameters interface.",,,"ServiceUsageMBeanExceptionsTest",,,"Calls removeUsageParameterSet() with the id of an SBB in the service represented by the ServiceUsageMBean, with no usage parameters interface.","Matt","Complete",,,
4570,,,,"Pfd3","Assertion",,,"High","throws UnrecognizedUsageParameterSetNameException if the name does not identify a usage parameter set that has been created for the SBB",,,"ServiceUsageMBeanExceptionsTest",,,"Calls removeUsageParameterSet() with a name that does not identify a usage parameter set that has been created for the SBB.","Matt","Complete",,,
4571,,,,"Pfd3","Impossible",,,,"throws ManagementException if the usage parameter set could not be removeddue to a system-level failure",,,,,,,,,,,
4572,"javax.slee.management.ServiceUsageMBean","getUsageParameterSets",,"Pfd3","Method","4573",,,,,,,,,,,,,,
4573,,,,"Pfd3","Assertion",,,"High","Get the names of the usage parameter sets that the specified SBB is permitted to use in the one-argument form of the get-usage-parameters methods, when the service component identifier argument of the get-usage-parameters method identifies the Service that this MBean provides usage management access for.",,,"Test2295Test",,,"Creates two usage parameter sets in SBB A and one set in SBB B, then checks the set returned by getUsageParameterSets() for SBB A.","Matt","Complete",,,
4574,,,,"Pfd3","Context",,,,"id - the component identifier of the SBB.",,,,,,,,,,,
4650,,,,"Pfd3","Covered","4578",,,"The SBB must be an SBB that is used in the Service whose usage information is being managed by this MBean.",,,,,,,,,,,
4575,,,,"Pfd3","Covered","4573",,,"Returns the names of the usage parameter sets that the SBB can use.",,,,,,,,,,,
4576,,,,"Pfd3","Assertion",,,"High","throws NullPointerException if either argument is null.",,,"ServiceUsageMBeanExceptionsTest",,,"Calls getUsageParameterSets() with a null SBB id argument.","Matt","Complete",,,
4577,,,,"Pfd3","Assertion",,,"High","throws InvalidArgumentException if the identified SBB participates in this service but does not define a usage parameters interface.",,,"ServiceUsageMBeanExceptionsTest",,,"Calls getUsageParameterSets() with the id of an SBB in the service represented by the ServiceUsageMBean, with no usage parameters interface.","Matt","Complete",,,
4578,,,,"Pfd3","Assertion",,,"High","throws UnrecognizedSbbException if id is not a recognizable SbbID for the SLEE, does not correspond with an SBB installed in the SLEE, or is not an SBB that participates in the service whose usage information is being managed by this  MBean.",,"Note: not possible to test an unrecognized SbbID (other than null), as the  SLEE being tested is the TCK's only access to an implementation of SbbID. A mock implementation class may not be recognized by the SLEE.","ServiceUsageMBeanExceptionsTest",,,"Calls getUsageParameterSets() with the id of an uninstalled SBB. Calls getUsageParameterSets() with the id of an SBB not in the service represented by the ServiceUsageMBean.","Matt","Complete",,,
4579,,,,"Pfd3","Impossible",,,,"throws ManagementException if the usage parameter set could not be created due to a system-level failure",,,,,,,,,,,
3989,"javax.slee.management.ServiceUsageMBean","getSbbParameterValue",,"Pfd2","Removed",,,,,,,,,,,,"Removed",,,
3990,,,"3","Pfd2","Removed",,,,"Returns the current value of the SBB's usage parameter.",,,,,,,,,,,
3991,,,"4.1","Pfd2","Removed",,,,"java.lang.NullPointerException - if either argument is null.",,,,,,,,,,,
3992,,,"4.2","Pfd2","Removed",,,,"UnrecognizedSbbException - if sbbID is not a recognizable SbbID for the SLEE, does not correspond with an SBB installed in the SLEE, or is not an SBB that participates in th Service whose usage information is being managed by this MBean.",,,,,,,,,,,
3993,,,"4.3","Pfd2","Removed",,,,"UnrecognizedUsageParameterException - if the specified usage parameter is not defined by the specified SBB.",,,,,,,,,,,
3994,,,"4.4","Pfd2","Removed",,,,"ManagementException - if the value of the usage parameter could not be obtained due to a system-level failure.",,,,,,,,,,,
4580,"javax.slee.management.ServiceUsageMBean","getSbbUsageMBean(SbbID)",,,"Method","2253",,,,,,,,,,,,,,
4581,,,,"Pfd3","Covered","2253",,,"Get the JMX Object Name of an SbbUsageMBean object that provides management access to the unamed usage parameter set for the specified SBB.  ",,"The test for 2253 uses this method to get the SbbUsageMBean for the unnamed usage parameter set in a given SBB. The actual call is delegated to the UsageMBeanLookup/GenericUsageMBeanLookup util classes.",,,,,,,,,
4614,,,,"Pfd3","Covered","4585,4651",,,"The SBB must be participating in the Service that this MBean provides usage management access for, and must have defined a usage parameter interface.",,,,,,,,,,,
4582,,,,"Pfd3","Context",,,,"id - the component identifier of the SBB.",,,,,,,,,,,
4653,,,,"Pfd3","Covered","4585",,,"The SBB must be an SBB that is used in the Service whose usage information is being managed by this MBean.",,,,,,,,,,,
4583,,,,"Pfd3","Covered","2253",,,"Returns the ObjectName of an SbbUsageMBean object.",,,,,,,,,,,
4584,,,,"Pfd3","Assertion",,,"High","throws NullPointerException if id is null.",,,"ServiceUsageMBeanExceptionsTest",,,"Calls getSbbUsageMBean() with a null SBB id argument","Matt","Complete",,,
4585,,,,"Pfd3","Assertion",,,"High","throws UnrecognizedSbbException if id is not a recognizable SbbID for the SLEE, does not correspond with an SBB installed in the SLEE, or is not an SBB that participates in the service whose usage information is being managed by this  MBean.",,"Note: not possible to test an unrecognized SbbID (other than null), as the  SLEE being tested is the TCK's only access to an implementation of SbbID. A mock implementation class may not be recognized by the SLEE.","ServiceUsageMBeanExceptionsTest",,,"Calls getSbbUsageMBean() with the id of an uninstalled SBB. Calls getSbbUsageMBean() with the id of an SBB not in the service represented by the ServiceUsageMBean.","Matt","Complete",,,
4651,,,,"Pfd3","Assertion",,,"High","throws InvalidArgumentException - if the identified SBB participates in this service but does not define a usage parameters interface",,,"ServiceUsageMBeanExceptionsTest",,,"Calls getSbbUsageMBean() with the id of an SBB in the service represented by the ServiceUsageMBean, with no usage parameters interface.","Matt","Complete",,,
4652,,,,"Pfd3","Impossible",,,,"throws ManagementException - if the object name could not be obtained due to a system-level failure",,,,,,,,,,,
4586,"javax.slee.management.ServiceUsageMBean","getSbbUsageMBean(SbbID, String)",,"Pfd3","Method","2254",,,,,,,,,,,,,,
4587,,,,"Pfd3","Covered","2254",,,"Get the JMX Object Name of an SbbUsageMBean object that provides management access to the named usage parameter set for the specified SBB.",,"The test for 2254 uses this method to get the SbbUsageMBean for a named usage parameter set in a given SBB. The actual call is delegated to the UsageMBeanLookup/GenericUsageMBeanLookup util classes.",,,,,,,,,
4616,,,,"Pfd3","Covered","4654,4592",,,"The SBB must be participating in the Service that this MBean provides usage management access for, and must have defined a usage parameter interface.",,,,,,,,,,,
4588,,,,"Pfd3","Context",,,,"name - the name of the usage parameter set.  ",,,,,,,,,,,
4656,,,,"Pfd3","Covered","4655",,,"The name must be one of the names returned by getUsageParameterSets(id).",,,,,,,,,,,
4589,,,,"Pfd3","Context",,,,"id - the component identifier of the SBB.  ",,,,,,,,,,,
4657,,,,"Pfd3","Covered","4654",,,"The SBB must be an SBB that is used in the Service whose usage information is being managed by this MBean.",,,,,,,,,,,
4590,,,,"Pfd3","Covered","2254",,,"Returns the ObjectName of an SbbUsageMBean object.",,,,,,,,,,,
4591,,,,"Pfd3","Assertion",,,"High","throws NullPointerException if id or name is null.",,,"ServiceUsageMBeanExceptionsTest",,,"Calls getSbbUsageMBean(SbbID,String) with null arguments.","Matt","Complete",,,
4654,,,,"Pfd3","Assertion",,,"High","throws UnrecognizedSbbException - if id is not a recognizable SbbID for the SLEE, does not correspond with an SBB installed in the SLEE, or is not an SBB that participates in the Service whose usage information is being managed by this MBean.",,"Note: not possible to test an unrecognized SbbID (other than null), as the  SLEE being tested is the TCK's only access to an implementation of SbbID. A mock implementation class may not be recognized by the SLEE.","ServiceUsageMBeanExceptionsTest",,,"Calls getSbbUsageMBean(SbbID,String) with id of an uninstalled SBB. Calls getSbbUsageMBean(SbbID,String) with the id of an SBB not in the service represented by the ServiceUsageMBean.","Matt","Complete",,,
4592,,,,"Pfd3","Assertion",,,"High","throws InvalidArgumentException if the identified SBB participates in this service but does not define a usage parameters interface.",,,"ServiceUsageMBeanExceptionsTest",,,"Calls getSbbUsageMBean(SbbID,String) with the id of an SBB in the service represented by the ServiceUsageMBean, with no usage parameters interface.","Matt","Complete",,,
4655,,,,"Pfd3","Assertion",,,"High","throws UnrecognizedUsageParameterSetNameException - if the named usage parameter set has not been created for the SBB.",,,"ServiceUsageMBeanExceptionsTest",,,"Calls getSbbUsageMBean(SbbID,String) with a name that does not identify a usage parameter set that has been created for the SBB.","Matt","Complete",,,
4593,,,,"Pfd3","Impossible",,,,"throws ManagementException if the object name could not be obtained due to a system-level failure.",,,,,,,,,,,
3995,"javax.slee.management.ServiceUsageMBean","resetSbbParameter",,"Pfd2","Removed",,,,,,,,,,,,"Removed",,,
3996,,,"1","Pfd2","Removed",,,,"Resets to 0 the value of an SBB's usage parameter.",,,,,,,,,,,
3997,,,"3.1","Pfd2","Removed",,,,"java.lang.NullPointerException - if either argument is null.",,,,,,,,,,,
3998,,,"3.2","Pfd2","Removed",,,,"UnrecognizedSbbException - if sbbID is not a recognizable SbbID for the SLEE, does not correspond with an SBB installed in the SLEE, or is not an SBB that participates in th Service whose usage information is being managed by this MBean.",,,,,,,,,,,
3999,,,"3.3","Pfd2","Removed",,,,"UnrecognizedUsageParameterException - if the specified usage parameter is not defined by the specified SBB.",,,,,,,,,,,
4000,,,"3.4","Pfd2","Removed",,,,"ManagementException - if the value of the usage parameter could not be obtained due to a system-level failure.",,,,,,,,,,,
4001,"javax.slee.management.ServiceUsageMBean","resetSbbParameters",,"Pfd2","Removed",,,,,,,,,,,,"Removed",,,
4002,,,"1","Pfd2","Removed",,,,"Reset to 0 the values of all an SBB's usage parameters.",,,,,,,,,,,
4003,,,"3.1","Pfd2","Removed",,,,"java.lang.NullPointerException - if id is null.",,,,,,,,,,,
4004,,,"3.2","Pfd2","Removed",,,,"UnrecognizedSbbException - if sbbID is not a recognizable SbbID for the SLEE, does not correspond with an SBB installed in the SLEE, or is not an SBB that participates in th Service whose usage information is being managed by this MBean.",,,,,,,,,,,
4005,,,"3.3","Pfd2","Removed",,,,"ManagementException - if the values of the usage parameters could not be reset due to a system level failure.",,,,,,,,,,,
4006,"javax.slee.management.ServiceUsageMBean","resetAllParameters",,"Pfd2","Removed",,,,,,,,,,,,"Removed",,,
4007,,,"1","Pfd2","Removed",,,,"Reset to 0 the values of all SBB usage parameters, for all the SBBs participating in the Service whose usage information is being managed by this MBean.",,,,,,,,,,,
4008,,,"2 ","Pfd2","Removed",,,,"ManagementException - if the values of the usage parameters could not be reset due to a system level failure.",,,,,,,,,,,
4617,"javax.slee.management.ServiceUsageMBean","resetAllUsageParameters(Sbb id)",,"Pfd3","Method","4618",,,,,,,,,,,,,,
4618,,,"1","Pfd3","Assertion",,,"High","Reset all usage parameters in the unamed usage parameter set, and all named usage parameter sets, of the specified SBB.",,,"ResetParametersTest",,,"Deploys 3 SBBS -- SBB A and SBB B 2 in one service, and SBB C in another service. Update usage parameter values for all three SBBs. Resets values in SBB A only. Check that values for SBB A are reset. Checks that values for SBB B and SBB C are not reset.","Matt","Complete",,,
4619,,,"1","Pfd3","Covered","4618",,,"Counter-type usage parameters are reset to 0 ",,,,,,,,,,,
4620,,,"1","Pfd3","Covered","4618",,,"and sample-type usage parameters have all samples deleted. ",,,,,,,,,,,
4621,,,"2 ","Pfd3","Context",,,,"id - the component identifier of the SBB.",,,,,,,,,,,
4659,,,"2 ","Pfd3","Covered","4623",,,"The SBB must be an SBB that is used in the Service whose usage information is being managed by this MBean.",,,,,,,,,,,
4622,,,"3","Pfd3","Assertion",,,"High","java.lang.NullPointerException - if id is null. ",,,"ServiceUsageMBeanExceptionsTest",,,"Calls resetAllUsageParameters(SbbID) with a null SBB id argument.","Matt","Complete",,,
4623,,,"3","Pfd3","Assertion",,,"High","UnrecognizedSbbException - if id is not a recognizable SbbID for the SLEE, does not correspond with an SBB installed in the SLEE, or is not an SBB that participates in the Service whose usage information is being managed by this MBean.",,"Note: not possible to test an unrecognized SbbID (other than null), as the  SLEE being tested is the TCK's only access to an implementation of SbbID. A mock implementation class may not be recognized by the SLEE.","ServiceUsageMBeanExceptionsTest",,,"Calls resetAllUsageParameters(SbbID) with the id of an uninstalled SBB. Calls resetAllUsageParameters(SbbID) with the id of an SBB not in the service represented by the ServiceUsageMBean.","Matt","Complete",,,
4624,,,"3","Pfd3","Assertion",,,"High","InvalidArgumentException - if the identified SBB participates in this service but does not define a usage parameters interface.",,,"ServiceUsageMBeanExceptionsTest",,,"Calls resetAllUsageParameters(SbbID) with the id of an SBB in the service represented by the ServiceUsageMBean, with no usage parameters interface.","Matt","Complete",,,
4625,,,"3","Pfd3","Impossible",,,,"ManagementException - if the values of the usage parameters could not be reset due to a system-level failure.",,,,,,,,,,,
4594,"javax.slee.management.ServiceUsageMBean","resetAllUsageParameters",,"Pfd3","Method","4595",,,,,,,,,,,,,,
4595,,,,"Pfd3","Assertion",,,"High","Reset all usage parameters in the unnamed usage parameter set, and all named usage parameter sets, of all SBB participating in the Service whose usage information is being managed by this MBean.",,,"ResetParametersTest",,,"Deploys 3 SBBS -- SBB A and SBB B 2 in one service, and SBB C in another service. Update usage parameter values for all three SBBs. Resets values the service containing A and B (but not C). Checks that values in SBB A and SBB B are reset. Checks that values for SBB C are not reset.","Matt","Complete",,,
4596,,,,"Pfd3","Covered","4595",,,"Counter-type usage parameters are reset to 0",,,,,,,,,,,
4597,,,,"Pfd3","Covered","4595",,,"and sample-type usage parameters have all samples cleared.",,,,,,,,,,,
4626,,,,"Pfd3","Impossible",,,,"ManagementException - if the values of the usage parameters could not be reset due to a system-level failure.",,,,,,,,,,,
4009,"javax.slee.management.ServiceUsageMBean","close",,"Pfd2","Method","1469,4445",,,,,,,,,,,,,,
4010,,,"1","Pfd2","Ap Recom",,,,"Notify the SLEE that the service usage MBean is no longer required by the management client.  As the SLEE may subsequently deregister the usage MBean from the MBean server, a client that invokes this method should assume that the Object Name they had for the MBean is no longer valid once this method returns.",,,,,,,,,,,
4011,,,"2.1","Pfd2","Removed",,,,"InvalidStateException - if notification listeners are still attached to the service usage MBean.",,,,,,,,,,,
4012,,,"2.2","Pfd2","Impossible",,,,"ManagementException - if the service usage MBean could not be closed by the SLEE due to a system-level failure.",,,,,,,,,,,
4013,"javax.slee.management.SleeManagementMBean",,"1","Pfd2","Context",,,,"The SleeManagementMBean interface defines the central management interface for the SLEE.  This interface provides a management client with the JMX Object Names of other SLEE management MBeans, and allows the operational state of the SLEE to be changed.",,,,,,,,,,,
4014,,,"2 ","Pfd2","Repeat",1469,,,"Every time the operational state of the SLEE changes, the SleeManagementMBean object must emit a SleeStateChange notification.  ",,,,,,,,,,,
4445,,,"2 ","Pfd2","Assertion",,,"High","... it is required that the SleeManagementMBean object implement the javax.management.NotificationBroadcaster interface.",,,"SleeManagementMBeanIsNotifier",,,"Checks that the SleeManagementMBean implements NoficationBroadcaster using MBeanServer.isInstanceOf()","Matt","Complete",,,
4015,"javax.slee.management.SleeManagementMBean","getState",,"Pfd2","Method","1483",,,,,,,,,,,"Complete",,,
4016,,,"1","Pfd2","Repeat",1483,,,"Returns a SleeState object that indicates the current operational state of the SLEE.",,,,,,,,,,,
4017,,,"2 ","Pfd2","Impossible",,,,"ManagementException - if the operational state could not be determined due to a system-level failure.",,,,,,,,,,,
4018,"javax.slee.management.SleeManagementMBean","start",,"Pfd2","Method","1486,1487,1883,4022",,,,,,,,,,,"Complete",,,
4019,,,"1","Pfd2","Context",,,,"Request that the SLEE's event routing subsystem be started. ",,,,,,,,,,,
4020,,,"1","Pfd2","Covered","1486,1487",,,"The SLEE must be in the Stopped state, and transitions to the Starting state during this method invocation.",,,,,,,,,,,
4021,,,"1","Pfd2","Covered",1883,,,"The SLEE spontaneously moves out of the Starting state when conditions dictate.",,,,,,,,,,,
4022,,,"2.1","Pfd2","Assertion",,,"High","InvalidStateException - if the SLEE is not currently in the Stopped state.",,,"SleeStateMachineTest","Invalid from states:  STOPPING, STARTING, RUNNING Valid from state: STOPPED","Invalid from states:  STOPPING, STARTING, RUNNING Valid from state: STOPPED","Check that start() throws an InvalidStateException when invoked from the  STARTING, RUNNING and STOPPING states, and not when invoked from the STOPPED state.","Matt","Complete",,,
4023,,,"2.2","Pfd2","Impossible",,,,"ManagementException - if the operational state could not be determined due to a system-level failure.",,,,,,,,,,,
4024,"javax.slee.management.SleeManagementMBean","stop",,"Pfd2","Method","1489,1490,1887,4028",,,,,,,,,,,"Complete",,,
4025,,,"1","Pfd2","Context",,,,"Request that the SLEE's event routing subsystem be stopped.",,,,,,,,,,,
4026,,,"1","Pfd2","Covered","1489,1490",,,"The SLEE must be in the Running state, and transitions to the Stopping state during this method invocation.",,,,,,,,,,,
4027,,,"1","Pfd2","Covered",1887,,,"The SLEE spontaneously moves out of the Stopping state when conditions dictate.",,,,,,,,,,,
4028,,,"2.1","Pfd2","Assertion",,,"High","InvalidStateException - if the SLEE is not currently in the Running state.",,"Don't test from the STARTING state, as the SLEE could transition at any time to the RUNNING state, which is a valid state to invoke stop() from","SleeStateMachineTest","Invalid from states: STOPPED, STARTING, STOPPING Valid from state: RUNNING ","Invalid from states: STOPPED, STOPPING Valid from state: RUNNING ","Check that stop() throws an InvalidStateException when invoked from the  STOPPED and STOPPING states, and not when invoked from the RUNNING state.","Matt","Complete",,,
4029,,,"2.2","Pfd2","Impossible",,,,"ManagementException - if the operational state could not be determined due to a system-level failure.",,,,,,,,,,,
4030,"javax.slee.management.SleeManagementMBean","shutdown",,"Pfd2","Method","4034",,,,,,,,,,,"Complete",,,
4031,,,"1","Pfd2","Out of Scope",,,,"Shutdown and terminate all SLEE processes related to this server image.",,,,,,,,,,,
4032,,,"1","Pfd2","Out of Scope",,,,"In a distributed SLEE all nodes should terminate in response to this request.",,,,,,,,,,,
4033,,,"1","Pfd2","Impossible",,,,"This method should never return, and does not cause the emission of a SleeStateChange notification.",,"Testing of shutdown is not supported by the current TCK architecture.",,,,,,,,,
4034,,,"2.1","Pfd2","Assertion",,,"High","InvalidStateException - if the SLEE is not currently in the Stopped state.",,"We can't test shutdown using the current TCK architecture, and we can't test transitory states, so we can only test that shutdown() fails from the RUNNING state.","ShutdownFailsFromRunning","Current SLEE state: STOPPED, STARTING, RUNNING, STOPPING","Current SLEE state: RUNNING","Try to call shutdown() in the SleeManagementMBean, and check that it throws an InvalidStateException.","Matt","Complete",,,
4035,,,"2.2","Pfd2","Impossible",,,,"ManagementException - if the operational state could not be determined due to a system-level failure.",,,,,,,,,,,
4036,"javax.slee.management.SleeManagementMBean","getDeploymentMBean",,"Pfd2","Method","4037",,,,,,,,,,,"Complete",,,
4037,,,"2 ","Pfd2","Assertion",,,"High","Returns the JMX Object Name of the DeploymentMBean object.",,,"TestMBeanAccessors",,,"Checks that the returned ObjectName references an MBean of the correct type, using MBeanServer.isInstanceOf()","Matt","Complete",,,
4038,"javax.slee.management.SleeManagementMBean","getServiceManagementMBean",,"Pfd2","Method","4039",,,,,,,,,,,"Complete",,,
4039,,,"2 ","Pfd2","Assertion",,,"High","Returns the JMX Object Name of the ServiceManagementMBean object.",,,"TestMBeanAccessors",,,"Checks that the returned ObjectName references an MBean of the correct type, using MBeanServer.isInstanceOf()","Matt","Complete",,,
4040,"javax.slee.management.SleeManagementMBean","getProfileProvisioningMBean",,"Pfd2","Method","4041",,,,,,,,,,,"Complete",,,
4041,,,"2 ","Pfd2","Assertion",,,"High","Returns the JMX Object Name of the ProfileProvisioningMBean object.",,,"TestMBeanAccessors",,,"Checks that the returned ObjectName references an MBean of the correct type, using MBeanServer.isInstanceOf()","Matt","Complete",,,
4042,"javax.slee.management.SleeManagementMBean","getTraceMBean",,"Pfd2","Method","4043",,,,,,,,,,,"Complete",,,
4043,,,"2 ","Pfd2","Assertion",,,"High","Returns the JMX Object Name of the TraceMBean object.",,,"TestMBeanAccessors",,,"Checks that the returned ObjectName references an MBean of the correct type, using MBeanServer.isInstanceOf()","Matt","Complete",,,
4044,"javax.slee.management.SleeManagementMBean","getAlarmMBean",,"Pfd2","Method","4045,4047,4048",,,,,,,,,,,"Complete",,,
4045,,,"2 ","Pfd2","Assertion",,,"High","Returns the JMX Object Name of the AlarmMBean object.",,,"TestMBeanAccessors",,,"Checks that the returned ObjectName references an MBean of the correct type, using MBeanServer.isInstanceOf()","Matt","Complete",,,
4046,"javax.slee.management.SleeProvider",,"1","Pfd2","Context",,,,"The SleeProvider interface provides a management client with enough information to begin interacting with a SLEE's management subsystem.",,,,,,,,,,,
4047,,,"1","Pfd2","Covered","(many)",,,"Every SLEE vendor must provide at least one implementation of this interface (a peer class) and document the peer class's fully qualified class name.",,"Tested implicity by the TCK plugin - the SLEE must satisfy this requirement for the TCK to function.",,,,,,,,,
4048,,,"1","Pfd2","Covered","(many)",,,"The peer class must include a public no-arg constructor.",,"Tested implicity by the TCK plugin - the SLEE must satisfy this requirement for the TCK to function.",,,,,,,,,
4049,"javax.slee.management.SleeProvider","getSleeManagementMBean",,"Pfd2","Method","1891",,,,,,,,,,,,,,
4050,,,"2 ","Pfd2","Covered","(many)",,,"Returns the JMX Object Name of the SleeManagementMBean object.",,"Tested implicity by the TCK plugin - the SLEE must satisfy this requirement for the TCK to function.",,,,,,,,,
4051,"javax.slee.management.TraceMBean",,"1","Pfd2","Context",,,,"The TraceMBean interface defines the management interface for the TraceFacility (and other vendor-specific trace generating interfaces).",,,,,,,,,,,
4052,,,"2 ","Pfd2","Context",,,,"The Object Name of a TraceMBean object can be obtained by a managemunt client via the SleeManagementMBean.getTraceMBean() method.",,,,,,,,,,,
4053,,,"3","Pfd2","Assertion",,,"Low","Since TraceMBean objects can emit Trace notifications, it is required that the TraceMBean object implement the javax.management.NotificationBroadcaster interface.",,,,,,,,,,,
4054,"javax.slee.management.TraceMBean","setTraceLevel",,"Pfd2","Method","4055",,,,,,,,,,,,,,
4055,,,"1","Pfd2","Assertion",,,"Low","Set the trace filter level for a particular component.",,,"Test4055Test",,,"Set the trace level for an SBB, verify the set level with getTraceLevel.","Cath","Complete",,,
4056,,,"1","Pfd2","Assertion",,,"Low","The TraceMBean only generates trace notifications if the trace level of a trace message generated by a component is equal or greater than the trace filter level set for that component.",,,,,,,,,,,
4057,,,"2 ","Pfd2","Assertion",,,"Low","The default trace filter level for a component is Level.OFF.",,,,,,,,,,,
4058,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,,,,,,,,,
4059,,,"4.2","Pfd2","Assertion",,,"Low","UnrecognizedComponentException - if id is not a recognizable ComponentID object for the SLEE or it does not correspond with a component installed in the SLEE.",,,,,,,,,,,
4060,,,"4.3","Pfd2","Impossible",,,,"ManagementException - if the trace level could not be set due to a system-level failure.",,,,,,,,,,,
4061,"javax.slee.management.TraceMBean","getTraceLevel",,"Pfd2","Method","4062",,,,,,,,,,,,,,
4062,,,"4","Pfd2","Assertion",,,"Low","Returns the trace filter level for the component.",,,"Test4055Test",,,"Set the trace level for an SBB, verify the set level with getTraceLevel.","Cath","Complete",,,
4063,,,"5.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,,,,,,,,,
4064,,,"5.2","Pfd2","Assertion",,,"Low","UnrecognizedComponentException - if id is not a recognizable ComponentID object for the SLEE or it does not correspond with a component installed in the SLEE.",,,,,,,,,,,
4065,,,"5.3","Pfd2","Impossible",,,,"ManagementException - if the trace level could not be set due to a system-level failure.",,,,,,,,,,,
4066,"javax.slee.management.AlarmDuplicateFilter",,"1","Pfd2","Assertion",,,"Low","A notification filter that suppresses equivalent AlarmNotifications that occur during a specified period of time.",,,"Test4066Test",,,"Create AlarmDuplicateFilter and register it with the Notification listener.  Generate two alarms, and set a timer.  When the timer goes off generate a third alarm.  The first and third alarms should be received (the timer is to go off after the filter expires).","Cath","Complete",,,
4067,,,"1","Pfd2","Assertion",,,"Low","Only the first of a series of equivalent alarm notifications is allowed through this filter.",,,"Test4066Test",,,,"Cath","Complete",,,
4068,,,"1","Pfd2","Assertion",,,"Low","When the specified period of time elapses after the first notification, the cycle restarts and a subsequent equivalent alarm notification is allowed through.",,,,,,,,,,,
4069,,,"2 ","Pfd2","Assertion",,,"Low","Alarm notification equivalence is tested using the AlarmNotification.equals(java.lang.Object) method.",,,,,,,,,,,
4070,,,"3","Pfd2","Assertion",,,"Low","Notifications that are not instances of AlarmNotification are suppressed by this filter.",,,,,,,,,,,
4071,"javax.slee.management.AlarmDuplicateFilter","isNotificationEnabled",,"Pfd2","Method","4066",,,,,,,,,,,,,,
4072,,,"4","Pfd2","Assertion",,,"Low","Returns true if the notification should be delivered to notification listeners, false otherwise.",,,,,,,,,,,
4073,,,"4","Pfd2","Assertion",,,"Low","This method always returns false if notification is not an instance of AlarmNotification.",,,,,,,,,,,
4074,"javax.slee.management.AlarmLevelFilter",,"1","Pfd2","Assertion",,,"Low","Only alarm notifications of the specified level or greater are allowed through this filter.",,,"Test4074Test",,,"Create AlarmLevelFilter.  Create three alarms, ensure that only WARNING and SEVERE gets through and that INFO does not.","Cath","Complete",,,
4075,,,"2 ","Pfd2","Assertion",,,"Low","Notifications that are not instances of AlarmNotification are suppressed by this filter.",,,,,,,,,,,
4076,"javax.slee.management.AlarmLevelFilter","isNotificationEnabled",,"Pfd2","Method","4074",,,,,,,,,,,,,,
4077,,,"4","Pfd2","Assertion",,,"Low","Returns true if the notification should be delivered to notification listeners, false otherwise.",,,,,,,,,,,
4078,,,"4","Pfd2","Assertion",,,"Low","This method always returns false if notification is not an instance of AlarmNotification.",,,,,,,,,,,
4079,"javax.slee.management.AlarmNotification",,"1","Pfd2","Context",,,,"This notification is emitted by an AlarmMBean object to indicate some component or subsystem in the SLEE is experiencing a significant problem.",,,,,,,,,,,
4080,,,"2 ","Pfd2","Assertion",,,"Low","The notification type of all alarm notifications is specified by the AlarmMBean.ALARM_NOTIFICATION_TYPE attribute.",,,,,,,,,,,
4081,"javax.slee.management.AlarmNotification","ctor",,"Pfd2","Impossible",,,,,,"Can't test contructor, as the first argument is an AlarmMBean, and there is no API for accessing an AlarmMBean directly.",,,,,,,,,
4477,,,,,"Assertion",,,"Low","Create an AlarmNotification to notify listeners of a alarm",,,,,,,,,,,
4082,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if notificationSource, alarmType, alarmLevel or message is null.",,,,,,,,,,,
4083,,,"3.2","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException - if alarmLevel == Level.OFF",,,,,,,,,,,
4084,"javax.slee.management.AlarmNotification","getAlarmType",,"Pfd2","Method","4085",,,,,,,,,,,,,,
4085,,,"2 ","Pfd2","Assertion",,,"Low","Returns the type of the alarm.",,,"Test4085Test",,,"Create an alarm via AlarmFacility.createAlarm(), verify that the type received in the notification handler is correct.","Cath","Complete",,,
4086,"javax.slee.management.AlarmNotification","getAlarmSource",,"Pfd2","Method","4087",,,,,,,,,,,,,,
4087,,,"2 ","Pfd2","Assertion",,,"Low","Returns the source of the alarm.",,,"Test4085Test",,,"As for 4085, but with source.","Cath","Complete",,,
4088,"javax.slee.management.AlarmNotification","getLevel",,"Pfd2","Method","4089",,,,,,,,,,,,,,
4089,,,"2 ","Pfd2","Assertion",,,"Low","Returns the level of the alarm.",,,"Test4085Test",,,"As for 4085 but with level.","Cath","Complete",,,
4090,"javax.slee.management.AlarmNotification","getCause",,"Pfd2","Method","4091",,,,,,,,,,,,,,
4091,,,"2 ","Pfd2","Assertion",,,"Low","Returns the cause for this alarm notification, or null if there wasn't a cause.",,,"Test4085Test",,,"As for 4085 but with cause.","Cath","Complete",,,
4092,"javax.slee.management.AlarmNotification","equals",,"Pfd2","Method","4093",,,,,,,,,,,,,,
4093,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is an instance of this class and the alarm type, alarm source, alarm level and message attributes of obj ar e the same as the corresponding attributes of this.",,,"Test4085Test",,,"Create two alarms, store the first.  When the second is received verify that they are not equal to one another, and that the first is equal to itself.","Cath","Complete",,,
4094,"javax.slee.management.AlarmNotification","hashCode",,"Pfd2","Method","4095",,,,,,,,,,,,,,
4095,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code for this notification.",,,"Test4085Test",,,"Call .hashCode() verify no exception.","Cath","Complete",,,
4096,"javax.slee.management.AlarmNotification","toString",,"Pfd2","Method","4097",,,,,,,,,,,,,,
4097,,,"3","Pfd2","Assertion",,,"Low","Returns a string representation for this notification.",,,"Test4085Test",,,"Call .toString(), verify non-null and no exception.","Cath","Complete",,,
4098,"javax.slee.management.AlarmThresholdFilter",,"1","Pfd2","Assertion",,,"Low","A notification filter that suppresses equivalent alarm notifications until a specified number have occured within a specified time period.  Once the threshold has been reached, the next equivalent alarm notification is allowed through the filter, and the cycle restarts.",,,"Test4098Test",,,"Create alarm threshold filter with timeout 1s and 2 threshold.  Create three alarms and ensure that only the last one is received.","Cath","Complete",,,
4099,,,"1","Pfd2","Assertion",,,"Low","The cycle also restarts if the time period from the first notification expires without a notification being sent.",,,,,,,,,,,
4100,,,"1","Pfd2","Context",,,,"This filter can be used to suppress alarms that occur and then clear up spontaneously.",,,,,,,,,,,
4101,,,"3","Pfd2","Assertion",,,"Low","Alarm notification equivalence is tested using the AlarmNotification.equals(java.lang.Object) method.",,,,,,,,,,,
4102,,,"4","Pfd2","Assertion",,,"Low","Notifications that are not instances of AlarmNotification are suppressed by this filter.",,,,,,,,,,,
4103,"javax.slee.management.AlarmThresholdFilter","isNotificationEnabled",,"Pfd2","Method","4098",,,,,,,,,,,,,,
4104,,,"4","Pfd2","Assertion",,,"Low","Returns true if the notification should be delivered to notification listeners, false otherwise.",,,,,,,,,,,
4105,,,"4","Pfd2","Assertion",,,"Low","This method always returns false if notification is not an instance of AlarmNotification.",,,,,,,,,,,
4106,"javax.slee.management.ServiceState",,"1","Pfd2","Context",,,,"This class defines an enumerated type that encapsulates the state of a Service.",,,,,,,,,,,
4107,,,"2 ","Pfd2","Assertion",,,"Low","A singleton instance of each enumerated value is guaranteed, so that equality testst using == are always evaluated correctly.",,,,,,,,,,,
4108,,,"2 ","Pfd2","Assertion",,,"Low","This equality test is only guaranteed if this class is loadde in the application's boot class path, rather than dynamically loaded at runtime.",,,,,,,,,,,
4109,"javax.slee.management.ServiceState","fromInt",,"Pfd2","Method","4110",,,,,,,,,,,,,,
4110,,,"3","Pfd2","Assertion",,,"Low","Returns a ServiceState object corresponding to state.",,,4110,,,"ServiceState.fromInt(STOPPING)","Cath","Complete",,,
4111,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException - if state is not a valid state value.",,,,,,,,,,,
4112,"javax.slee.management.ServiceState","toInt",,"Pfd2","Method","4113",,,,,,,,,,,,,,
4113,,,"2 ","Pfd2","Assertion",,,"Low","Returns an integer value representation for this ServiceState object.",,,4110,,,"ServiceState.STATE_STOPPING.toInt()","Cath","Complete",,,
4114,"javax.slee.management.ServiceState","isInactive",,"Pfd2","Method","1620",,,,,,,,,,,,,,
4115,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the INACTIVE state of a Service, false otherwise.",,,,,,,,,,,
4116,"javax.slee.management.ServiceState","isActive",,"Pfd2","Method","1620",,,,,,,,,,,,,,
4117,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the ACTIVE state of a Service, false otherwise.",,,,,,,,,,,
4118,"javax.slee.management.ServiceState","isStopping",,"Pfd2","Method","4119",,,,,,,,,,,,,,
4119,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the STOPPING state of a Service, false otherwise.",,,"Test4110Test",,,"ServiceState.STATE_STOPPING.isStopping()","Cath","Complete",,,
4120,"javax.slee.management.ServiceState","equals",,"Pfd2","Method","4121",,,,,,,,,,,,,,
4121,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is an instance of this class representing the same Service state as this, false otherwise.",,,"Test4110Test",,,"ServiceState.fromInt(STOPPING).equals(ServiceState.fromInt(STOPPING)) and with non equal objects","Cath","Complete",,,
4122,"javax.slee.management.ServiceState","hashCode",,"Pfd2","Method","4123",,,,,,,,,,,,,,
4123,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code value.",,,"Test4110Test",,,"Verify no exception thrown.","Cath","Complete",,,
4124,"javax.slee.management.ServiceState","toString",,"Pfd2","Method","4125",,,,,,,,,,,,,,
4125,,,"3","Pfd2","Assertion",,,"Low","Returns the textual representation of this Service state object.",,,"Test4110Test",,,"Verify no exception thhrown and non null return value.","Cath","Complete",,,
4126,"javax.slee.management.SleeProviderFactory",,"1","Pfd2","Context",,,,"The SleeProviderFactory provides a static factory method for instantiating SleeProvider peer classes.",,,,,,,,,,,
4127,,,"1","Pfd2","Context",,,,"The peer class provides a management client with enough information to begin interacting with a particular vendor's SLEE management subsystem.",,,,,,,,,,,
4128,,,"1","Pfd2","Covered","(many)",,,"Every SLEE vendor must provide an implementation of the SleeProvider interface (a peer class) and document its fully-qualified class name.",,"Tested implicity by the TCK plugin - the SLEE must satisfy this requirement for the TCK to function.",,,,,,,,,
4129,"javax.slee.management.SleeProviderFactory","getSleeProvider",,"Pfd2","Method","4130",,,,,,,,,,,,,,
4130,,,"1","Pfd2","Context",,,,"This method is equivalent to getSleeProvider(peerClassName, SleeProviderFactory.class.getClassLoader()).",,,,,,,,,,,
4131,,,"1","Pfd2","Assertion",,,"Low","In the case where the SleeProviderFactory's class loader is null, ClassLoader,getSystemClassLoader() is used instead.",,,,,,,,,,,
4132,,,"3","Pfd2","Assertion",,,"Low","Returns an instance of the specified class.",,,,,,,,,,,
4133,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if peerClassName is null.",,,,,,,,,,,
4134,,,"4.2","Pfd2","Assertion",,,"Low","PeerUnavailableException - if the peer class could not be instantiated or did not implement the SleeProvider interface.",,,,,,,,,,,
4135,"javax.slee.management.SleeProviderFactory","getSleeProvider",,"Pfd2","Method","4137",,,,,,,,,,,,,,
4136,,,"1","Pfd2","Assertion",,,"Low","Get an instance of a SleeProvider peer class using the specified class loader.",,,,,,,,,,,
4137,,,"3","Pfd2","Covered","4136",,,"Returns an instance of the specified class.",,,,,,,,,,,
4138,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if peerClassName is null.",,,,,,,,,,,
4139,,,"4.2","Pfd2","Assertion",,,"Low","PeerUnavailableException - if the peer class could not be instantiated or did not implement the SleeProvider interface.",,,,,,,,,,,
4140,"javax.slee.management.SleeState",,"1","Pfd2","Context",,,,"This class defines an enumerated type that encapsulates the operational state of a Service.",,,,,,,,,,,
4141,,,"2 ","Pfd2","Assertion",,,"Low","A singleton instance of each enumerated value is guaranteed, so that equality testst using == are always evaluated correctly.",,,,,,,,,,,
4142,,,"2 ","Pfd2","Assertion",,,"Low","This equality test is only guaranteed if this class is loadde in the application's boot class path, rather than dynamically loaded at runtime.",,,,,,,,,,,
4143,"javax.slee.management.SleeState","fromInt",,"Pfd2","Method","4144",,,,,,,,,,,,,,
4144,,,"3","Pfd2","Assertion",,,"Low","Returns a SleeState object corresponding to state.",,,"Test4144Test",,,"SleeState.fromInt(STOPPED)","Cath","Complete",,,
4145,,,"4.1","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException -if state is not a valid state value.",,,,,,,,,,,
4146,"javax.slee.management.SleeState","toInt",,"Pfd2","Method","4144",,,,,,,,,,,,,,
4147,,,"2 ","Pfd2","Assertion",,,"Low","Returns an integer value representation for this SleeState object.",,,,,,,,,,,
4148,"javax.slee.management.SleeState","isStopped",,"Pfd2","Method","1886",,,,,,,,,,,,,,
4149,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the STOPPED state of the SLEE, false otherwise.",,,,,,,,,,,
4150,"javax.slee.management.SleeState","isStarting",,"Pfd2","Method","1487",,,,,,,,,,,,,,
4151,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the STARTING state of the SLEE, false otherwise.",,,,,,,,,,,
4152,"javax.slee.management.SleeState","isRunning",,"Pfd2","Method","1487",,,,,,,,,,,,,,
4153,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the RUNNING state of the SLEE, false otherwise.",,,,,,,,,,,
4154,"javax.slee.management.SleeState","isStopping",,"Pfd2","Method","1886",,,,,,,,,,,,,,
4155,,,"4","Pfd2","Assertion",,,"Low","Returns true if this object represents the STOPPING state of the SLEE, false otherwise.",,,,,,,,,,,
4156,"javax.slee.management.SleeState","equals",,"Pfd2","Method","4157",,,,,,,,,,,,,,
4157,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is an instance of this class representing the same SLEE state as this, false otherwise.",,,"Test4144Test",,,"Two SleeState objects, check equality.","Cath","Complete",,,
4158,"javax.slee.management.SleeState","hashCode",,"Pfd2","Method","4159",,,,,,,,,,,,,,
4159,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code value.",,,"Test4144Test",,,"Ensure no exception thrown.","Cath","Complete",,,
4160,"javax.slee.management.SleeState","toString",,"Pfd2","Method","4161",,,,,,,,,,,,,,
4161,,,"3","Pfd2","Assertion",,,"Low","Returns the textual representation of the SLEE state object.",,,"Test4144Test",,,"Ensure no exception thrown and returned string is non-null.","Cath","Complete",,,
4162,"javax.slee.management.SleeStateChangeNotification",,"1","Pfd2","Covered",1469,,,"This notification is emitted by a SleeManagementMBean object to indicate a change in the operational state of the SLEE.",,,,,,,,,,,
4163,,,"2 ","Pfd2","Assertion",,,"Low","The base type of all slee state change notifications is specified by the SleeManagementMBean.SLEE_STATE_CHANGE_NOTIFICATION_TYPE attribute.",,,,,,,,,,,
4164,"javax.slee.management.SleeStateChangeNotification","ctor",,"Pfd2","Impossible",,,,,,"Can't test contructor, as the first argument is a SleeProviderMBean, and there is no API for accessing a SleeProviderMBean directly.",,,,,,,,,
4165,,,"1","Pfd2","Assertion",,,"Low","Create a SleeStateChangeNotification to notify listeners of a change in the operational state of the SLEE.",,,,,,,,,,,
4166,,,"1","Pfd2","Assertion",,,"High","Notifications are broadcast after the SLEE has changed to the new state.",,,"SleeStateMachineTest",,,"Upon receiving each state change notification, check that the slee is not in the previous state using getCurrentState()","Matt","Complete",,,
4167,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if notificationSource, newState or oldState is null.",,,,,,,,,,,
4168,"javax.slee.management.SleeStateChangeNotification","getNewState",,"Pfd2","Method","4169",,,,,,,,,,,"Complete",,,
4169,,,"2 ","Pfd2","Assertion",,,"High","Returns the new operational state of the SLEE.",,,"SleeStateMachineTest","Transition: Stopped->Starting; Starting->Running; Running->Stopping; Stopping->Stopped; Starting->Stopping","Transition: Stopped->Starting; Starting->Running; Running->Stopping; Stopping->Stopped","Move the SLEE through each tested transition, and confirm that for each notification received, getNewState()  returns a valid SLEE state .","Matt","Complete",,,
4170,"javax.slee.management.SleeStateChangeNotification","getOldState",,"Pfd2","Method","4171",,,,,,,,,,,"Complete",,,
4171,,,"1","Pfd2","Assertion",,,"High","Get the state the SLEE was in before the change to the new state.",,,"SleeStateMachineTest","Transition: Stopped->Starting; Starting->Running; Running->Stopping; Stopping->Stopped; Starting->Stopping","Transition: Stopped->Starting; Starting->Running; Running->Stopping; Stopping->Stopped","Move the SLEE through each tested transition, and confirm that for each notification received, getOldState()  returns a valid SLEE state which is equal to the new state specified by the previous notification.","Matt","Complete",,,
4523,,,"2 ","Pfd2","Repeat","4171",,,"Returns: the old state",,,,,,,,,,,
4172,"javax.slee.management.SleeStateChangeNotification","toString",,"Pfd2","Method","4173",,,,,,,,,,,,,,
4173,,,"3","Pfd2","Assertion",,,"Low","Returns a string representation for this notification.",,,"SleeStateMachineTest",,,"Generate a SleeStateChangeNotification, receive it and call toString(), verify that no exception is thrown and that returned String is non-null.","Cath","Complete",,,
4174,"javax.slee.management.TraceLevelFilter",,"1","Pfd2","Assertion",,,"Low","Only trace notifications  of the specified level or greater are allowed through this filter.",,,"Test4174Test",,,"Create trace filter with specified level.  Create traces at, above and below level.  Verify that only at and above traces get through.","Cath","Complete",,,
4175,,,"2 ","Pfd2","Assertion",,,"Low","Notifications that are not instances of TraceNotification are suppressed by this filter.",,,,,,,,,,,
4176,"javax.slee.management.TraceLevelFilter","isNotificationEnabled",,"Pfd2","Method","4174",,,,,,,,,,,,,,
4177,,,"4","Pfd2","Assertion",,,"Low","Returns true if the notification should be delivered to notification listeners, false otherwise.",,,,,,,,,,,
4178,,,"4","Pfd2","Assertion",,,"Low","This method always returns false if notification is not an instance of TraceNotification.",,,,,,,,,,,
4179,"javax.slee.management.TraceNotification",,"1","Pfd2","Assertion",,,"Low","This notiification is emitted by a TraceMBean object when an installed component generates a trace message at a level high enough not to be filtered by the TraceMBean.",,,,,,,,,,,
4180,,,"2 ","Pfd2","Assertion",,,"Low","The notification type of all trace notifications is specified by the TraceMBean.TRACE_NOTIFICATION_TYPE attribute.",,,,,,,,,,,
4181,"javax.slee.management.TraceNotification","ctor",,"Pfd2","Impossible",,,,,,"Can't test contructor, as the first argument is a TraceMBean, and there is no API for accessing a TraceMBean directly.",,,,,,,,,
4478,,,"1","Pfd2","Assertion",,,"Low","Create a TraceNotification to notify listeners of a trace message",,,,,,,,,,,
4182,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if notificationSource, messageType, traceLevel or message is null.",,,,,,,,,,,
4183,,,"3.2","Pfd2","Assertion",,,"Low","java.lang.IllegalArgumentException - if traceLevel == Level.LEVEL_OFF.",,,,,,,,,,,
4184,"javax.slee.management.TraceNotification","getMessageType",,"Pfd2","Method","4185",,,,,,,,,,,,,,
4185,,,"2 ","Pfd2","Assertion",,,"Low","Returns the trace message type.",,,"Test4185Test",,,"Call method, verify that returned String is correct.","Cath","Complete",,,
4186,"javax.slee.management.TraceNotification","getMessageSource",,"Pfd2","Method","4187",,,,,,,,,,,,,,
4187,,,"2 ","Pfd2","Assertion",,,"Low","Returns the trace message source.",,,"Test4185Test",,,"Call method, verify that returned String is correct.","Cath","Complete",,,
4188,"javax.slee.management.TraceNotification","getLevel",,"Pfd2","Method","4189",,,,,,,,,,,,,,
4189,,,"2 ","Pfd2","Assertion",,,"Low","Returns the trace level of the trace message.",,,,,,"Call method, verify that returned Level is correct.",,,,,
4190,"javax.slee.management.TraceNotification","getCause",,"Pfd2","Method","4191",,,,,,,,,,,,,,
4191,,,"2 ","Pfd2","Assertion",,,"Low","Returns the cause for this trace notification, or null if there wasn't a cause.",,,"Test4185Test",,,"Call method, verify that null is returned.","Cath","Complete",,,
4192,"javax.slee.management.TraceNotification","equals",,"Pfd2","Method","4193",,,,,,,,,,,,,,
4193,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is an instance of this class and the message type, message source, trace level and message attributes of obj are the same as the corresponding attributes of this.",,,"Test4185Test",,,"Check two different TraceNotification objects for equality.  Check one object for equality with itself.","Cath","Complete",,,
4194,"javax.slee.management.TraceNotification","hashCode",,"Pfd2","Method","4195",,,,,,,,,,,,,,
4195,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code for this notification.",,,"Test4185Test",,,"Ensure no exception thrown.","Cath","Complete",,,
4196,"javax.slee.management.TraceNotification","toString",,"Pfd2","Method","4197",,,,,,,,,,,,,,
4197,,,"3","Pfd2","Assertion",,,"Low","Returns a string representation for this notification.",,,"Test4185Test",,,"Ensure no exception thrown and returned string is non-null.","Cath","Complete",,,
4198,"javax.slee.usage.UsageNotification",,"1","Pfd3","Covered","(many)",,,"This notification is emitted by an SbbUsageMBean object to indicate a counter-type usage parameter has been updated or a sample-type usage parameter has accumulated a new sample. ",,"covered by the UsageNoficiation tests, eg Test4203Test",,,,,,,,,
4199,,,"2 ","Pfd2","Assertion",,,"High","The notification type of all usage notifications is specified by the SbbUsageMBean.USAGE_NOTIFICATION_TYPE attribute. ",,,"Test4203Test",,,"Call UsageNotification.getType() and check that it returns SbbUsageMBean.USAGE_NOTIFICATION_TYPE","Matt","Updated",,,
4200,"javax.slee.usage.UsageNotification","ctor",,"Pfd2","Impossible",,,,,,"Can't test contructor, as the first argument is a UsageMBean, and there is no API for accessing a UsageMBean directly.",,,,,,,,,
4479,,,"1","Pfd2","Assertion",,,"Low","Create a UsageNotification containing the updated value of an SBB's usage parameter",,,,,,,,,,,
4201,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if notificationSource, serviceID, sbbID or paramName is null.",,,,,,,,,,,
4202,"javax.slee.usage.UsageNotification","getService",,"Pfd2","Method","4203",,,,,,,,,,,"Updated",,,
4203,,,"2 ","Pfd2","Assertion",,,"Low","Returns the component identifier of the Service whose SBB's usage parameter was updated.",,,"Test4203Test",,,"Register UsageNotification listener in the test.  Modify a usage parameter, when the notification is received check that getService returns the correct service ID.","Cath","Updated",,,
4204,"javax.slee.usage.UsageNotification","getSbb",,"Pfd2","Method","4205",,,,,,,,,,,"Updated",,,
4205,,,"2 ","Pfd2","Assertion",,,"Low","Returns the component identifier of the SBB whose usage parameter was updated.",,,"Test4203Test",,,"Register UsageNotification listener in the test.  Modify a usage parameter, when the notification is received check that getSbb returns the correct SBB ID.","Cath","Updated",,,
4206,"javax.slee.usage.UsageNotification","getUsageParameterName",,"Pfd2","Method","4207",,,,,,,,,,,"Updated",,,
4207,,,"2 ","Pfd2","Assertion",,,"Low","Returns the name of the usage parameter that was updated.",,,"Test4203Test",,,"As above, but that getParameterName() returns the correct name.","Cath","Updated",,,
4627,"javax.slee.usage.UsageNotification","getUsageParameterSetName",,"Pfd3","Method","4628",,,,,,,,,,,,,,
4628,,,"2 ","Pfd3","Assertion",,,"Low","Returns: the name of the usage parameter set, or null if the usage parameter was a member of the unnamed usage parameter set for the SBB.",,,"Test4203Test",,,"Check for the named and unnamed cases.","Matt","Updated",,,
4629,"javax.slee.usage.UsageNotification","isCounter",,"Pfd3","Method","4630",,,,,,,,,,,,,,
4630,,,,"Pfd3","Assertion",,,"Low","Returns: true if the usage parameter updated is counter-type, false if the usage parameter updated is sample-type. ",,,"Test4203Test",,,"Check for both counter and sample parameter types","Matt","Updated",,,
4208,"javax.slee.usage.UsageNotification","getValue",,"Pfd2","Method","4209",,,,,,,,,,,"Updated",,,
4209,,,"2 ","Pfd2","Assertion",,,"Low","Returns the new value of the usage parameter.",,,"Test4203Test",,,"As above, but that getValue() returns the correct value.","Cath","Updated",,,
4210,"javax.slee.usage.UsageNotification","equals",,"Pfd2","Method","4211",,,,,,,,,,,"Updated",,,
4211,,,"4","Pfd2","Assertion",,,"Low","Returns:  true if obj is an instance of this class and the Service identifier, SBB identifier, usage parameter set name, and usage parameter name attributes of obj are the same as the corresponding attributes of this.",,,"Test4203Test",,,"Check that equals() returns true when called with itself, true for a notification with the same relevant attributes, and false if any of the relevant attributes differ.","Matt","Updated",,,
4212,"javax.slee.usage.UsageNotification","hashCode",,"Pfd2","Method","4213",,,,,,,,,,,"Updated",,,
4631,,,,"Pfd3","Assertion",,,"Low","The hash code is the logical XOR of the hash codes of the Service identifier, the SBB identifier, and the usage parameter name.",,,"Test4203Test",,,"Call method, check the return value.","Matt","Updated",,,
4213,,,"3","Pfd2","Covered","4631",,,"Returns a hash code for this notification.",,,,,,,,,,,
4214,"javax.slee.usage.UsageNotification","toString",,"Pfd2","Method","4215",,,,,,,,,,,"Updated",,,
4215,,,"3","Pfd2","Assertion",,,"Low","Returns a string representation for this notification.",,,"Test4203Test",,,"Call method, verify that exception is not thrown and that returned String is non-null.","Cath","Updated",,,
4216,"javax.slee.usage.UsageOutOfRangeFilter",,"1","Pfd2","Assertion",,,"Low","A notification filter that only allows through UsageNotifications where the Service component identifier, SBB component identifier and the usage parameter name match specified values, and the value of the usage paramater contained in the notification falls outside a specified range.",,,"UsageOutOfRangeFilterTest",,,"Checks that noficiations with matching Service id, Sbb id and parameter name are received, and that notifications without matching Service id, Sbb id or parameter name are supressed. Checks that notifications with samples that are in the specified range are blocked,  and that notifications with samples that are outside of the specified range are delivered.","Matt","Complete",,,
4217,,,"2 ","Pfd2","Assertion",,,"Low","If the notification contains usage information for some other Service, SBB or usage parameter, or the value of the usage parameter falls within the specified range, the notification is suppressed.",,,"UsageOutOfRangeFilterTest",,,"Checks that noficiations with matching Service id, Sbb id and parameter name are received, and that notifications without matching Service id, Sbb id or parameter name are supressed. Checks that notifications with samples that are in the specified range are blocked,  and that notifications with samples that are outside of the specified range are delivered.","Matt","Complete",,,
4218,,,"3","Pfd2","Assertion",,,"Low","Notifications that are not instances of UsageNotification are suppressed by this filter.",,,"UsageOutOfRangeFilterTest",,,"Checks that notifications which are not UsageNoficiations are supressed, by registering a listener and filter with the TraceNoficiationMBean  and firing trace messages.","Matt","Complete",,,
4219,"javax.slee.usage.UsageOutOfRangeFilter","ctor",,"Pfd2","Method","4480",,,,,,,,,,,,,,
4480,,,"1","Pfd2","Context",,,,"Create a UsageOutOfRangeFilter",,,,,,,,,,,
4220,,,"3,1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if service, sbb, or paramName is null.",,,"UsageOutOfRangeFilterTest",,,"Tries to create a UsageOutOfRangeFilter will null arguments.","Matt","Complete",,,
4221,,,"3.2","Pfd2","Assertion",,,"Low","InvalidArgumentException - if highValue < lowValue.",,,"UsageOutOfRangeFilterTest",,,"Tries to create a UsageOutOfRangeFilter with a low value higher than the high value.","Matt","Complete",,,
4222,"javax.slee.usage.UsageOutOfRangeFilter","isNotificationEnabled",,"Pfd2","Method","4480",,,,,,,,,,,,,,
4223,,,"4","Pfd2","Covered","4216,4217",,,"Returns true if the notification should be delivered to notification listeners, false otherwise.",,,,,,,,,,,
4224,,,"4","Pfd2","Covered","4218",,,"This method always returns false if notification is not an instance of UsageNotification.",,,,,,,,,,,
4225,"javax.slee.usage.UsageThresholdFilter",,"1","Pfd2","Assertion",,,"Low","A notification filter that only allows through UsageNotifications where the Service component identifier, SBB component identifier and the usage parameter name match specified values, and the value of the usage paramater has crossed a specified threshold (in either direction).",,,"UsageThresholdFilterTest",,,"Checks that noficiations with matching Service id, Sbb id and parameter name are received, and that notifications without matching Service id, Sbb id or parameter name are supressed. Checks that notifications which represent a cross in the specified threshold are delivered, and that all other notifications are blocked.","Matt","Complete",,,
4226,,,"2 ","Pfd2","Context",,,,"Each time a usage notification is seen for the specified usage parameter the current value of the usage parameter is stored.",,,,,,,,,,,
4632,,,,"Pfd3","Covered","4225",,,"If the previous value and the current value lie on opposite sides of the threshold, the notification is passed to notification listeners.",,,,,,,,,,,
4633,,,,"Pfd3","Covered","4225",,,"If the previous value was equal to the threshold value, the notification is only passed to notification listeners if the direction on the real axis from the previous value to the current value is the same as the approach made to the threshold value. ",,,,,,,,,,,
4634,,,,"Pfd3","Covered","4225",,,"For example, if the threshold value is set to 10, and three usage notifications with the values 9, 10, and 9 respectively are generated by the SLEE, this notification filter would not pass any of the usage notifications to notification listeners as the threshold has not been crossed. ",,,,,,,,,,,
4635,,,,"Pfd3","Covered","4225",,,"However if three usage notifications with the values 9, 10, and 11 respectively are generated by the SLEE, this notification filter would pass only the last usage notification to notification listeners, as this represents the point when the threshold has been crossed.",,,,,,,,,,,
4636,,,,"Pfd3","Covered","4225",,,"In any other situation where the threshold value is not crossed, the notification is suppressed. ",,,,,,,,,,,
4227,,,"3","Pfd2","Assertion",,,"Low","If the notification contains usage information for some other Service, SBB or usage parameter, it is also suppressed.",,,"UsageThresholdFilterTest",,,"Checks that noficiations with matching Service id, Sbb id and parameter name are received, and that notifications without matching Service id, Sbb id or parameter name are supressed. Checks that notifications which represent a cross in the specified threshold are delivered, and that all other notifications are blocked.","Matt","Complete",,,
4228,,,"4","Pfd2","Assertion",,,"Low","Notifications that are not instances of UsageNotification are suppressed by this filter.",,,"UsageThresholdFilterTest",,,"Checks that notifications which are not UsageNoficiations are supressed, by registering a listener and filter with the TraceNoficiationMBean and firing trace messages.","Matt","Complete",,,
4229,"javax.slee.usage.UsageThresholdFilter","ctor",,"Pfd2","Method","4481",,,,,,,,,,,,,,
4481,,,"1","Pfd2","Context",,,,"Create a UsageThresholdFilter",,,,,,,,,,,
4230,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if service, sbb or paramName is null.",,,"UsageThresholdFilterTest",,,"Tries to create a UsageThresholdFilter will null arguments.","Matt","Complete",,,
4231,"javax.slee.usage.UsageThresholdFilter","isNotificationEnabled",,"Pfd2","Method","4481",,,,,,,,,,,,,,
4232,,,"4","Pfd2","Covered","4225",,,"Returns true if the notification should be delivered to notification listeners, false otherwise.",,,,,,,,,,,
4233,,,"4","Pfd2","Covered","4228",,,"This method always returns false if notification is not an instance of UsageNotification.",,,,,,,,,,,
4234,"javax.slee.usage.UsageUpdatedFilter",,"1","Pfd2","Assertion",,,"Low","A notification filter that only allows through UsageNotifications where the Service component identifier, SBB component identifier and the usage parameter name match specified values. If the notification contains usage information for some other SBB or usage parameter, the notification is suppressed. ",,,"UsageUpdatedFilterTest",,,"Checks that noficiations with matching Service id, Sbb id and parameter name are received, and that notifications without matching Service id, Sbb id or parameter name are supressed.","Matt","Complete",,,
4235,,,"2 ","Pfd2","Assertion",,,"Low","Notifications that are not instances of UsageNotification are suppressed by this filter.",,,"UsageUpdatedFilterTest",,,"Checks that notifications which are not UsageNoficiations are supressed,  by registering a listener and filter with the TraceNoficiationMBean  and firing trace messages.","Matt","Complete",,,
4236,"javax.slee.usage.UsageUpdatedFilter","ctor",,"Pfd2","Method","4482",,,,,,,,,,,,,,
4482,,,"1","Pfd2","Context",,,,"Create a UsageUpdatedFilter",,,,,,,,,,,
4237,,,"3","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if service, sbb or paramName is null.",,,"UsageUpdatedFilterTest",,,"Try to create a UsageUpdatedFilter with null arguments","Matt","Complete",,,
4238,"javax.slee.usage.UsageUpdatedFilter","isNotificationEnabled",,"Pfd2","Method","4482",,,,,,,,,,,,,,
4239,,,"4","Pfd2","Covered","4234",,,"Returns true if the notification should be delivered to notification listeners, false otherwise.",,,,,,,,,,,
4240,,,"4","Pfd2","Covered","4235",,,"This method always returns false if notification is not an instance of UsageNotification.",,,,,,,,,,,
4241,"javax.slee.nullactivity.NullActivity",,"1","Pfd2","Context",,,,"This interface is implemented by null activity objects.",,,,,,,,,,,
4242,,,"1","Pfd2","Context",,,,"Null activities can be used by SBBs that need to create an event channel and manage its lifecycle independent of other SLEE or resource adaptor activities.",,,,,,,,,,,
4243,"javax.slee.nullactivity.NullActivity","endActivity",,"Pfd2","Method","4244,4247",,,,,,,,,,,"Complete",,,
4244,,,,"Pfd2","Assertion",,,"High","End the null activity",,,"Test4244Test",,,"Call nullActivity.endActivity(), then try to fire an event on the nullActivity.  An exception should be raised.","Cath","Complete",,,
4245,,,"1","Pfd2","Assertion",,,"Low","If the null activity is already ending (or has already ended) this method has no further effect.",,,,,,,,,,,
4246,,,"2 ","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4247,,,"2 ","Pfd2","Assertion",,,"High","This null activity will only end if the transaction invoking this method  commits successfully.",,,"Test4244Test",,,"Call nullActivity.endActivity(), then mark the transaction for rollback.  Ensure the activity can still be accessed in a subsequent transaction - for example in a second event.","Cath","Complete",,,
4248,,,"3.1","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4249,,,"3.2","Pfd2","Impossible",,,,"SLEEException - if the activity could not be ended due to a system-level failure.",,,,,,,,,,,
4250,"javax.slee.nullactivity.NullActivityContextInterfaceFactory",,"1","Pfd2","Context",,,,"The Null Activity Context Interface Factory is used by SBBs to obtain an ActivityContextInterface object for a null activity.",,,,,,,,,,,
4251,,,"2 ","Pfd2","Assertion",,,"Low","SBB JNDI Location: java:comp/env/slee/nullactivity/activitycontextinterfacefactory",,,,,,,,,,,
4252,"javax.slee.nullactivity.NullActivityContextInterfaceFactory","getActivityContextInterface",,"Pfd2","Method","4254",,,,,,,,,,,"Complete",,,
4253,,,"2 ","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4254,,,"4","Pfd2","Assertion",,,"High","Returns an ActivityContextInterface object that encapsulates the null activity.",,,"Test4244Test",,,"Call NullActivityContextInterfaceFactory.getActivityContextInterface(nullActivity) and ensure that a non-null non-exception is returned that can have the SBB attached to it.","Cath","Complete",,,
4255,,,"5.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if activity is null.",,,,,,,,,,,
4256,,,"5.2","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4257,,,"5.3","Pfd2","Assertion",,,"Low","UnrecognizedActivityException - if activity is not a valid null activity created by the SLEE.",,,,,,,,,,,
4258,,,"5.4","Pfd2","Impossible",,,,"FactoryException - if the ActivityContextInterface object could not be created due to a system-level failure.",,,,,,,,,,,
4259,"javax.slee.nullactivity.NullActivityFactory",,"1","Pfd2","Context",,,,"The Null Activity Factory is used by SBBs to create new null activities.",,,,,,,,,,,
4260,,,"2 ","Pfd2","Assertion",,,"Low","SBB JNDI Location: java:comp/env/slee/nullactivity/factory",,,,,,,,,,,
4261,"javax.slee.nullactivity.NullActivityFactory","createNullActivity",,"Pfd2","Method","4447,4263",,,,,,,,,,,"Complete",,,
4447,,,"1","Pfd2","Assertion",,,"High","Creates a new null activity.",,,"Test4447Test",,,"Invoke the method twice, and check that the return values are (a) not null, and (b) not equal","Cath","Complete",,,
4262,,,"2 ","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4263,,,"2 ","Pfd2","Assertion",,,"High","The null activity will only be created if the transaction invoking this method commits successfully.",,"Test the successful commit case (the roll back case is covered by 4464).","Test4263Test","TXN is committed; TXN is rolled back","TXN is committed","Fire an event to an SBB.  In the event handler create a NullActivity and fire an event on it.  Verify that the event is received.","Cath","Complete",,,
4464,,,"2 ","Pfd2","Implied",4263,,"High","[Implied by 4263:] If the transaction in which createNullActivity() is invoked is rolled back, the null activity is never created; therefore it cannot end, and no ActivityEndEvent should be delivered for it.",,"The Sbb defines the ActivityEndEvent as an initial event. In an event handler method, the Sbb calls NullActivityFactory.createNullActivity() then calls setRollbackOnly(). The test fails if an ActivityEndEvent is delivered for the NullActivity, and passes if no such event is received for the activity within a reasonable length of time (set as a test parameter).","Test4464Test",,,"Declare ActivityEndEvent to be an initial event for an SBB.  Fire another event to the SBB and in that event handler create a NullActivity and call setRollbackOnly().  Check that no ActivityEndEvent is received for the NullActivity that was created (within the test timeout).","Nick,Matt","Complete",,,
4264,,,"3.1","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4265,,,"3.2","Pfd2","Impossible",,,,"FactoryException - if the null activity could not be created due to a system-level failure.",,,,,,,,,,,
4266,"javax.slee.profile.AddressProfileCMP",,"1","Pfd2","Ap Req",,,"High","This interface must be used as is or extended for profile specifications that will be used for a Service's Address Profile Table.",,,"Test4266Test",,,"Create SBB that has a single address profile specification, using the default SLEE address profile specification, verify that this loads.","Cath","Complete",,,
4267,"javax.slee.profile.AddressProfileCMP","getAddresses",,"Pfd2","Method","4268",,,,,,,,,,,,,,
4268,,,"2 ","Pfd2","Assertion",,,"High","Returns the addresses for this profile.",,,"Test4266Test",,,"Test in conjunction with 4270 - set and verify that set addresses are returned by get.","Cath","Complete",,,
4269,"javax.slee.profile.AddressProfileCMP","setAddresses",,"Pfd2","Method","4270,4271",,,,,,,,,,,,,,
4270,,,"2 ","Pfd2","Covered","4268",,,"Sets  the addresses for this profile.",,"See notes for 4268",,,,,,,,,
4271,"javax.slee.profile.ProfileActivity",,"1","Pfd2","Removed",,,,"This interface is implemented by profile removed events generated by ProfileProvisioningMBean objects when a profile is removed from a profile table.",,,"Test4271Test",,,"Receive a profile removed event, verify that the Activity object the event was fired on implements ProfileTableActivity.","Cath","Removed",,,
4272,"javax.slee.profile.ProfileActivity","getProfile",,"Pfd2","Method","4273",,,,,,,,,,,,,,
4273,,,"2 ","Pfd2","Removed",,,,"Returns the profile identifier of the profile corresponding to this activity.",,,"Test4273Test",,,"Retrieve a ProfileActivity object via the ProfileFacility, then call ProfileFacility.getProfile() and verify that the received ProfileID matches the first profile ID.","Cath","Removed",,,
4274,"javax.slee.profile.ProfileActivityContextInterfaceFactory",,"1","Pfd2","Removed",,,,"The Profile Activity Context Interface Factory is used by SBBs to obtain an ActivityContextInterface object for a profile activity.",,,,,,,,,,,
4275,,,"2 ","Pfd2","Removed",,,,"SBB JNDI Location: java:comp/env/slee/facilities/profileactivitycontextinterfacefactory",,,,,,,,,,,
4276,"javax.slee.profile.ProfileActivityContextInterfaceFactory","getActivityContextInterface",,"Pfd2","Removed",,,,,,,,,,,,,,,
4277,,,"2 ","Pfd2","Removed",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4278,,,"4","Pfd2","Removed",,,,"Returns an ActivityContextInterface object that encapsulates the profile activity.",,,"Test4278Test",,,"Get the PACIF, get a ProfileActivity, retrieve the ACI for the ProfileActivity.","Cath","Removed",,,
4279,,,"5.1","Pfd2","Removed",,,,"java.lang.NullPointerException - if activity is null.",,,,,,,,,,,
4280,,,"5.2","Pfd2","Removed",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4281,,,"5.3","Pfd2","Removed",,,,"UnrecognizedActivityException - if activity is not a valid profile activity created by the SLEE.",,,,,,,,,,,
4282,,,"5.4","Pfd2","Removed",,,,"FactoryException - if the ActivityContextInterface object could not be created due to a system-level failure.",,,,,,,,,,,
4283,"javax.slee.profile.ProfileAddedEvent",,"1","Pfd2","Assertion",,,"High","This interface is implemented by profile added events generated by ProfileProvisioningMBean objects when a profile is added to a profile table.",,,"Test4283Test",,,"Add a profile, verify that the ProfileAddedEvent generated implements this interface.","Cath","Complete",,,
4284,,,"2 ","Pfd2","Assertion",,,"Low","The event type name of profile added events is ""javax.slee.profile.ProfileAddedEvent"".",,,,,,,,,,,
4285,"javax.slee.profile.ProfileAddedEvent","getProfile",,"Pfd2","Method","4286",,,,,,,,,,,,,,
4286,,,"2 ","Pfd2","Assertion",,,"High","Returns the profile identifier for the profile that was added.",,,"Test4283Test",,,"Add a profile, send ProfileAddedEvent.getProfile() to the TCK, verify that the ID returned is equal to the ID that had ap rofile added to it in the TCK via management interfcae.","Cath","Complete",,,
4287,"javax.slee.profile.ProfileAddedEvent","getProfileTableAddress",,"Pfd2","Removed",,,,,,,,,,,,,,,
4288,,,"2 ","Pfd2","Removed",,,,"Returns the address of the profile table to which the profile was added.",,,"Test4283Test",,,"Add a profile, send result of getProfileTableAddress (if Serializable) to the TCK.  Verify that the address is correct.","Cath","Removed",,,
4753,"javax.slee.profile.ProfileAddedEvent","getProfileAddress",,"Pfd3","Method","4754",,,,,,,,,,,,,,
4754,,,"1","Pfd3","Assertion",,,"High","Get the address of the profile that was added. ",,,"Test4283Test",,,"Add a profile, send result of getProfileAddress to the TCK.  Vefiry that the address is (profile table name)/(profile name). ","Matt","Complete",,,
4755,,,"1","Pfd3","Assertion",,,"High","The address plan of this address is AddressPlan.SLEE_PROFILE.",,,"Test4283Test",,,"Add a profile, send result of getProfileAddress to the TCK.  Vefiry that the address plan of the returned address is AddressPlan.SLEE_PROFILE. ","Matt","Complete",,,
4598,"javax.slee.profile.ProfileAddedEvent","getAddedProfile",,,"Method","4599",,,,,,,,,,,,,,
4599,,,,,"Covered","2069",,,"Get the committed state of the profile that was added.  ",,,,,,,,,,,
4615,,,,,"Covered","2069",,,"The actual type of the return value is the Profile CMP interface defined by the profile specification of the profile table in which the profile resides, and may be safely typecast using the normal Java typecast mechanism.",,,,,,,,,,,
4600,,,,,"Ap Recom",,,,"The object returned from this method is only valid within the event-handler transaction in which the event was delivered to an SBB entity",,"There's no indication of expected SLEE behaviour where the object is used in another transaction.  This assertion only mandates that an SBB should not reuse the returned Object in another transaction.",,,,,,,,,
4601,,,,,"Covered","2069",,,"Returns the committed state of the profile that was added.",,,,,,,,,,,
4289,"javax.slee.profile.ProfileFacility",,"2 ","Pfd2","Assertion",,,"Low","SBB JNDI Location: java:comp/env/slee/facilities/profile",,,,,,,,,,,
4463,"javax.slee.profile.ProfileFacility","getProfiles",,"Pfd3","Method","4448,4457,4449",,,,,,,,,,,"Complete",,,
4448,,,"1","Pfd3","Assertion",,,"High","Get a Collection of ProfileID objects that identify the profiles contained in the specified profile table.  The collection returned is immutable.  Any attemp to modify it, either directly or indirectly will result in a javax.lang.UnsupportedOperationException being thrown.",,"(a) Test with zero/many profiles in the table. (b) Test with other non-empty profile tables of the same specification (check their profiles are not included)","facilities/profilefacility/ProfileFacilityTest-getProfilesIterator","Number of profiles in table: zero; many","Number of profiles in table: zero; many","For a profile table containing no rofiles and a profile table containing multiple profiles count the number of elements returned by the iterator.  Check that the number of elements correctly matches the number of profiles in the table.  Check that each element belongs to the correct table.","Nick","Complete",,,
4457,,,"2 ","Pfd3","Assertion",,,"High","Note: A profile identifier for the profile table's default profile will not be included in the collection iterated over by this method's return value as the default profile has no such identifier.",,,"Test4457Test",,,"Call getProfiles() and make sure the returned set is the size of the created profiles.  I.e. Create a single profile and ensure the set has only one profile in it..","Cath","Complete",,,
4449,,,"3","Pfd3","Impossible",,,,"This method is a required transactional method.",,"Untestable - does not modify state.",,,,,,,,,
4462,,,"4","Pfd3","Context",,,,"Param - profileTableName - the name of the profile table.",,,,,,,,,,,
4450,,,"5","Pfd3","Repeat",4448,,,"Returns a read-only Collection of ProfileID objects identifying the profiles contained in the specified profile table.",,,,,,,,,,,
4451,,,"5","Pfd3","Assertion",,,"High","The element type of the iterator is ProfileID. ",,"Use instanceof, or catch a ClassCastException while iterating.","facilities/profilefacility/ProfileFacilityTest-getProfilesIterator",,,"Iterate through an iterator returned by getProfiles(), cast each element to a ProfileID.  Check that no ClassCastException is received.","Nick","Complete",,,
4452,,,"5","Pfd3","Assertion",,,"High","The iterator will not support the Iterator.remove() operation.",,"Invoke remove() on the Iterator. Check that an UnsupportedOperationException is thrown, and that the profile has not been removed.","facilities/profilefacility/ProfileFacilityTest-exception",,,"Attempt to invoke remove() on the iterator.  Check that an upsupporteed operation exception is thrown.  Use the sbb's get profile cmp method to verify that the profile wasn't removed.","Nick","Complete",,,
4453,,,"6.1","Pfd3","Assertion",,,"High","throws NullPointerException if profileTableName is null",,,"facilities/profilefacility/ProfileFacilityTest-exception",,,"Invoke getProfiles() with a null profile table name.  Check that a NullPointerException is thrown","Nick","Complete",,,
4454,,,"6.2","Pfd3","Assertion",,,"High","throws UnrecognizedProfileTableNameException if a profile table with the specified  name does not exist.",,,"facilities/profilefacility/ProfileFacilityTest-exception",,,"Invoke getProfiles() with a non-existant table name. Check that an UnrecognizedTableNameException is thrown","Nick","Complete",,,
4455,,,"6.3","Pfd3","Impossible",,,,"Throws TransactionRolledbackLocalException if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
4456,,,"6.4","Pfd3","Impossible",,,,"throws FacilityException if the iterator could not be obtained due to a system-level failure.",,,,,,,,,,,
4290,"javax.slee.profile.ProfileFacility","getProfilesByIndexedAttribute",,"Pfd2","Method","4458,4292,4293,4294,4295,4299",,,,,,,,,,,,,,
4291,,,"1","Pfd2","Context",,,,"Get a Collection of ProfileID objects that identify the profiles contained in the specified profile table where the specified profile attribute is set to the specified value.  The collection returned is immutable.  Any attempt to modify it, either directly or indirectly, will result in a java.lang.UnsupportedOperationException being thrown.",,,,,,,,,,,
4458,,,"2 ","Pfd2","Covered","1650",,,"Note: The profile table's default profile is not considered when determining matching profiles as it has no profile identifier that can be included in the collection iterated over by this method's return value.",,"Assertion 1650 tests that the returned set of matching Profiles has size of 1 - so 4458 is covered by that test.",,,,,,,,,
4292,,,"3","Pfd2","Impossible",,,,"This method is a required transactional method.",,"Untestable - does not modify state.",,,,,,,,,
4293,,,"5","Pfd2","Covered",1384,,,"Returns a read-only Collection of ProfileID objects identifying the profiles contained in the specified profile table, where the specified attribute of each profile equals the specified value.",,,,,,,,,,,
4294,,,"5","Pfd2","Assertion",,,"High","The element type of the iterator is ProfileID.",,,"Test1384Test",,,"Verify that the items in the iterator are instances of ProfileID.","Cath","Complete",,,
4295,,,"5","Pfd2","Repeat","1394",,,"The iterator will not support the Iterator,remove() operation.",,,,,,,,,,,
4296,,,"6.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if any argument is null.",,,,,,,,,,,
4297,,,"6.2","Pfd2","Assertion",,,"Low","UnrecognizedProfileTableNameException - if a profile table with the specified name does not exist.",,,,,,,,,,,
4298,,,"6.3","Pfd2","Assertion",,,"Low","UnrecognizedAttributeException - if an attribute with the specified name is not defined in the profile specification for the specified profile table.",,,,,,,,,,,
4299,,,"6.4","Pfd2","Covered","1392",,,"AttributeNotIndexedException - if the specified attribute is not indexed in the profile specification for the specified profile table.",,"Covered by ProfileFacilityTest - repeat of 1392",,,,,,,,,
4300,,,"6.5","Pfd2","Removed",,,,"InvalidArgumentException - if the type of the supplied attribute value does not match the type of the specified indexed attribute.",,,,,,,,,,,
4602,,,,,"Assertion",,,"Low","AttributeTypeMismatchException - if the type of the supplied attribute value does not match the type of the specified indexed attribute.",,,,,,,,,,,
4301,,,"6.6","Pfd2","Impossible",,,,"TransactionRolledBackLocalException - if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
4302,,,"6.7","Pfd2","Impossible",,,,"FacilityException - if the iterator could not be obtained due to a system-level failure.",,,,,,,,,,,
4303,"javax.slee.profile.ProfileFacility","getProfileByIndexedAttribute",,"Pfd2","Method","4459,4304,4305",,,,,,,,,,,,,,
4459,,,"2 ","Pfd2","Assertion",,,"High","Note: The profile table's default profile is not considered when determining matching profiles as it has no profile identifier that can be returned by this method.",,,"Test4459Test",,,"Create profile, modify profile so that 'int' attribute is not at the default value.  Call getProfileByIndexedAttribute(int, 42), and verify that returned ProfileID has the correct profile name.","Cath","Complete",,,
4304,,,"3","Pfd2","Impossible",,,,"This method is a required transactional method.",,"Doesn't modify state.  Untestable.",,,,,,,,,
4305,,,"5","Pfd2","Covered","1383, 1386",,,"Returns the profile identifier for the first matching profile, or null if not matching profile was found.",,,,,,,,,,,
4306,,,"6.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if any attribute is null.",,,,,,,,,,,
4307,,,"6.2","Pfd2","Assertion",,,"Low","UnrecognizedProfileTableNameException - if a profile table with the specified name does not exist.",,,,,,,,,,,
4308,,,"6.3","Pfd2","Assertion",,,"Low","UnrecognizedAttributeException - if the specified attribute is not indexed in the profile specification for the specified profile table.",,,,,,,,,,,
4309,,,"6.4","Pfd2","Removed",,,,"InvalidArgumentException - if the type of the supplied attribute value does not match the type of the specified indexed attribute.",,,,,,,,,,,
4603,,,,,"Assertion",,,"Low","AttributeTypeMismatchException - if the type of the supplied attribute value does not match the type of the specified indexed attribute.",,,,,,,,,,,
4310,,,"6.5","Pfd2","Impossible",,,,"TransactionRolledBackLocalException - if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
4311,,,"6.6","Pfd2","Impossible",,,,"FacilityException - if the profile identifier could not be obtained due to a system-level failure.",,,,,,,,,,,
4312,"javax.slee.profile.ProfileFacility","getProfileTableActivity",,"Pfd2","Method","4313,4314",,,,,,,,,,,,,,
4313,,,"2 ","Pfd2","Impossible",,,,"This method is a required transactional method.",,"Untestable - doesn't modify state.",,,,,,,,,
4314,,,"4","Pfd2","Repeat",1397,,,"Returns a ProfileTableActivity object for the profile table.",,,,,,,,,,,
4315,,,"5.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if profileTableName is null.",,,,,,,,,,,
4316,,,"5.2","Pfd2","Assertion",,,"Low","UnrecognizedProfileTableNameException - if a profile table with the specified name does not exist.",,,,,,,,,,,
4317,,,"5.3","Pfd2","Impossible",,,,"TransactionRolledBackLocalException - if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
4318,,,"5.4","Pfd2","Impossible",,,,"FacilityException - if the activity could not be obtained due to a system-level failure.",,,,,,,,,,,
4319,"javax.slee.profile.ProfileFacility","getProfileActivity",,"Pfd2","Removed",,,,,,,,,,,,,,,
4320,,,"2 ","Pfd2","Removed",,,,"This method is a required transactional method.",,"Untestable - doesn't modify state.",,,,,,,,,
4321,,,"4","Pfd2","Removed",,,,"Returns a ProfileActivity object for the profile.",,,,,,,,,,,
4322,,,"5.1","Pfd2","Removed",,,,"java.lang.NullPointerException - if profileID is null.",,,,,,,,,,,
4323,,,"5.2","Pfd2","Removed",,,,"UnrecognizedProfileTableNameException - if a profile table with the specified name does not exist.",,,,,,,,,,,
4324,,,"5.3","Pfd2","Removed",,,,"UnrecognizedProfileNameException - if a profile with the name given in the profile identifier does not exist within the profile table.",,,,,,,,,,,
4325,,,"5.4","Pfd2","Removed",,,,"TransactionRolledBackLocalException - if this method was invoked without a valid transaction context and the transaction started by this method failed to commit.",,"We never have a guaranteed 'non-transactional' context to test from, and have no means to force a roll back even if we detect no transaction.",,,,,,,,,
4326,,,"5.5","Pfd2","Removed",,,,"FacilityException - if the activity could not be obtained due to a system-level failure.",,,,,,,,,,,
4327,"javax.slee.profile.ProfileManagement",,"1","Pfd2","Ap Req",,,"Low","This interface must be implemented by a Profile Management Abstract Class if a profile specification includes such a class.",,,,,,,,,,,
4328,"javax.slee.profile.ProfileManagement","profileInitialize",,"Pfd2","Method","4329,4330,4331,4332,4333",,,,,,,,,,,,,,
4329,,,"1","Pfd2","Covered","924",,,"The SLEE invokes this operation once the persistence representation for the profile has been created.",,,,,,,,,,,
4330,,,"1","Pfd2","Assertion",,,"High","The profile may initialize its transient or CMP fields during this method.",,,"CheckInitializeProfileTest",,,"In profileInitialize set the value of a CMP field and the value of a transient field.  In profileStore save the value of the transient field to a CMP field so it can be retrieved later.  After the profile table is created check that both CMP fields are correctly initialized","Nick","Complete",,,
4331,,,"1","Pfd2","Covered","924, 926",,,"This method is only invoked once for each profile table that is created, and provides the initial values for the profile table's default profile.",,"That the method is invoked only once is demonstrated by the fact that new profiles take their initial state from the default profile, not from profileInitialize and that each profile table has its own default profile",,,,,,,,,
4332,,,"2 ","Pfd2","Covered","4330",,,"This method is invoked with an active transaction context.",,"By updating the CMP field we prove that the method has an active tx context",,,,,,,,,
4333,,,"2 ","Pfd2","Assertion",,,"High","The SLEE follows a call to this method with a call to profileStore() and profileVerify() in the same transaction.",,"Test that state changes made by each method are visible to the next method.  By throwing an exceptionprofileVerify to signal to the test that the correct values were not seen in profileVerify.","Test4333Test",,,"In profileInitialize set the value of a CMP field to a valid value.  In profileStore copy this to a second CMP field.  In profileVerify throw a verification exception unless the value of both CMP fields is correct.  Check that the profile can be created without errors.","Nick","Complete",,,
4334,"javax.slee.profile.ProfileManagement","profileLoad",,"Pfd2","Method","4337",,,,,,,,,,,,,,
4335,,,"1","Pfd2","Covered","4337",,,"The SLEE invokes this method on a profile when the state of the profile object needs to be synchronized with the state in the underlying data source.",,"This is actually covered by 4337 - it sets a field in profileLoad() and checks that it has been set after profileLoad() returns.  Can't return test pass directly from profileLoad() - Transaction stuff gets tied in a knot - so the only way to test is by setting ProfileCMP value in profileLoad() and verifying it's there afterwards.",,,,,,,,,
4336,,,"1","Pfd2","Ap Recom",,,,"The profile object should reload from CMP fields any transient state that depends on the state stored in those CMP fields.",,,,,,,,,,,
4337,,,"2 ","Pfd2","Assertion",,,"High","This method is invoked with an active transaction context.",,"Test for an active transaction context by updating a CMP field, which requires an active transaction context","CheckProfileLoadTest",,,"Implement a profileLoad method in the profile management abstract class that updates a CMP field.  Create a profile from the profile spec and force creation of a transactional context by invoking editProfile.  The SLEE will invoke profileLoad.  Check that the CMP field was successfully updated","Nick","Complete",,,
4338,"javax.slee.profile.ProfileManagement","profileStore",,"Pfd2","Method","4339,4341",,,,,,,,,,,,,,
4339,,,"1","Pfd2","Covered","1024",,,"The SLEE invokes this operation when the state of the underlying data source needs to be sychronised with the state of the profile.",,,,,,,,,,,
4340,,,"1","Pfd2","Ap Recom",,,,"The profile object should store into CMP fields any transient state that depends on the state stored in those CMP fields.",,,,,,,,,,,
4341,,,"2 ","Pfd2","Covered","1018, 1024",,,"This method is invoked with an active transaction context.",,"The CheckProfileStoreTest test updates CMP fields from profileStore, which requires an active transaction context",,,,,,,,,
4342,"javax.slee.profile.ProfileManagement","profileVerify",,"Pfd2","Method","4343",,,,,,,,,,,"Complete",,,
4343,,,,"Pfd2","Assertion",,,"High","The SLEE invokes this operation in response to a request by the Administrator to commit any changes made to the profile.",,,"ProfileVerificationTest",,,"Implement a verifyProfile() method that will set a flag in an instance field when invoked.  Make changes to a profile and nvoke the MBean's commitProfile() method.  Check the status of the flag after commitProfile() returns.","Nick","Complete",,,
4344,,,,"Pfd2","Ap Recom",,,,"The profile object should verify that the contents of its CMP fields at exit from this method form a valid configuration for SBB instances.  If not, a ProfileVerificationException should be thrown.",,,,,,,,,,,
4345,,,,"Pfd2","Self-Evident",,,,"ProfileVerificationException - if the profile fails any verification check.",,,,,,,,,,,
4346,"javax.slee.profile.ProfileManagement","markProfileDirty",,"Pfd2","Method",,,,,,,"Test4346Test",,,"Create service with profile. Mark profile dirty during profileinitiialize, verify that it doesn't throw exception, set attr if no exception thrown.  Edit profile, verify that attr is at the success value.  Return test pass/faile.","Cath","Complete",,,
4347,,,"1","Pfd2","Covered",1032,,,"Mark the profile as being dirty, i.e. that is has been modified since it was last committed.",,,,,,,,,,,
4348,,,"1","Pfd2","Repeat","1033",,,"Modifying a CMP field automatically flags the profile as being dirty, so this method only needs to be called, for example, if transient state changes.",,,,,,,,,,,
4349,,,"2 ","Pfd2","Ap Req",,,"Low","An SBB Developer must not implement this operation.  It is implemented by the SLEE at deployment time.",,,,,,,,,,,
4350,,,"3","Pfd2","Impossible",,,,"This method must be invoked with a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4351,"javax.slee.profile.ProfileManagement","isProfileDirty",,"Pfd2","Method","4381",,,,,,,,,,,,,,
4352,,,"2 ","Pfd2","Ap Req",,,"Low","An SBB Developer must not implement this operation.  It is implemented by the SLEE at deployment time.",,,,,,,,,,,
4353,,,"3","Pfd2","Impossible",,,,"This method must be invoked with a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4354,,,"4","Pfd2","Covered",4381,,,"Returns true if the profile has been modified since last being committed, false otherwise.",,,,,,,,,,,
4355,"javax.slee.profile.ProfileManagement","isProfileValid",,"Pfd2","Method","4357",,,,,,,,,,,"Complete",,,
4356,,,"3","Pfd2","Impossible",,,,"This method must be invoked with a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4357,,,"4","Pfd2","Covered","1040",,,"Returns true if the profile referenced by the profile identifier currently exists, false otherwise.",,,,,,,,,,,
4358,,,"5.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if id is null.",,,,,,,,,,,
4359,,,"5.2","Pfd2","Impossible",,,,"SLEEException - if the profile identifier could not be validated due to a system-level failure.",,,,,,,,,,,
4483,,,"2 ","Pfd3","Ap Req",,,"Low","An SBB Developer must not implement this operation.  It is implemented by the SLEE at deployment time.",,,,,,,,,,,
4360,"javax.slee.profile.ProfileMBean",,"1","Pfd2","Covered","4362,4365,4371,4378,4381,4384",,,"This interface must be implemented by a Profile MBean Class generated by the SLEE for a profile specification.  This interface contains essential operations for managing the life cycle of Profile MBean objects.",,"editProfile(), closeProfile(), commitProfile(), restoreProfile(), isProfileDirty(), isProfileWritable() are all exercised by other tests",,,,,,,,,
4361,"javax.slee.profile.ProfileMBean","editProfile",,"Pfd2","Method","4362",,,,,,,,,,,,,,
4362,,,"1","Pfd2","Assertion",,,"High","Request that the client be granted read/write access to the profile so that it may be updated.  If the client already has read/write access to the profile, this method returns silently.",,,"ProfileUpdateTest","Profile state: read only; read/write","Profile state: read only; read/write","On a profile in read only state, call editProfile().  Verify that the profile is now in a read/write state by calling a setter method and using the getter method to verify that the field was updated.  Call editProfile()again to verify that no exception is thrown.","Nick","Complete",,,
4363,,,"2.1","Pfd2","Impossible",,,,"ManagementException - if the profile could not be opened in read/write mode due to a system-level failure.",,,,,,,,,,,
4364,"javax.slee.profile.ProfileMBean","commitProfile",,"Pfd2","Method","4365,4366,1946,4368",,,,,,,,,,,"Complete",,,
4365,,,"1","Pfd2","Assertion",,,"High","Reques tthat changes made to a profile be committed by the SLEE.  If this method returns successfully, the SLEE must again permit the client read-only access to the profile.",,,"ProfileStateTest",,,,"Nick","Complete",,,
4366,,,"2.1","Pfd2","Assertion",,,"High","InvalidStateException - if the clietn does not have reda/wirte access to the profile.",,,"ProfileStateTest","Profile state: read only","Profile state: read only","Invoke commitProfile on a profile in read only state.  Check that an InvalidStateException is thrown.","Nick","Complete",,,
4367,,,"2.2","Pfd2","Covered",1946,,,"ProfileVerificationException - if thrown by the ProfileManagement.profileVerify() callback method in the profile's Profile Manangement Abstract Class.  ",,,,,,,,,,,
4368,,,"2.2","Pfd2","Assertion",,,"High","This exception can also be thrown by the profile MBean if the deployment descriptor for the profile specification documents an indexed attribute as requiring unique values and a non-unique value has been supplied in the profile.",,,"ProfileVerification","Index type/values applied: non-unique/non-unique; unique/unique; unique/non-unique","Index type/values applied: non-unique/non-unique (no exception); unique/unique (no exception); unique/non-unique (should throw ProfileVerificationException)","For each combination of index type and values, edit the profile, set the values using the setter method and commit changes to the profile.  Check that a ProfileVerificationException is thrown only in the appropriate test cases.","Nick","Complete",,,
4369,,,"2.3","Pfd2","Impossible",,,,"ManagementException - if the commit operation could not be successfully completed due to a system-level  failure.",,,,,,,,,,,
4370,"javax.slee.profile.ProfileMBean","restoreProfile",,"Pfd2","Method","4371,4373,4374",,,,,,,,,,,"Complete",,,
4371,,,"1","Pfd2","Assertion",,,"High","Request that changes made to the profile should be discarded by the SLEE.  ",,,"ProfileUpdate","Profile states: read/write with no uncommitted changes; read/write state with uncommitted changes.","Profile states: read/write state with changes to discard.","Record the current value of an attribute in the profile.  Make a profile editable by invoking the editProfile() MBean method.  Update the attribute using a setter method.  Invoke restoreProfile().  Check that the original value of the attribute has been resoted.","Nick","Complete",,,
4372,,,"1","Pfd2","Optional",,,,"This method is typically invoked by a management client, but may also be invoked by the SLEE if a client session times out.",,,,,,,,,,,
4373,,,"1","Pfd2","Assertion",,,"High","If this method returns successfully, the SLEE must again permit the client read-only access to the profile.",,"Read only test case is covered by 4374","ProfileUpdateTest","Profile states: read/write; read only","Profile state: read/write","Make a read only profile editable by invoking the editProfile() MBean method.  Invoke restoreProfile().  Check that the profile is again in the read only state.","Nick","Complete",,,
4374,,,"2.1","Pfd2","Assertion",,,"High","javax.slee.InvalidStateException - if the client does not have read/write access to the profile.",,"Read/write test case is covered by 4373","ProfileStateTest","Profile states: read/write; read only","Profile state: read only","Invoke the editProfile() method on a read only profile.  Check that an InvalidStateException is thrown.","Nick","Complete",,,
4375,,,"2.2","Pfd2","Impossible",,,,"ManagementException - if the restore operation could not be successfully completed due to a system-level failure.",,,,,,,,,,,
4376,"javax.slee.profile.ProfileMBean","closeProfile",,"Pfd2","Method","4378",,,,,,,,,,,"Complete",,,
4377,,,"1","Pfd2","Ap Recom",,,,"Notify the SLEE that the profile is no longer required by the management client.  As the SLEE may subsequently deregister the profile from the MBean server if no other client is currently accessing a profile, a client that invokes this method should assume that the Object Name they had for the profile is no longer valid once this method returns.",,,,,,,,,,,
4378,,,"2.1","Pfd2","Assertion",,,"High","javax.slee.InvalidStateException - if the profile is in read-write mode and contains uncommitted changes.",,,"ProfileStateTest","Profile state: read/write with uncommitted changes; read/write without uncommitted changes","Profile state: read/write with uncommitted changes; read/write without uncommitted changes","For a profile in each state invoke closeProfile().  Check that an InvalidStateException is thrown only for the profile with uncommited changes","Nick","Complete",,,
4379,,,"2.2","Pfd2","Impossible",,,,"ManagementException - if the profile could not be closed by the SLEE due to a system-level failure.",,,,,,,,,,,
4380,"javax.slee.profile.ProfileMBean","isProfileDirty",,"Pfd2","Method","4381",,,,,,,,,,,"Complete",,,
4381,,,"2 ","Pfd2","Assertion",,,"High","Returns true if the profile has been modified in the current editing session, false if the profile hasn't been modified or the profil eis read-only to the client.",,,"ProfileState","Profile state: read only; read/write without modifications; read/write with uncommitted modifications","Profile state: read only (expected value FALSE); read/write without modifications (expected value FALSE); read/write with uncommitted modifications (expected value TRUE)","For a profile in each state test the return value of the isProfileDirty() method and check that the expected value is returned","Nick","Complete",,,
4382,,,"3.1","Pfd2","Impossible",,,,"ManagementException - if it could not be determined if the profile has been modified due to a system-level failure.",,,,,,,,,,,
4383,"javax.slee.profile.ProfileMBean","isProfileWriteable",,"Pfd2","Method","4384,4386",,,,,,,,,,,"Complete",,,
4384,,,"2 ","Pfd2","Assertion",,,"High","Returns true if the Profile MBean may be changed by the management client.",,,"ProfileStateTest","Profile state: read only; read/write","Profile state: read only (expected value FALSE); read/write (expected value TRUE)","For a profile in each state test the return value of the isProfileWritable() method and check that the expected value is returned","Nick","Complete",,,
4385,,,"3.1","Pfd2","Impossible",,,,"ManagementException - if the read-write status of the profile could not be interrogated due to a system-level failure.",,,,,,,,,,,
4386,"javax.slee.profile.ProfileRemovedEvent",,"1","Pfd2","Assertion",,,"High","This interface is implemented by profile removed events generated by ProfileProvisioningMBean objects when a profile is removed from a profile table.",,,"Test4386Test",,,"Remove a Profile, receive the ProfileRemovedEvent and verify that ProfileRemovedEvent is implemented.","Cath","Complete",,,
4387,,,"2 ","Pfd2","Assertion",,,"Low","The event type name of profile removed events is ""javax.slee.profile.ProfileRemovedEvent"".",,,,,,,,,,,
4388,"javax.slee.profile.ProfileRemovedEvent","getProfile",,"Pfd2","Method","4389",,,,,,,,,,,,,,
4389,,,"2 ","Pfd2","Assertion",,,"High","Returns the profile identifier for the profile that was removed.",,,"Test4386Test",,,"Remove a profile, call ProfileRemovedEvent.getProfile() send the ProfileID to the TCK and verify in the TCK that the correct ID was retrieved.","Cath","Complete",,,
4390,"javax.slee.profile.ProfileRemovedEvent","getProfileTableAddress",,"Pfd2","Removed",,,,,,,,,,,,,,,
4391,,,"2 ","Pfd2","Removed",,,,"Returns the address of the profile table from which the profile was removed.",,,"Test4386Test",,,"Remove a profile, call ProfileRemovedEvent.getProfileTableAddress() send to the TCK and verify that it's correct.","Cath","Removed",,,
4750,"javax.slee.profile.ProfileRemovedEvent","getProfileAddress",,"Pfd3","Method","4751",,,,,,,,,,,,,,
4751,,,"1","Pfd3","Assertion",,,"High","Get the address of the profile that was removed.",,,"Test4386Test",,,"Remove a profile, call ProfileRemovedEvent.getProfileAddress(), then vefiry that the address is (profile table name)/(profile name). ","Matt","Complete",,,
4752,,,"1","Pfd3","Assertion",,,"High","The address plan of this address is AddressPlan.SLEE_PROFILE. ",,,"Test4386Test",,,"Remove a profile, call ProfileRemovedEvent.getProfileAddress(), then vefiry that the address plan of the returned address is AddressPlan.SLEE_PROFILE. ","Matt","Complete",,,
4604,"javax.slee.profile.ProfileRemovedEvent","getRemovedProfile",,,"Method","4605",,,,,,,,,,,,,,
4605,,,,,"Repeat","2073",,,"Returns the committed state of the profile just before it was removed.",,,,,,,,,,,
4392,"javax.slee.profile.ProfileSpecificationDescriptor","getCMPInterfaceName",,"Pfd2","Method","4393",,,,,,,,,,,,,,
4393,,,"2 ","Pfd2","Assertion",,,"High","Returns the name of the profile specification's CMP interface.",,,"Test4393Test",,,"Get ProfileDescriptor, then cal lmethod and verify that correct CMP interface name is returned.","Cath","Complete",,,
4394,"javax.slee.profile.ProfileSpecificationID",,"1","Pfd2","Context",,,,"The ProfileSpecificationID interface is a marker interface implemented by every Java object that encapsulates profile specification component identity.",,,,,,,,,,,
4395,"javax.slee.profile.ProfileTableActivity","getProfileTableName",,"Pfd2","Method","4396",,,,,,,,,,,,,,
4396,,,"2 ","Pfd2","Assertion",,,"High","Returns the name of the profile table corresponding to this activity.",,,"Test4396Test",,,"Create ProfileTable with name Test4396Sbb.PROFILE_TABLE_NAME. Get ProfileTableActivity object, call getProfileTableName() and verify that it equals Test4396Sbb.PROFILE_TABLE_NAME.","Cath","Complete",,,
4397,"javax.slee.profile.ProfileTableActivityContextInterfaceFactory",,"1","Pfd2","Context",,,,"The Profile Table Activity Context Interface Factory is used by SBBs to obtain an ActivityContextInterface object for a profile table activity.",,,,,,,,,,,
4398,,,"2 ","Pfd2","Assertion",,,"Low","SBB JNDI Location: java:comp/env/slee/facilities/profiletableactivitycontextinterfacefactory",,,,,,,,,,,
4399,"javax.slee.profile.ProfileTableActivityContextInterfaceFactory","getActivityContextInterface",,"Pfd2","Method","4401",,,,,,,,,,,,,,
4400,,,"2 ","Pfd2","Impossible",,,,"This method is a mandatory transactional method.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4401,,,"4","Pfd2","Assertion",,,"High","Returns an ActivityContextInterface object that encapsulates the profile table activity.",,,"Test4283Test",,,"ProfileTableActivityContextInterfaceFactory.getActivityContextInterface(profileActivity).getActivity().equals(profileActivity)","Cath","Complete",,,
4402,,,"5.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if activity is null.",,,,,,,,,,,
4403,,,"5.2","Pfd2","Impossible",,,,"TransactionRequiredLocalException - if this method is invoked without a valid transaction context.",,"We never have a guaranteed 'non-transactional' context to test from.",,,,,,,,,
4404,,,"5.3","Pfd2","Assertion",,,"Low","UnrecognizedActivityException - if activity is not a valid null activity created by the SLEE.",,,,,,,,,,,
4405,,,"5.4","Pfd2","Impossible",,,,"FactoryException - if the ActivityContextInterface object could not be created due to a system-level failure.",,,,,,,,,,,
4406,"javax.slee.profile.ProfileUpdatedEvent",,"1","Pfd2","Self-Evident",,,,"This interface is implemented by profile updated events generated by ProfileMBean objects when a profile is updated.",,"Java type safety ensures this: the fact that it is delivered to an event handler which declares ProfileUpdatedEvent as an argument type implies that the event implements the interface.","Test4406Test",,,"Update a profile, receive the  ProfileUpdatedEvent, and verify that the ProfileUpdatedEvent does implement ProfileUpdatedEvent.","Cath","Removed",,,
4407,,,"2 ","Pfd2","Assertion",,,"Low","The event type name of profile updated events is ""javax.slee.profile.ProfileUpdatedEvent"".",,,,,,,,,,,
4408,"javax.slee.profile.ProfileUpdatedEvent","getProfile",,"Pfd2","Method","960",,,,,,,,,,,,,,
4409,,,"2 ","Pfd2","Repeat","960",,,"Returns the profile identifier for the profile that was updated.",,,"Test4406Test",,,"Update a profile, in the event handler call ProfileUpdatedEvent.getProfile() and send to the TCK.  Verify that the correct ProfileID in the TCK.","Cath","Removed",,,
4410,"javax.slee.profile.ProfileUpdatedEvent","getProfileAddress",,"Pfd2","Method","4411",,,,,,,,,,,,,,
4411,,,"2 ","Pfd2","Covered","922",,,"Returns the address of the profile that was updated.",,,"Test4406Test",,,"Update a profile.  In the event handler call getProfileAddress() and try to verify that the correct address is given.","Cath","Removed",,,
4606,"javax.slee.profile.ProfileUpdatedEvent","getBeforeUpdateProfile",,,"Method","4607",,,,,,,,,,,,,,
4607,,,,,"Repeat","2077",,,"Returns the committed state of the profile before it was updated.",,,,,,,,,,,
4608,"javax.slee.profile.ProfileUpdatedEvent","getAfterUpdateProfile",,,"Method","4609",,,,,,,,,,,,,,
4609,,,,,"Repeat","2077",,,"Returns the committed state of the profile after it was updated.",,,,,,,,,,,
4412,"javax.slee.profile.ResourceInfoProfileCMP",,"1","Pfd2","Assertion",,,"High","This interface must be used for profile specifications that will be used for a Service's Resource Info Profile Table.",,,"Test4412Test",,,"Create an SBB and a Service where the Service specifies the javax.slee.profile.ResourceInfoProfileCMP as its resource-info-profile-table element and verify that the DU installs and starts.","Cath","Complete",,,
4413,"javax.slee.profile.ResourceInfoProfileCMP","getInfo",,"Pfd2","Method","4414",,,,,,,,,,,,,,
4414,,,"2 ","Pfd2","Assertion",,,"Low","Gets the resource information.",,,,,,,,,,,
4415,"javax.slee.profile.ResourceInfoProfileCMP","setInfo",,"Pfd2","Method","4416",,,,,,,,,,,,,,
4416,,,"1","Pfd2","Assertion",,,"Low","Sets the resource information.",,,,,,,,,,,
4417,"javax.slee.profile.ProfileID",,,"Pfd2","Context",,,,"The ProfileID class defines an identifier that can be used to reference profiles.",,,,,,,,,,,
4418,"javax.slee.profile.ProfileID","ProfileID(String, String)",,"Pfd2","Method","4473",,,,,,,,,,,,,,
4473,,,"1","Pfd2","Assertion",,,"Low","Create a ProfileID object using a profile table name and profile name",,,,,,,,,,,
4419,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if either argument is null.",,,,,,,,,,,
4420,,,"3.2","Pfd2","Removed",,,,"InvalidArgumentException - if profileTableName includes the '/' character.",,,,,,,,,,,
4658,,,,,"Assertion",,,"Low","IllegalArgumentException - if profileTableName includes the '/' character",,,,,,,,,,,
4421,"javax.slee.profile.ProfileID","ProfileID(Address)",,"Pfd2","Method","4471",,,,,,,,,,,,,,
4471,,,"1",,"Assertion",,,"Low","Create a ProfileID object from an address",,,,,,,,,,,
4472,,,"1",,"Repeat","4423",,,"The address must have the address plan of AddressPlan.SLEE_PROFILE",,,,,,,,,,,
4422,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if address is null",,,,,,,,,,,
4423,,,"3.2","Pfd2","Removed",,,,"InvalidArgumentException - if the address plan if the address is not AddressPlan.SLEE_PROFILE, or the address string does not contain a profile identifier with the correct encoding: <profile-table-name</<profile-name>.",,,,,,,,,,,
4610,,,,,"Assertion",,,"Low","IllegalArgumentException - if the address plan if the address is not AddressPlan.SLEE_PROFILE, or the address string does not contain a profile identifier with the correct encoding: <profile-table-name</<profile-name>.",,,,,,,,,,,
4424,"javax.slee.profile.ProfileID","getProfileTableName",,"Pfd2","Method","4425",,,,,,,,,,,,,,
4425,,,"2 ","Pfd2","Assertion",,,"Low","Returns the name of the profile table referenced by this identifier.",,,,,,,,,,,
4426,"javax.slee.profile.ProfileID","getProfileName",,"Pfd2","Method","4427",,,,,,,,,,,,,,
4427,,,"2 ","Pfd2","Assertion",,,"Low","Returns the name of the profile referenced by this identifier.",,,,,,,,,,,
4428,"javax.slee.profile.ProfileID","setProfileID",,"Pfd2","Method","4470",,,,,,,,,,,,,,
4470,,,"1","Pfd2","Assertion",,,"Low","Set the profile table and profile referenced by this profile identifier to new values.",,,,,,,,,,,
4429,,,"3.1","Pfd2","Assertion",,,"Low","java.lang.NullPointerException - if either argument is null.",,,,,,,,,,,
4430,,,"3.2","Pfd2","Removed",,,,"InvalidArgumentException - if profileTableName includes the '/' character.",,,,,,,,,,,
4611,,,,,"Assertion",,,"Low","IllegalArgumentException - if profileTableName includes the '/' character.",,,,,,,,,,,
4431,"javax.slee.profile.ProfileID","toAddress",,"Pfd2","Method","4432",,,,,,,,,,,,,,
4432,,,"2 ","Pfd2","Assertion",,,"Low","Returns an Address object containing the address form of the profile identified by this profile identifier.",,,"Test4432Test",,,"Create Profile.  Call ProfieID.toAddress() and verify that returned Address is correct.","Cath","Complete",,,
4433,"javax.slee.profile.ProfileID","equals",,"Pfd2","Method","4434",,,,,,,,,,,,,,
4434,,,"4","Pfd2","Assertion",,,"Low","Returns true if obj is an instance of this class and the profile table name and profile name are equal.",,,"Test4432Test",,,"Create two Profiles, compare them.  Compare two identical profiles.","Cath","Complete",,,
4435,"javax.slee.profile.ProfileID","hashCode",,"Pfd2","Method","4436",,,,,,,,,,,,,,
4436,,,"3","Pfd2","Assertion",,,"Low","Returns a hash code for this profile identifier.",,,"Test4432Test",,,"Verify no exception is thrown.","Cath","Complete",,,
4437,"javax.slee.profile.ProfileID","toString",,"Pfd2","Method","4438",,,,,,,,,,,,,,
4438,,,"3","Pfd2","Assertion",,,"Low","Returns a string representation for this profile identifier.",,,"Test4432Test",,,"Verify no exception thhrown and non null return value.","Cath","Complete",,,
4439,"javax.slee.resource.ResourceAdaptorDescriptor","getResourceAdaptorTypes",,"Pfd2","Method","4440",,,,,,,,,,,,,,
4440,,,"2 ","Pfd2","Assertion",,,"Low","Returns the component identifier of the resource adaptor type that this resource adaptor implements.",,,,,,,,,,,
4441,"javax.slee.resource.ResourceAdaptorID",,"1","Pfd2","Context",,,,"The ResourceAdaptorID interface is a marker interface implemented by every Java object that encapsulates resource adaptor component identity.",,,,,,,,,,,
4442,"javax.slee.resource.ResourceAdaptorTypeDescriptor","getEventTypes",,"Pfd2","Method","4443",,,,,,,,,,,,,,
4443,,,"2 ","Pfd2","Assertion",,,"Low","Returns the component identifiers of the event types used by this resource adaptor type.",,,"Test4443Test",,,"Install DU containing resource adaptor type with a declared event.  Verify that getEventTypes() returns one event ID.","Cath","Complete",,,
4444,"javax.slee.resource.ResourceAdaptorTypeID",,"1","Pfd2","Context",,,,"The ResourceAdaptorTypeID interface is a marker interface implemented by every Java object that encapsulates resource adaptor type component identity.  A ResourceAdaptorTypeID object is also known as a resource adaptor type identifier.",,,,,,,,,,,
4637,"javax.slee.usage.SampleStatistics",,"1","Pfd3","Context",,,,"This interface provides basic statistical information for a sample-type SBB usage parameter. ",,,,,,,,,,,
4638,"javax.slee.usage.SampleStatistics","getSampleCount","1",,"Assertion",,,"Low","Get the number of samples recorded for the usage parameter since either the service was deployed or the usage parameter was last reset (whichever occurred most recently).",,,"SampleStatisticsTest","sample count: 0, 1, many","sample count: 0, 1, many","Call getSampleCount() with sample sets of various sizes","Matt","Complete",,,
4639,,,"2 ",,"Repeat","4638",,,"Returns: the number of samples recorded.",,,,,,,,,,,
4640,"javax.slee.usage.SampleStatistics","getMinimum","1",,"Assertion",,,"Low","Get the minimum sample value recorded for the usage parameter since either the service was deployed or the usage parameter was last reset (whichever occurred most recently).",,,"SampleStatisticsTest","minimum: Long.MAX_VALUE,Long.MAX_VALUE-1,Long.MIN_VALUE,Long.MIN_VALUE+1,-1,0,1","minimum: Long.MAX_VALUE,Long.MAX_VALUE-1,Long.MIN_VALUE,Long.MIN_VALUE+1,-1,0,1","Call getMinimum() with various sample sets.","Matt","Complete",,,
4641,,,"2 ",,"Removed",,,,"Returns: the minimum sample value.",,,,,,,,,,,
4642,,,"2 ",,"Assertion",,,"Low","This will be equal to Long.MAX_VALUE if no samples have yet been recorded.",,,"SampleStatisticsTest",,,"Call getMinimum() when there are no accumulated samples","Matt","Complete",,,
4643,"javax.slee.usage.SampleStatistics","getMaximum","1",,"Assertion",,,"Low","Get the maximum sample value recorded for the usage parameter since either the service was deployed or the usage parameter was last reset (whichever occurred most recently).",,,"SampleStatisticsTest","maximum: Long.MAX_VALUE,Long.MAX_VALUE-1,Long.MIN_VALUE,Long.MIN_VALUE+1,-1,0,1","maximum: Long.MAX_VALUE,Long.MAX_VALUE-1,Long.MIN_VALUE,Long.MIN_VALUE+1,-1,0,1","Call getMaximum() with various sample sets.","Matt","Complete",,,
4644,,,"2 ",,"Repeat","4643",,,"Returns: the maximum sample value.",,,,,,,,,,,
4645,,,"2 ",,"Assertion",,,"Low","This will be equal to Long.MIN_VALUE if no samples have yet been recorded.",,,"SampleStatisticsTest",,,"Call getMaximum() when there are no accumulated samples","Matt","Complete",,,
4646,"javax.slee.usage.SampleStatistics","getMean","1",,"Assertion",,,"Low","Get the mean of sample values recorded for the usage parameter since either the service was deployed or the usage parameter was last reset (whichever occurred most recently).",,,"SampleStatisticsTest","mean: +ve,0,-ve,fractions,Long.MAX_VALUE,Long.MIN_VALUE","mean: +ve,0,-ve,fractions,Long.MAX_VALUE,Long.MIN_VALUE","Call getMean() with various sample sets, with a tolerated error threshold (0.5).","Matt","Complete",,,
4647,,,"2 ",,"Repeat","4646",,,"Returns: the mean of sample values.",,,,,,,,,,,
4648,,,"2 ",,"Assertion",,,"Low","This will be equal to 0.0 if no samples have yet been recorded.",,,"SampleStatisticsTest",,,"Call getMean() when there are no accumulated samples","Matt","Complete",,,
4660,"javax.slee.usage.SbbUsageMBean",,"1","Pfd3","Context",,,,"The SbbUsageMBean interface must be implemented by a SBB Usage MBean Class generated by the SLEE. ",,,,,,,,,,,
4661,,,"1","Pfd3","Context",,,,"This interface contains functionality that provides basic management of an SBB's usage parameters.",,,,,,,,,,,
4662,,,"1","Pfd3","Covered","2253,2254",,,"The Object Name of a SbbUsageMBean  object can be obtained by a management client by invoking one of the getSbbUsageMBean  methods on a ServiceUsageMBean object. ",,,,,,,,,,,
4663,,,"2 ","Pfd3","Context",,,,"During SBB deployment the SbbUsageMBean interface is extended to provide access to the usage parameters defined by the SBB. ",,,,,,,,,,,
4664,,,"2 ","Pfd3","Covered","2321,2323",,,"Each counter-type usage parameter causes the addition of a managed operation with the following signature:  public long get<usage-parameter-name>(boolean reset);",,,,,,,,,,,
4665,,,"3","Pfd3","Covered","2321,2324",,,"Each sample-type usage parameter causes the addition of a managed operation with the following signature: public SampleStatistics get<usage-parameter-name>(boolean reset);",,,,,,,,,,,
4666,,,"4","Pfd3","Covered","2321",,,"In each operation, usage-parameter-name is the name of the usage parameter, with the first letter capitalized. ",,,,,,,,,,,
4667,,,"4","Pfd3","Covered","2326",,,"The reset parameter taken by each operation is used to optionally reset the usage parameter value after the return result has been obtained. ",,,,,,,,,,,
4668,,,"5","Pfd3","Covered","2334",,,"Since SbbUsageMBean objects can emit Usage  notifications, it is required that a SbbUsageMBean object implement the javax.management.NotificationBroadcaster interface. ",,,,,,,,,,,
4669,"javax.slee.usage.SbbUsageMBean","USAGE_NOTIFICATION_TYPE","1","Pfd3","Context",,,,"The notification type of usage notifications emitted by this MBean. ",,,,,,,,,,,
4670,,,"1","Pfd3","Assertion",,,"Low","The usage notification type is equal to the string ""javax.slee.usage"".",,,,,,,,,,,
4671,"javax.slee.usage.SbbUsageMBean","getService","1","Pfd3","Covered","2337",,,"Get the component identifier of the Service containing the SBB that this MBean is presenting usage information for.",,,,,,,,,,,
4672,,,"2 ","Pfd3","Covered","2337",,,"Returns: the component identifier of the Service containing the SBB that this MBean is presenting usage information for.",,,,,,,,,,,
4673,,,"3","Pfd3","Impossible",,,,"Throws: ManagementException - if the Service component identifier could not be obtained due to a system-level failure.",,,,,,,,,,,
4674,"javax.slee.usage.SbbUsageMBean","getSbb","1","Pfd3","Covered","2338",,,"Get the component identifier of the SBB that this MBean is presenting usage information for.",,,,,,,,,,,
4675,,,"2 ","Pfd3","Covered","2338",,,"Returns: the component identifier of the SBB that this MBean is presenting usage information for.",,,,,,,,,,,
4676,,,"3","Pfd3","Impossible",,,,"Throws: ManagementException - if the SBB component identifier could not be obtained due to a system-level failure.",,,,,,,,,,,
4677,"javax.slee.usage.SbbUsageMBean","close","1","Pfd3","Context",,,,"Notify the SLEE that the SBB usage MBean is no longer required by the management client. ",,,,,,,,,,,
4678,,,"1","Pfd3","Optional",,,,"As the SLEE may subsequently deregister the usage MBean from the MBean server, a client that invokes this method should assume that the Object Name they had for the MBean is no longer valid once this method returns.",,"Nothing to test",,,,,,,,,
4679,,,"2 ","Pfd3","Covered","2341",,,"Throws: InvalidStateException - if notification listeners are still attached to the sbb usage MBean. ",,,,,,,,,,,
4680,,,"2 ","Pfd3","Impossible",,,,"Throws: ManagementException - if the SBB usage MBean could not be closed by the SLEE due to a system-level failure.",,,,,,,,,,,
4790,"javax.slee.usage.SbbUsageMBean","getUsageParameterSet",,"Pfd3","Method","2339, 2454",,,,,,,,,,,,,,
4791,,,,"Pfd3","Context",,,,"Get the name of the SBB usage parameter set that this Mbean is presenting information for.",,,,,,,,,,,
4792,,,,"Pfd3","Repeat","2339, 2454",,,"Returns the name of the SBB usage parameter set that this Mbean is presenting usage information for, or null if this Mbean is presenting usage information for the SBB's default usage parameter set.",,,,,,,,,,,
4681,"javax.slee.usage.SbbUsageMBean","resetAllUsageParameters","1","Pfd3","Covered","2342",,,"Reset all SBB usage parameters in the usage parameter set managed by this MBean. ",,,,,,,,,,,
4682,,,"1","Pfd3","Covered","2342",,,"Counter-type usage parameters are reset to 0 ",,,,,,,,,,,
4683,,,"1","Pfd3","Covered","2342",,,"and sample-type usage parameters have all samples cleared.",,,,,,,,,,,
4684,,,"2 ","Pfd3","Impossible",,,,"Throws: ManagementException - if the values of the usage parameters could not be reset due to a system-level failure.",,,,,,,,,,,
4793,"javax.slee.serviceactivity.ServiceActivity",,"1","Pfd3","Covered","2400",,,"When a service is started, a Service activity is created and a ServiceStartedEvent fired on the activity.",,,,,,,,,,,
4794,,,"1","Pfd3","Covered","2193",,,"When a Service is stopped, the Service activity is ended and a ActivityEndEVent is fired on the Activity.",,,,,,,,,,,
4795,"javax.slee.serviceactivity.ServiceActivityContextInterfaceFactory",,"1.1","Pfd3","Repeat","2206",,,"JNDI location: java:comp/env/slee/serviceactivity/activitycontextinterfacefactory",,,,,,,,,,,
4796,,"getActivityContextInterface","3","Pfd3","Impossible",,,,"This method is a mandatory transactional method.",,,,,,,,,,,
4797,,,"3.2","Pfd3","Covered","2204",,,"Returns an ActivityContextInterface object that encapsulates the Service activity.",,,,,,,,,,,
4798,,,,"Pfd3","Assertion",,,"High","throws NullPointerException if activity is null",,,"Test4798Test",,,,"Cath","Complete",,,
4799,,,,"Pfd3","Impossible",,,,"throws TransactionRequiredLocalException is this method is invoked without a valid transaction context.",,,,,,,,,,,
4800,,,,"Pfd3","Impossible",,,,"throws UnrecognizedActivityException if activity is not a valid service activity created by the SLEE.","Cannot store an activity somewhere for use later after it has been destroyed.",,,,,,,,,,
4801,,,,"Pfd3","Impossible",,,,"throws FactoryException in the ActivityContextInterface object could not be created due to a system-level failure.",,,,,,,,,,,
4802,"javax.slee.serviceactivity.ServiceActivityFactory",,"1","Pfd3","Repeat",,,,"JNDI location: java:comp/env/slee/serviceactivity/factory",,,,,,,,,,,
4803,,"getActivity","3","Pfd3","Impossible",,,,"This method is a mandatory transactional method.",,,,,,,,,,,
4804,,,"3.1","Pfd3","Impossible",,,,"throws TransactionRequiredLocalException is this method is invoked without a valid transaction context.",,,,,,,,,,,
4805,,,"3.2","Pfd3","Impossible",,,,"throws FactoryException in the ActivityContextInterface object could not be created due to a system-level failure.",,,,,,,,,,,
4806,"javax.slee.serviceactivity.ServiceStartedEvent",,"1","Pfd3","Repeat","2184,2185",,,"A Service starts at the moment both of the following two transitions have occurred:  the SLEE transitions to the RUNNING state, the Service transitions to the ACTIVE state.",,,,,,,,,,,
