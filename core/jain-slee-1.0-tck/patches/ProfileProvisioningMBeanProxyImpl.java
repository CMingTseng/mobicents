package com.opencloud.sleetck.lib.testutils.jmx.impl;

import java.util.Collection;

import javax.management.InstanceNotFoundException;
import javax.management.MBeanException;
import javax.management.ObjectName;
import javax.management.ReflectionException;
import javax.management.RuntimeMBeanException;
import javax.slee.InvalidArgumentException;
import javax.slee.management.ManagementException;
import javax.slee.profile.AttributeNotIndexedException;
import javax.slee.profile.AttributeTypeMismatchException;
import javax.slee.profile.ProfileAlreadyExistsException;
import javax.slee.profile.ProfileSpecificationID;
import javax.slee.profile.ProfileTableAlreadyExistsException;
import javax.slee.profile.UnrecognizedAttributeException;
import javax.slee.profile.UnrecognizedProfileNameException;
import javax.slee.profile.UnrecognizedProfileSpecificationException;
import javax.slee.profile.UnrecognizedProfileTableNameException;

import com.opencloud.sleetck.lib.TCKTestErrorException;
import com.opencloud.sleetck.lib.testutils.jmx.MBeanFacade;
import com.opencloud.sleetck.lib.testutils.jmx.ProfileProvisioningMBeanProxy;

/**
 * Defines a proxy implementation for javax.slee.management.ProfileProvisioningMBean
 *
 * In addition to the Exceptions declared by each proxied method, 
 * each proxy method can throw a TCKTestErrorException - for commication failures, 
 * and to wrap InstanceNotFoundExceptions and ReflectionExceptions generated by the 
 * MBeanServer.invoke() method, and unchecked Exceptions other than RuntimeExceptions. 
 * RuntimeExceptions generated by the MBean are rethrown by the proxy.
 * 
 * This class was generated by the ProxyGenerator tool - Tue Jan 20 14:34:08 NZDT 2004
 * Command line args: -a javax.slee.management.ProfileProvisioningMBean 
 */
public class ProfileProvisioningMBeanProxyImpl implements ProfileProvisioningMBeanProxy {

   public ProfileProvisioningMBeanProxyImpl(ObjectName objName, MBeanFacade facade) {
      this.objName = objName;
      this.facade = facade;
   }

   public ObjectName getDefaultProfile(String p0) throws NullPointerException, UnrecognizedProfileTableNameException, ManagementException, TCKTestErrorException { 
      try {
         return (ObjectName)facade.invoke(objName,"getDefaultProfile",new Object[]{p0},new String[]{"java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedProfileTableNameException) throw (UnrecognizedProfileTableNameException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }      
   }

   public ProfileSpecificationID getProfileSpecification(String p0) throws NullPointerException, UnrecognizedProfileTableNameException, ManagementException, TCKTestErrorException { 
      try {
         return (ProfileSpecificationID)facade.invoke(objName,"getProfileSpecification",new Object[]{p0},new String[]{"java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedProfileTableNameException) throw (UnrecognizedProfileTableNameException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
		     Exception enclosed = e.getTargetException();
		     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
		     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
		  }      
   }

   public Collection getProfiles(String p0) throws NullPointerException, UnrecognizedProfileTableNameException, ManagementException, TCKTestErrorException { 
      try {
         return (Collection)facade.invoke(objName,"getProfiles",new Object[]{p0},new String[]{"java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedProfileTableNameException) throw (UnrecognizedProfileTableNameException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
		     Exception enclosed = e.getTargetException();
		     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
		     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
		  }      
   }

   public ObjectName getProfile(String p0, String p1) throws NullPointerException, UnrecognizedProfileTableNameException, UnrecognizedProfileNameException, ManagementException, TCKTestErrorException { 
      try {
         return (ObjectName)facade.invoke(objName,"getProfile",new Object[]{p0,p1},new String[]{"java.lang.String","java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedProfileTableNameException) throw (UnrecognizedProfileTableNameException)enclosed;
         if(enclosed instanceof UnrecognizedProfileNameException) throw (UnrecognizedProfileNameException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
		     Exception enclosed = e.getTargetException();
		     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
		     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
		  }      
   }

   public void removeProfileTable(String p0) throws NullPointerException, UnrecognizedProfileTableNameException, ManagementException, TCKTestErrorException { 
      try {
         facade.invoke(objName,"removeProfileTable",new Object[]{p0},new String[]{"java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedProfileTableNameException) throw (UnrecognizedProfileTableNameException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
		     Exception enclosed = e.getTargetException();
		     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
		     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
		  }      
   }

   public void removeProfile(String p0, String p1) throws NullPointerException, UnrecognizedProfileTableNameException, UnrecognizedProfileNameException, ManagementException, TCKTestErrorException { 
      try {
         facade.invoke(objName,"removeProfile",new Object[]{p0,p1},new String[]{"java.lang.String","java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedProfileTableNameException) throw (UnrecognizedProfileTableNameException)enclosed;
         if(enclosed instanceof UnrecognizedProfileNameException) throw (UnrecognizedProfileNameException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
		     Exception enclosed = e.getTargetException();
		     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
		     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
		  }      
   }

   public void createProfileTable(ProfileSpecificationID p0, String p1) throws NullPointerException, UnrecognizedProfileSpecificationException, InvalidArgumentException, ProfileTableAlreadyExistsException, ManagementException, TCKTestErrorException { 
      try {
         facade.invoke(objName,"createProfileTable",new Object[]{p0,p1},new String[]{"javax.slee.profile.ProfileSpecificationID","java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedProfileSpecificationException) throw (UnrecognizedProfileSpecificationException)enclosed;
         if(enclosed instanceof InvalidArgumentException) throw (InvalidArgumentException)enclosed;
         if(enclosed instanceof ProfileTableAlreadyExistsException) throw (ProfileTableAlreadyExistsException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
		     Exception enclosed = e.getTargetException();
		     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
		     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
		  }      
   }

   public Collection getProfilesByIndexedAttribute(String p0, String p1, Object p2) throws NullPointerException, UnrecognizedProfileTableNameException, UnrecognizedAttributeException, AttributeNotIndexedException, AttributeTypeMismatchException, ManagementException, TCKTestErrorException { 
      try {
         return (Collection)facade.invoke(objName,"getProfilesByIndexedAttribute",new Object[]{p0,p1,p2},new String[]{"java.lang.String","java.lang.String","java.lang.Object"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedProfileTableNameException) throw (UnrecognizedProfileTableNameException)enclosed;
         if(enclosed instanceof UnrecognizedAttributeException) throw (UnrecognizedAttributeException)enclosed;
         if(enclosed instanceof AttributeNotIndexedException) throw (AttributeNotIndexedException)enclosed;
         if(enclosed instanceof AttributeTypeMismatchException) throw (AttributeTypeMismatchException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
		     Exception enclosed = e.getTargetException();
		     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
		     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
		  }      
   }

   public void renameProfileTable(String p0, String p1) throws NullPointerException, UnrecognizedProfileTableNameException, InvalidArgumentException, ProfileTableAlreadyExistsException, ManagementException, TCKTestErrorException { 
      try {
         facade.invoke(objName,"renameProfileTable",new Object[]{p0,p1},new String[]{"java.lang.String","java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedProfileTableNameException) throw (UnrecognizedProfileTableNameException)enclosed;
         if(enclosed instanceof InvalidArgumentException) throw (InvalidArgumentException)enclosed;
         if(enclosed instanceof ProfileTableAlreadyExistsException) throw (ProfileTableAlreadyExistsException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
		     Exception enclosed = e.getTargetException();
		     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
		     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
		  }      
   }

   public Collection getProfileTables() throws ManagementException, TCKTestErrorException { 
      try {
         return (Collection)facade.invoke(objName,"getProfileTables",EmptyArrays.EMPTY_OBJECT_ARRAY,EmptyArrays.EMPTY_STRING_ARRAY);
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
		     Exception enclosed = e.getTargetException();
		     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
		     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
		  }      
   }

   public ObjectName createProfile(String p0, String p1) throws NullPointerException, UnrecognizedProfileTableNameException, InvalidArgumentException, ProfileAlreadyExistsException, ManagementException, TCKTestErrorException { 
      try {
         return (ObjectName)facade.invoke(objName,"createProfile",new Object[]{p0,p1},new String[]{"java.lang.String","java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedProfileTableNameException) throw (UnrecognizedProfileTableNameException)enclosed;
         if(enclosed instanceof InvalidArgumentException) throw (InvalidArgumentException)enclosed;
         if(enclosed instanceof ProfileAlreadyExistsException) throw (ProfileAlreadyExistsException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
		     Exception enclosed = e.getTargetException();
		     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
		     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
		  }      
   }

   private ObjectName objName;
   private MBeanFacade facade;

}
