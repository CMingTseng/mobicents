System test instructions

Prerequisites:

Install sipp. This is an excellent test tool for sip applications 
available at http://sipp.sourceforge.net
Install version 1.1 or later.

The benefit of using sipp here is that you don't have to use ordinary sip UAs such as XLite, Windows Messenge e.t.c.
It can be inconvenient or impossible to run multiple instances of these on a single machine.

Test 1 - Both UAs respond and the web user hangs up via the web page

Start two instances of sipp in uas mode using the uas.xml file.
(This script differs from the sipp built in uas scenario in that there 
is a pause between the 180 Ringing and 200 OK responses sent by sipp.
Remove this pause if you want the call flow to execute quickly and don't 
care about looking at the state changes in "human" speed.)  

This example uses ports 5062 and 5064 (use the -nr option to disable retransmissions of UDP packages, this is optional) .

1. sipp -sf scripts/uas.xml -i 127.0.0.1 -p 5062 -nr
2. sipp -sf scripts/uas.xml -i 127.0.0.1 -p 5064 -nr
3. Run the 3pcc app with addresses: 
sip:username1@127.0.0.1:5062 and sip:username2@127.0.0.1:5064

where username1 and username2 are arbitrary, it doesn't matter for sipp what they are.
4. Observe the status feedback in the sipp instances and the 3pcc application. Both sipp instances will report according to the following:


                                 Messages  Retrans   Timeout   Unexpected-Msg
  ----------> INVITE             1         0                   0

  <---------- 180                1         0
  [   4000ms] Pause              1                             0
  <---------- 200                1         2         0
  ----------> ACK        E-RTD   1         0                   0

  ----------> BYE                0         0                   0
  <---------- 200                0         0
  [   4000ms] Pause              0                             0

5. Hang up using the web page. The sipp instances will report a received BYE and sent OK.

