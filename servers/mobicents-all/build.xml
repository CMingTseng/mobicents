<?xml version="1.0"?>
<project name="mobicents.all.release" default="release" basedir=".">

	<property environment="sys"/>

    <property name="docs.stage.dir" location="${ant.file.mobicents.all.release}/../documentation"/>

	<property name="release.dir" location="${ant.file.mobicents.all.release}/../target/release"/>
	<property name="release.name" value="mobicents-all"/>
    <property name="release.version" value="1.2.1.GA"/>
	<property name="release.configurations" value="default,all"/>
	
    <property name="release.slee.ra.dirs" value="xmpp,smpp,http-servlet,asterisk,sip,sip11,http-client,jcc,rules,tts"/>
    <property name="release.slee.example.dirs" value="sip-services,google-talk-bot,sip-wake-up"/>
    <property name="release.diameter.ra.dirs" value="base,sh-client,sh-common,sh-server,cca,rf,ro"/>
    <property name="release.diameter.example.dirs" value="base,sh-client,openims"/>

    <property name="release.readme.file.location" location="${ant.file.mobicents.all.release}/../readme-all.txt"/>

	<property name="jboss.version" value="4.2.3.GA"/>
	<property name="jboss.distro.zip.path" value="jboss-${jboss.version}.zip"/>
	<property name="jboss.download.url" value="http://downloads.sourceforge.net/jboss/jboss-${jboss.version}.zip" />
	<property name="jboss.home.relative.path" value="jboss-${jboss.version}" />
	<property name="jboss.home" value="${release.dir}/${jboss.home.relative.path}" />
	
    <property name="jbcp.release.dir" location="${ant.file.mobicents.all.release}/../target/release-jbcp"/>
    <property name="jbcp.release.name" value="JBCP"/>
    <property name="jbcp.release.version" value="1.2.1.GA"/>
    <property name="jbcp.configurations" value="default,all,production"/>

    <property name="jbcp.slee.ra.dirs" value="xmpp,http-servlet,sip,sip11,http-client,tts"/>
    <property name="jbcp.slee.example.dirs" value="sip-services,google-talk-bot,sip-wake-up"/>
    <property name="jbcp.diameter.ra.dirs" value="base,sh-client"/>
    <property name="jbcp.diameter.example.dirs" value="base"/>

    <property name="jbcp.readme.file.location" location="${ant.file.mobicents.all.release}/../readme-jbcp.txt"/>

	<property name="eap.version" value="eap-4.3"/>
	<property name="eap.distro.zip.path" value="jboss-eap-4.3.0.GA_CP04.zip"/>
	<property name="eap.download.url" value="http://porkchop.redhat.com/released/JBEAP-4.3.0/CP04/zip/${eap.distro.zip.path}" />
    <property name="eap.home.relative.path" value="jboss-${eap.version}/jboss-as"/>
	<property name="eap.home" value="${jbcp.release.dir}/${eap.home.relative.path}"/>

	<condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
		<os family="windows"/>
	</condition>

	<taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ant.file.mobicents.release}/../ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>
	
	<target name="release" depends="get-jboss,unzip-jboss,get-servers">
		<!-- release first part of nodes (slee,media) --> 
		<for delimiter="," param="jboss.node" list="${release.configurations}">
			<sequential>
				<echo>[Populating '@{jboss.node}' jboss.node]</echo>
				<antcall target="release-in-node-slee-media">
					<param name="jboss.node" value="@{jboss.node}"/>
				</antcall>
			</sequential>
		</for>
		<!-- release second part of nodes (sip servlets)--> 
		<antcall target="release-sip-servlets"/>

		
		<!-- release third part of nodes (diameter)--> 
		<for delimiter="," param="jboss.node" list="${release.configurations}">
			<sequential>
				<echo>[Populating '@{jboss.node}' jboss.node]</echo>
				<antcall target="release-in-node-diameter">
					<param name="jboss.node" value="@{jboss.node}"/>
				</antcall>
			</sequential>
		</for>
		
		
		<antcall target="release-jain-slee-common" />
		<antcall target="release-sip-presence-common" />
		<antcall target="release-diameter-common" />
		<antcall target="release-sip-load-balancer" />
        <antcall target="release-documentation" />
		
		<copy file="${release.readme.file.location}" todir="${release.dir}" overwrite="true"/>
		<antcall target="copy-frontpage"/>
		<antcall target="build-src-zip" />
		<antcall target="zip-release"/>
		<antcall target="clean"/>
	</target>
	
	<target name="release-in-node" depends="release-jain-slee-in-node,release-media,release-sip-servlets,release-diameter-in-node" />
	
    <target name="release-jbcp">
        <ant antfile="${ant.file.mobicents.all.release}" target="release">
            <property name="release.dir" value="${jbcp.release.dir}"/>
            <property name="release.name" value="${jbcp.release.name}"/>
            <property name="release.version" value="${jbcp.release.version}"/>
            <property name="release.configurations" value="${jbcp.configurations}"/>

            <property name="release.slee.ra.dirs" value="${jbcp.slee.ra.dirs}"/>
            <property name="release.slee.example.dirs" value="${jbcp.slee.example.dirs}"/>
            <property name="release.diameter.ra.dirs" value="${jbcp.diameter.ra.dirs}"/>
            <property name="release.diameter.example.dirs" value="${jbcp.diameter.example.dirs}"/>

            <property name="release.readme.file.location" value="${jbcp.readme.file.location}"/>

            <property name="jboss.version" value="${eap.version}"/>
            <property name="jboss.distro.zip.path" value="${eap.distro.zip.path}"/>
            <property name="jboss.download.url" value="${eap.download.url}" />
            <property name="jboss.home" value="${eap.home}"/>
            <property name="jboss.home.relative.path" value="${eap.home.relative.path}"/>
        </ant>
    </target>
	
	<!-- get, unzip and clean jboss -->

	<!-- this will fail for eap if jboss as is downloaded and eap isn't -->
	<available file="${ant.file.mobicents.all.release}/../${jboss.distro.zip.path}" property="got.jboss" />
	<target name="get-jboss" unless="got.jboss">
		<echo>Downloading JBoss AS</echo>
		<get dest="${ant.file.mobicents.all.release}/../${jboss.distro.zip.path}" src="${jboss.download.url}" />
	</target>

	<target name="unzip-jboss">
		<delete dir="${jboss.home}" failonerror="true" />
		<unzip src="${jboss.distro.zip.path}" dest="${release.dir}" />

		<propertyregex input="${release.configurations}" regexp="(\w+)" global="true" replace="**/\1/**" property="used.configurations" />
		<echo>Included configurations: ${release.configurations} -&gt; Excludes list: ${used.configurations}</echo>
		
		<delete includeemptydirs="true" failonerror="false" verbose="false">
			<fileset dir="${jboss.home}/server" excludes="${used.configurations}" />
		</delete>
	</target>

	<!-- get servers -->

	<condition property="servers.checkedout">
		<and>
			<available file="${ant.file.mobicents.all.release}/../target/servers/jain-slee/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/media/core/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/media/controllers/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/media/examples/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/media/release/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/sip-presence/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/sip-servlets/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/diameter/core/jdiameter/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/diameter/core/mux/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/diameter/examples/base/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/diameter/examples/sh-client/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/diameter/resources/base/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/diameter/resources/sh-client/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/diameter/release/.svn/entries" />
			<available file="${ant.file.mobicents.all.release}/../target/servers/sip-load-balancer/.svn/entries" />
		</and>
	</condition>
	<target name="get-servers" depends="checkout-servers,update-servers" />

	<target name="checkout-servers" unless="servers.checkedout">
		<echo>Checking out servers</echo>
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.all.release}/../">
			<arg line="validate -P checkout" />
		</exec>
	</target>

	<target name="update-servers">
		<echo>Updating servers</echo>
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.all.release}/../">
			<arg line="validate -P update" />
		</exec>
	</target>

	<!-- release servers -->
	
	<target name="release-jain-slee-common">
		<property name="jain-slee.target.release.dir" location="${ant.file.mobicents.all.release}/../target/servers/jain-slee/release/target"/>
		
		<ant antfile="${ant.file.mobicents.all.release}/../target/servers/jain-slee/release/build.xml" target="build-ras">
			<property name="release.dir" value="${release.dir}" />
            <property name="jboss.home.relative.path" value="${jboss.home.relative.path}" />
			<property name="ra.dirs" value="${release.slee.ra.dirs}"/>
		</ant>
		<ant antfile="${ant.file.mobicents.all.release}/../target/servers/jain-slee/release/build.xml" target="build-examples">
			<property name="release.dir" value="${release.dir}" />
            <property name="jboss.home.relative.path" value="${jboss.home.relative.path}" />
			<property name="example.dirs" value="${release.slee.example.dirs}"/>
		</ant>
		<move tofile="${release.dir}/resources" file="${jain-slee.target.release.dir}/resources" />
		<move tofile="${release.dir}/examples" file="${jain-slee.target.release.dir}/examples" />
	</target>
	
	<target name="release-jain-slee-in-node">
		<ant antfile="${ant.file.mobicents.all.release}/../target/servers/jain-slee/release/build.xml" target="build-core">
			<property name="release.dir" value="${release.dir}" />
            <property name="jboss.home.relative.path" value="${jboss.home.relative.path}" />
			<property name="jboss.config" value="${jboss.node}" />
		</ant>
		<ant antfile="${ant.file.mobicents.all.release}/../target/servers/jain-slee/release/build.xml" target="copy-extra-jbossas-files">
			<property name="release.dir" value="${release.dir}" />
            <property name="jboss.home.relative.path" value="${jboss.home.relative.path}" />
			<property name="jboss.config" value="${jboss.node}" />
	</ant>
	</target>

	<target name="release-media">
		<property name="jboss.home.converted" location="${jboss.home}"/>
		<ant antfile="${ant.file.mobicents.all.release}/../target/servers/media/release/build.xml" target="release-mobicents-all">
			<property name="release.dir" value="${release.dir}"/>
			<property name="jboss.home" value="${jboss.home.converted}"/>
            <property name="jboss.home.relative.path" value="${jboss.home.relative.path}" />
			<property name="jboss.config" value="${jboss.node}" />
		</ant>
	</target>

	<target name="release-sip-presence-common">
		<ant antfile="${ant.file.mobicents.all.release}/../target/servers/sip-presence/release/build.xml" target="release-mobicents-all">
			<property name="release.dir" value="${release.dir}" />
			<property name="release.build.jboss.home" value="${home}../${jboss.home.relative.path}" />
			<property name="jboss.config" value="default" />
			<!-- This is the jboss config that is used for deployments -->
		</ant>
	</target>

	<target name="release-sip-servlets">
		<property name="jboss.home.converted" location="${jboss.home}"/>
		<ant antfile="${ant.file.mobicents.all.release}/../target/servers/sip-servlets/sip-servlets-bootstrap/release/build.xml" target="release-jboss">
			<property name="jboss.home" value="${jboss.home.converted}"/>
			<property name="mss.release.configurations" value="${release.configurations}" />
		</ant>
	</target>
	
	
	<target name="release-diameter-common">
		<property name="diameter.target.release.dir" location="${ant.file.mobicents.all.release}/../target/servers/diameter/release/target"/>
		
		<ant antfile="${ant.file.mobicents.all.release}/../target/servers/diameter/release/build.xml" target="build-ras">
			<property name="release.dir" value="${release.dir}" />
			<property name="jboss.home.relative.path" value="${jboss.home.relative.path}" />
			<property name="ra.dirs" value="${release.diameter.ra.dirs}"/>
		</ant>
		<ant antfile="${ant.file.mobicents.all.release}/../target/servers/diameter/release/build.xml" target="build-examples">
			<property name="release.dir" value="${release.dir}" />
			<property name="jboss.home.relative.path" value="${jboss.home.relative.path}" />
			<property name="examples.dirs" value="${release.diameter.example.dirs}"/>
		</ant>
		<move tofile="${release.dir}/resources" file="${diameter.target.release.dir}/resources" />
		<move tofile="${release.dir}/examples" file="${diameter.target.release.dir}/examples" />
	</target>
	
	<target name="release-diameter-in-node">
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.all.release}/../target/servers/diameter/core/jdiameter">
			<arg line="clean install -P set-svn-revision -Djboss.home=${jboss.home} -Dnode=${jboss.node}"/>
		</exec>
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.all.release}/../target/servers/diameter/core/mux">
			<arg line="clean install -P set-svn-revision -Djboss.home=${jboss.home} -Dnode=${jboss.node}"/>
		</exec>
	</target>
	
	<target name="release-sip-load-balancer">
		<echo>Building Mobicents SIP Load Balancer</echo>
		<exec failonerror="true" executable="${mvn.executable}" dir="${ant.file.mobicents.all.release}/../target/servers/sip-load-balancer">
			<arg line="install -P set-svn-revision" />
		</exec>
		<copy tofile="${jboss.home}/sip-balancer/sip-balancer-jar-with-dependencies.jar">
			<fileset dir="${ant.file.mobicents.all.release}/../target/servers/sip-load-balancer/target/" includes="sip-balancer-*-jar-with-dependencies.jar" />
		</copy>
		<copy file="${ant.file.mobicents.all.release}/../target/servers/sip-load-balancer/src/test/resources/lb-configuration.properties"
			tofile="${jboss.home}/sip-balancer/lb-configuration.properties" />
	</target>

	<!-- copy frontpage -->
	<target name="copy-frontpage" depends="">
		<copy verbose="true" overwrite="true" todir="${jboss.home}/server/default/deploy/jboss-web.deployer/ROOT.war/">
			<fileset dir="${ant.file.mobicents.release}/../ROOT.WAR/" includes="*/**"/>
		</copy>
		<copy verbose="true" overwrite="true" todir="${jboss.home}/server/all/deploy/jboss-web.deployer/ROOT.war/">
			<fileset dir="${ant.file.mobicents.release}/../ROOT.WAR/" includes="*/**"/>
		</copy>
	</target>
	
	<!-- zip source -->

	<target name="build-src-zip" depends="">
		<property name="src.zip.filename" value="${release.name}-src.zip" />
		<mkdir dir="${release.dir}/${release.name}-src" />
		<for param="dir.name">
			<dirset dir="${ant.file.mobicents.all.release}/../target/servers"
				includes="**/src/main/java"
				 />
			<sequential>
				<echo>Packaging src for @{dir.name}</echo>
				<copy todir="${release.dir}/${release.name}-src" includeEmptyDirs="yes">
					<fileset dir="@{dir.name}" />
				</copy>
			</sequential>
		</for>
		<zip destfile="${release.dir}/${src.zip.filename}" basedir="${release.dir}/${release.name}-src" />
		<delete dir="${release.dir}/${release.name}-src" />
	</target>

	<!-- zip release -->

	<target name="zip-release" depends="set-zip-filename">
		<fixcrlf srcdir="${jboss.home}/bin" includes="*.sh" eol="lf" eof="remove" />
		<zip destfile="${ant.file.mobicents.all.release}/../${zip.filename}" filesonly="false">
			<zipfileset dir="${jboss.home}/bin" filemode="755" prefix="${jboss.home.relative.path}/bin">
				<include name="*.sh" />
			</zipfileset>
			<zipfileset dir="${jboss.home}/bin" prefix="${jboss.home.relative.path}/bin">
				<exclude name="*.sh" />
			</zipfileset>
			<zipfileset dir="${release.dir}" prefix="" excludes="**/bin/** **/server/*/data/** **/server/*/log/** **/server/*/tmp/** **/server/*/work/** **/server/tmp/**" />
		</zip>
	</target>

	<target name="set-zip-filename" depends="set-time-stamp">
		<property name="zip-filename-prefix" value="${release.name}-${release.version}-jboss-${jboss.version}" />
		<condition property="zip.filename" value="${zip-filename-prefix}-${time.stamp}.zip" else="${zip-filename-prefix}.zip">
			<isset property="time.stamp" />
		</condition>
	</target>

	<target name="set-time-stamp" unless="skip.timestamp">
		<tstamp>
			<format property="time.stamp" pattern="yyMMddHHmm" />
		</tstamp>
	</target>
	
    <!-- Fetch and build documentation -->

    <condition property="docs.checked.out">
        <and>
            <available file="${docs.stage.dir}/common/.svn/entries" />

            <available file="${docs.stage.dir}/jain-slee/.svn/entries" />
            <available file="${docs.stage.dir}/media/.svn/entries" />
            <available file="${docs.stage.dir}/sip-presence/.svn/entries" />
            <available file="${docs.stage.dir}/sip-servlets/.svn/entries" />
        </and>
    </condition>
    <target name="get-documentation" depends="checkout-documentation,update-documentation" />

    <target name="checkout-documentation" unless="docs.checked.out">
        <echo>Checking out documentation</echo>
        <exec executable="${mvn.executable}" dir="${ant.file.mobicents.all.release}/../">
            <arg line="-f documentation-checkout.xml validate -P checkout" />
        </exec>
    </target>

    <target name="update-documentation">
        <echo>Updating documentation</echo>
        <exec executable="${mvn.executable}" dir="${ant.file.mobicents.all.release}/../">
            <arg line="-f documentation-checkout.xml validate -P update" />
        </exec>
    </target>

    <target name="release-documentation" depends="get-documentation">
        <echo>Building documentation</echo>

        <exec executable="${mvn.executable}" dir="${docs.stage.dir}/jain-slee/">
            <arg line="clean compile" />
        </exec>
        <exec executable="${mvn.executable}" dir="${docs.stage.dir}/media/">
            <arg line="clean compile" />
        </exec>
        <exec executable="${mvn.executable}" dir="${docs.stage.dir}/sip-presence/">
            <arg line="clean compile" />
        </exec>
        <exec executable="${mvn.executable}" dir="${docs.stage.dir}/sip-servlets/">
            <arg line="clean compile" />
        </exec>
        <exec executable="${mvn.executable}" dir="${docs.stage.dir}/platform-installation/">
            <arg line="clean compile" />
        </exec>

        <copy overwrite="true" todir="${release.dir}/documentation/jain-slee">
            <fileset dir="${docs.stage.dir}/jain-slee/target/docbook/publish/en-US/" />
        </copy>
        <copy overwrite="true" todir="${release.dir}/documentation/media">
            <fileset dir="${docs.stage.dir}/media/target/docbook/publish/en-US/" />
        </copy>
        <copy overwrite="true" todir="${release.dir}/documentation/sip-presence">
            <fileset dir="${docs.stage.dir}/sip-presence/target/docbook/publish/en-US/" />
        </copy>
        <copy overwrite="true" todir="${release.dir}/documentation/sip-servlets">
            <fileset dir="${docs.stage.dir}/sip-servlets/target/docbook/publish/en-US/" />
        </copy>
        <copy overwrite="true" todir="${release.dir}/documentation/platform-installation-guide">
            <fileset dir="${docs.stage.dir}/platform-installation/target/docbook/publish/en-US/" />
        </copy>

        <!--delete dir="${docs.stage.dir}" /-->
    </target>

	<!-- clean build process -->

	<target name="clean">
		<delete dir="${release.dir}" />
		<delete dir="${docs.stage.dir}" />
	</target>

</project>
