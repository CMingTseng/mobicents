<?xml version="1.0" encoding="UTF-8"?>
<project name="Project Parlay Resource Adaptor --- 1.0" default="deploy" basedir=".">
	<!-- General settings -->
	<property name="prj.version" value="1.0" />
	<property name="prj.name" value="parlay" />

	<property environment="system" />

	<property name="jboss.home" value="${system.JBOSS_HOME}" />
	<property name="node" value="all" description="Controls the jboss conrfiguration. Values are typically all or node1" />
	<property name="deploy-mobicents.dir" value="${jboss.home}/server/${node}/deploy-mobicents" description="Points to the deploy-mobicents/ . The default value is derived from JBOSS_HOME." />


	<!-- Directories -->
	<property name="dir.root" value="${basedir}/source" />
	<property name="dir.lib" value="${dir.root}/lib" />

	<property name="dir.desc.ra" value="${dir.root}/ra/src/descriptors" />
	<property name="dir.desc.ratype" value="${dir.root}/ratype/src/descriptors" />
	<property name="dir.desc.sbb" value="${dir.root}/test/src/descriptors" />

	<property name="dir.ra.classes" value="${dir.root}/ra/classes" />
	<property name="dir.ra.test-classes" value="${dir.root}/ra/test-classes" />
	<property name="dir.ratype.classes" value="${dir.root}/ratype/classes" />
	<property name="dir.dist" value="${dir.root}/dist" />

	<property name="dir.ra.src.java" value="${dir.root}/ra/src/java" />
	<property name="dir.ra.src.test" value="${dir.root}/ra/src/test" />
	<property name="dir.ratype.src.java" value="${dir.root}/ratype/src/java" />
	<property name="dir.provider-api.src" value="${dir.root}/provider-api/src/java" />

	<property name="dir.stage" value="${dir.root}/stage" />
	<property name="dir.stage.events" value="${dir.stage}/events" />
	<property name="dir.stage.ratype" value="${dir.stage}/ratype" />
	<property name="dir.stage.ra" value="${dir.stage}/ra" />
	<property name="dir.stage.ratype-unit" value="${dir.stage}/ratype-unit" />
	<property name="dir.stage.ra-unit" value="${dir.stage}/ra-unit" />
	<property name="dir.test-reports" value="${dir.root}/test-reports" />

	<property name="testreport.dir" value="${dir.root}/test-reports" />
	<property name="dir.coverage" value="${dir.root}/coverage-reports" />
	<property name="dir.instr.out" value="${dir.root}/outinstr" />

	<property name="dir.release" value="${basedir}/release" />

	<!-- Output JAR files -->
	<property name="jar.lib" value="${prj.name}-${prj.version}.jar" />
	<property name="jar.events" value="${prj.name}-events.jar" />
	<property name="jar.ratype" value="${prj.name}-resource-adaptor-type.jar" />
	<property name="jar.ra" value="${prj.name}-resource-adaptor.jar" />
	<property name="jar.ra-unit" value="${prj.name}-local-ra.jar" />
	<property name="jar.ratype-unit" value="${prj.name}-ra-type.jar" />

	<property name="zip.release.name" value="jslee-${prj.name}-${prj.version}.zip" />

	<!-- Dependency JAR Files -->
	<property name="jar.bouncycastle" value="${dir.lib}/bcprov-jdk14-130.jar" />
	<property name="jar.connector" value="${dir.lib}/connector-api.jar" />

	
	<import file="${ant.file.Project Parlay Resource Adaptor --- 1.0}/../../../core/xml/ant/mobicents-ant-common-properties.xml"/>
	
	<!-- the compiletime classpath -->
	<path id="path.compile">
		<fileset dir="${dir.lib}">
			<include name="*.jar" />
		</fileset>
		<path refid="mobicents.core.classpath"/>
	</path>

	<path id="path.unittests">
		<path refid="path.compile" />
		<pathelement location="${dir.ra.src.test}" />
		<pathelement location="${dir.ra.classes}" />
		<pathelement location="${dir.ra.test-classes}" />
		<pathelement location="${dir.ratype.classes}" />
		<pathelement location="${dir.root}/conf" />
		<pathelement location="${dir.root}/conf/unittest" />
	</path>

	<path id="path.emma.instr">
		<pathelement location="${dir.ra.classes}" />
	</path>

	<path id="classpath.pmd">
		<fileset dir="${dir.lib}/pmd-3.3/lib/" includes="*.jar" />
	</path>

	<target name="clean" description="Removes all build artifacts">
		<delete dir="${dir.ra.classes}/" />
		<delete dir="${dir.ra.test-classes}/" />
		<delete dir="${dir.ratype.classes}/" />
		<delete dir="${dir.dist}" />
		<delete dir="${dir.stage}" />
		<delete dir="${dir.test-reports}" />
		<delete dir="deploy" />
		<delete dir="${dir.coverage}" />
		<delete dir="${dir.instr.out}" />
	</target>

	<target name="init" description="Prepares directories for all build artifacts">
		<mkdir dir="${dir.ra.classes}" />
		<mkdir dir="${dir.ra.test-classes}" />
		<mkdir dir="${dir.ratype.classes}" />
		<mkdir dir="${dir.dist}" />
		<mkdir dir="${dir.stage}" />
		<mkdir dir="${dir.test-reports}" />
		<mkdir dir="deploy" />
		<mkdir dir="${dir.coverage}" />
		<mkdir dir="${dir.instr.out}" />
		<ant target="junit-init" />

	</target>
	<target name="junit-init">
		<available file="${system.ANT_HOME}/lib/junit.jar" property="dont-copy-junit">
		</available>
		<ant target="copy-junit-libs" />
	</target>
	<target name="copy-junit-libs" unless="dont-copy-junit">

		<echo>If the junit task failed, run the script once again. It should succeed the second time after junit.jar is copied to Ant's lib.</echo>
		<copy verbose="true" todir="${system.ANT_HOME}/lib">
			<fileset dir="${dir.lib}">
				<include name="ant-junit.jar" />
				<include name="junit.jar" />
			</fileset>
		</copy>
	</target>

	<target name="deploy1.5" depends="compile1.5, build" description="Deploys the deliverables to the mobicents server">
		<copy file="${dir.root}/conf/parlayra-orb.properties" todir="${jboss.home}/server/${node}/conf" />
		<copy file="${dir.root}/scripts/parlayresourceadapter-deploy.bsh" todir="deploy/scripts/" />
		<copy todir="${deploy-mobicents.dir}">
			<fileset dir="deploy">
				<include name="**/*.jar" />
				<include name="**/*" />
			</fileset>
		</copy>
	</target>

	<target name="deploy" depends="compile, build" description="Deploys the deliverables to the mobicents server">
		<copy file="${dir.root}/conf/parlayra-orb.properties" todir="${jboss.home}/server/${node}/conf" />
		<copy file="${dir.root}/scripts/parlayresourceadapter-deploy.bsh" todir="deploy/scripts/" />
		<copy todir="${deploy-mobicents.dir}">
			<fileset dir="deploy">
				<include name="**/*.jar" />
				<include name="**/*" />
			</fileset>
		</copy>
	</target>

	<target name="build" depends="unittests, package-unit-ra, package-unit-type, create-lib" description="Builds all deliverables" />

	<target name="rebuild" depends="clean, deploy" description="Rebuilds all deliverables" />

	<target name="compile1.5" depends="init, pmd" description="Compiles source code">

		<echo message="Compiling ratype" />
		<javac srcdir="${dir.ratype.src.java}:${dir.provider-api.src}" destdir="${dir.ratype.classes}" debug="on" source="1.5">
			<classpath>
				<path refid="path.compile" />
			</classpath>
		</javac>

		<echo message="Compiling ra" />
		<javac srcdir="${dir.ra.src.java}" destdir="${dir.ra.classes}" debug="on" source="1.5">
			<classpath>
				<path refid="path.compile" />
				<pathelement location="${dir.ratype.classes}" />
			</classpath>
		</javac>

		<echo message="Compiling ra unit tests" />
		<javac srcdir="${dir.ra.src.test}" destdir="${dir.ra.test-classes}" debug="on" source="1.5">
			<classpath>
				<path refid="path.compile" />
				<pathelement location="${dir.ratype.classes}" />
				<pathelement location="${dir.ra.classes}" />
			</classpath>
		</javac>
		<copy todir="${dir.ra.test-classes}">
			<fileset dir="${dir.ra.src.java}" includes="**/*.properties" />
		</copy>
	</target>

	<target name="compile" depends="init, pmd" description="Compiles source code">

		<echo message="Compiling ratype" />
		<javac srcdir="${dir.ratype.src.java}:${dir.provider-api.src}" destdir="${dir.ratype.classes}" debug="on" source="1.4">
			<classpath>
				<path refid="path.compile" />
			</classpath>
		</javac>

		<echo message="Compiling ra" />
		<javac srcdir="${dir.ra.src.java}" destdir="${dir.ra.classes}" debug="on" source="1.4">
			<classpath>
				<path refid="path.compile" />
				<pathelement location="${dir.ratype.classes}" />
			</classpath>
		</javac>

		<echo message="Compiling ra unit tests" />
		<javac srcdir="${dir.ra.src.test}" destdir="${dir.ra.test-classes}" debug="on" source="1.4">
			<classpath>
				<path refid="path.compile" />
				<pathelement location="${dir.ratype.classes}" />
				<pathelement location="${dir.ra.classes}" />
			</classpath>
		</javac>
		<copy todir="${dir.ra.test-classes}">
			<fileset dir="${dir.ra.src.java}" includes="**/*.properties" />
		</copy>
	</target>


	<target name="create-lib" depends="compile" description="Creates lib jar">
		<jar destfile="${dir.dist}/${jar.lib}">
			<fileset dir="${dir.ra.classes}" />
		</jar>
	</target>


	<target name="package-events" depends="compile" description="Creates events jar">
		<copy file="${dir.desc.ratype}/event-jar.xml" todir="${dir.stage.events}/META-INF" />
		<jar destfile="${dir.stage}/${jar.events}">
			<fileset dir="${dir.stage.events}" />
		</jar>
		<!-- <delete dir="${dir.stage.events}"/> -->
	</target>

	<target name="package-ratype" depends="compile" description="Creates ratype jar">
		<copy file="${dir.desc.ratype}/resource-adaptor-type-jar.xml" todir="${dir.stage.ratype}/META-INF" />

		<copy todir="${dir.stage.ratype}">
			<fileset dir="${dir.ratype.classes}" />
		</copy>
		<jar destfile="${dir.stage}/${jar.ratype}">
			<fileset dir="${dir.stage.ratype}" />
		</jar>
		<!-- <delete dir="${dir.stage.ratype}" /> -->
	</target>

	<target name="package-ra" depends="compile" description="Creates RA jar">
		<copy file="${dir.desc.ra}/resource-adaptor-jar.xml" todir="${dir.stage.ra}/META-INF" />
		<copy todir="${dir.stage.ra}">
			<fileset dir="${dir.ra.classes}" />
			<fileset dir="${dir.ra.src.java}" includes="**/*.properties" />
		</copy>
		<jar destfile="${dir.stage}/${jar.ra}">
			<fileset dir="${dir.stage.ra}" excludes="**/*Test.properties" />
		</jar>
		<!-- <delete dir="${dir.stage.ra}" /> -->
	</target>

	<target name="package-unit-type" depends="package-ratype, package-events" description="Creates RA type deployable unit">
		<copy file="${dir.desc.ratype}/deployable-unit.xml" todir="${dir.stage.ratype-unit}/META-INF" />
		<copy todir="${dir.stage.ratype-unit}">
			<fileset dir="${dir.stage}">
				<include name="${jar.ratype}" />
				<include name="${jar.events}" />
			</fileset>
		</copy>
		<jar destfile="${dir.dist}/${jar.ratype-unit}">
			<fileset dir="${dir.stage.ratype-unit}" />
		</jar>
		<copy file="${dir.dist}/${jar.ratype-unit}" todir="deploy" />
		<!-- <delete dir="${stage-ratype-unit}" /> -->
	</target>

	<target name="package-unit-ra" depends="package-ra" description="Creates RA deployable unit">
		<copy file="${dir.desc.ra}/deployable-unit.xml" todir="${dir.stage.ra-unit}/META-INF" />
		<copy todir="${dir.stage.ra-unit}">
			<fileset dir="${dir.stage}">
				<include name="${jar.ra}" />
			</fileset>
		</copy>

		<!-- deps -->
		<copy todir="${dir.stage.ra-unit}/library" file="${jar.bouncycastle}" />
		<copy todir="${dir.stage.ra-unit}/library" file="${jar.connector}" />

		<jar destfile="${dir.dist}/${jar.ra-unit}">
			<fileset dir="${dir.stage.ra-unit}" />
		</jar>
		<copy file="${dir.dist}/${jar.ra-unit}" todir="deploy" />

		<!-- <delete dir="${dir.stage.ra-unit}" /> -->
	</target>

	<target name="api-javadoc" description="Generates the javadoc">
		<delete dir="docs/api" />
		<mkdir dir="docs/api" />
		<javadoc destdir="docs/api" author="false" version="false" use="true" windowtitle="Parlay Java Resource API" maxmemory="512M">

			<group title="Slee specific packages" packages="org.mobicents.*" />
			<group title="Parlay common packages" packages="org.csapi:org.csapi.*" />

			<link offline="true" href="http://java.sun.com/j2se/1.4.2/docs/api/" packagelistLoc="${dir.root}/conf/javadoc/j2se" />

			<link offline="true" href="http://java.sun.com/j2ee/sdk_1.3/techdocs/api/" packagelistLoc="${dir.root}/conf/javadoc/j2ee" />

			<fileset dir="${dir.provider-api.src}" defaultexcludes="yes">
				<include name="org/csapi/**" />
				<exclude name="**/*Holder*" />
				<exclude name="**/*Helper*" />
				<exclude name="org/csapi/**/Ip*" />
				<exclude name="org/csapi/**/_Ip*" />
				<exclude name="org/csapi/**/Tp*Identifier.*" />
				<exclude name="org/csapi/**/TpApp*" />
				<exclude name="org/csapi/**/*Stub.*" />
				<exclude name="**/package.html" />
			</fileset>

			<fileset dir="${dir.provider-api.src}" defaultexcludes="yes">
				<include name="org/mobicents/**" />
				<exclude name="**/package.html" />
			</fileset>
			<classpath>
				<path refid="path.compile" />
				<pathelement location="${dir.ratype.classes}" />
			</classpath>

			<doctitle>
				<![CDATA[<h1>Parlay Java Resource API</h1>]]></doctitle>

	</javadoc>
</target>

<target name="unittests" description="Runs unit tests" depends="compile" unless="no.runtests">
	<junit fork="yes" showoutput="true" printSummary="yes" haltonfailure="true">
		<sysproperty key="jacorb.home" value="${dir.root}/conf/unittest" />
		<formatter type="xml" />
		<classpath>
			<path refid="path.unittests" />
		</classpath>
		<batchtest todir="${dir.test-reports}" haltonerror="true">
			<fileset dir="${dir.ra.src.test}">
				<include name="**/*Test.java" />
			</fileset>
		</batchtest>
	</junit>
</target>

<target name="pmd" description="Runs static code analyser" unless="no.pmd">
	<mkdir dir="${testreport.dir}" />
	<property name="pmd.output.file" value="${testreport.dir}/pmd_report.html">
	</property>
	<echo>Generating Pmd Report : ${pmd.output.file}</echo>
	<echo>
	</echo>
	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="classpath.pmd" />
	<pmd rulesetfiles="rulesets/basic.xml,
					rulesets/braces.xml,
					rulesets/imports.xml,
					rulesets/unusedcode.xml,
					rulesets/strings.xml,
					rulesets/strictexception.xml" failonerror="true" failOnRuleViolation="true" shortFilenames="true">
		<formatter type="html" toFile="${pmd.output.file}" />
		<fileset dir="${dir.ra.src.java}">
			<include name="**/*.java" />
		</fileset>
	</pmd>
</target>

<target name="coverage" description="Runs emma test coverage tool" depends="compile">
	<property name="emma.enabled" value="true" />
	<taskdef name="emma" classname="com.vladium.emma.emmaTask">
		<classpath>
			<path refid="path.compile" />
		</classpath>
	</taskdef>
	<taskdef name="emmajava" classname="com.vladium.emma.emmajavaTask">
		<classpath>
			<path refid="path.compile" />
		</classpath>
	</taskdef>
	<taskdef name="instr" classname="com.vladium.emma.instr.instrTask">
		<classpath>
			<path refid="path.compile" />
		</classpath>
	</taskdef>

	<emma enabled="${emma.enabled}">
		<instr instrpathref="path.emma.instr" destdir="${dir.instr.out}" metadatafile="${dir.coverage}/metadata.emma" merge="true">
		</instr>
	</emma>

	<junit fork="yes" showoutput="true" printSummary="yes" haltonfailure="true">
		<jvmarg value="-Demma.coverage.out.file=${dir.coverage}/coverage.emma" />
		<jvmarg value="-Demma.coverage.out.merge=true" />

		<sysproperty key="jacorb.home" value="${dir.root}/conf/unittest" />
		<formatter type="xml" />
		<classpath>
			<pathelement location="${dir.instr.out}" />
			<path refid="path.unittests" />
		</classpath>
		<batchtest todir="${dir.test-reports}" haltonerror="true">
			<fileset dir="${dir.ra.src.test}">
				<include name="**/*Test.java" />
			</fileset>
		</batchtest>
	</junit>

	<emma enabled="${emma.enabled}">
		<report sourcepath="${dir.ra.src.java}">
			<fileset dir="${dir.coverage}">
				<include name="*.emma" />
			</fileset>
			<txt outfile="${dir.coverage}/coverage.txt" />
			<html outfile="${dir.coverage}/coverage.html" />
		</report>
	</emma>
	<delete dir="${dir.instr.out}" />
</target>

<target name="release" depends="compile, build, api-javadoc" description="Creates zip file containing deliverables.">

	<mkdir dir="${dir.release}" />
	<mkdir dir="${dir.release}/deliverables" />
	<mkdir dir="${dir.release}/deliverables/conf" />
	<mkdir dir="${dir.release}/deliverables/deploy-mobicents" />
	<mkdir dir="${dir.release}/deliverables/deploy-mobicents/scripts" />
	<copy file="${dir.root}/conf/parlayra-orb.properties" todir="${dir.release}/deliverables/conf" />
	<copy file="${dir.root}/scripts/parlayresourceadapter-deploy.bsh" todir="${dir.release}/deliverables/deploy-mobicents/scripts" />
	<copy file="deploy/${jar.ra-unit}" todir="${dir.release}/deliverables/deploy-mobicents" />
	<copy file="deploy/${jar.ratype-unit}" todir="${dir.release}/deliverables/deploy-mobicents" />
	<copy todir="${dir.release}/deliverables">
		<fileset dir="docs" />
	</copy>
	<zip destfile="${dir.release}/${zip.release.name}" filesonly="false">
		<fileset dir="${dir.release}/deliverables">
			<include name="**/*" />
		</fileset>
	</zip>
</target>
</project>

