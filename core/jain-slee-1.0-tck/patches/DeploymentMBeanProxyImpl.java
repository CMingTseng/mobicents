package com.opencloud.sleetck.lib.testutils.jmx.impl;

import com.opencloud.sleetck.lib.TCKTestErrorException;
import com.opencloud.sleetck.lib.testutils.jmx.DeploymentMBeanProxy;
import com.opencloud.sleetck.lib.testutils.jmx.MBeanFacade;
import com.opencloud.sleetck.lib.testutils.jmx.impl.EmptyArrays;
import java.net.MalformedURLException;
import javax.management.InstanceNotFoundException;
import javax.management.MBeanException;
import javax.management.ObjectName;
import javax.management.ReflectionException;
import javax.management.RuntimeMBeanException;
import javax.slee.ComponentID;
import javax.slee.EventTypeID;
import javax.slee.InvalidStateException;
import javax.slee.SbbID;
import javax.slee.ServiceID;
import javax.slee.UnrecognizedComponentException;
import javax.slee.management.ComponentDescriptor;
import javax.slee.management.DependencyException;
import javax.slee.management.DeployableUnitDescriptor;
import javax.slee.management.DeployableUnitID;
import javax.slee.management.DeploymentException;
import javax.slee.management.ManagementException;
import javax.slee.management.UnrecognizedDeployableUnitException;
import javax.slee.profile.ProfileSpecificationID;
import javax.slee.resource.ResourceAdaptorID;
import javax.slee.resource.ResourceAdaptorTypeID;

/**
 * Defines a proxy implementation for javax.slee.management.DeploymentMBean
 *
 * In addition to the Exceptions declared by each proxied method, 
 * each proxy method can throw a TCKTestErrorException - for commication failures, 
 * and to wrap InstanceNotFoundExceptions and ReflectionExceptions generated by the 
 * MBeanServer.invoke() method, and unchecked Exceptions other than RuntimeExceptions. 
 * RuntimeExceptions generated by the MBean are rethrown by the proxy.
 * 
 * This class was generated by the ProxyGenerator tool - Tue Jan 20 14:34:07 NZDT 2004
 * Command line args: -a javax.slee.management.DeploymentMBean 
 */
public class DeploymentMBeanProxyImpl implements DeploymentMBeanProxy {

   public DeploymentMBeanProxyImpl(ObjectName objName, MBeanFacade facade) {
      this.objName = objName;
      this.facade = facade;
   }

   public DeployableUnitDescriptor getDescriptor(DeployableUnitID p0) throws NullPointerException, UnrecognizedDeployableUnitException, ManagementException, TCKTestErrorException { 
      try {
         return (DeployableUnitDescriptor)facade.invoke(objName,"getDescriptor",new Object[]{p0},new String[]{"javax.slee.management.DeployableUnitID"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedDeployableUnitException) throw (UnrecognizedDeployableUnitException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public ResourceAdaptorID[] getResourceAdaptors() throws ManagementException, TCKTestErrorException { 
      try {
         return (ResourceAdaptorID[])facade.invoke(objName,"getResourceAdaptors",EmptyArrays.EMPTY_OBJECT_ARRAY,EmptyArrays.EMPTY_STRING_ARRAY);
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public void uninstall(DeployableUnitID p0) throws NullPointerException, UnrecognizedDeployableUnitException, DependencyException, InvalidStateException, ManagementException, TCKTestErrorException { 
      try {
         facade.invoke(objName,"uninstall",new Object[]{p0},new String[]{"javax.slee.management.DeployableUnitID"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedDeployableUnitException) throw (UnrecognizedDeployableUnitException)enclosed;
         if(enclosed instanceof DependencyException) throw (DependencyException)enclosed;
         if(enclosed instanceof InvalidStateException) throw (InvalidStateException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public EventTypeID[] getEventTypes() throws ManagementException, TCKTestErrorException { 
      try {
         return (EventTypeID[])facade.invoke(objName,"getEventTypes",EmptyArrays.EMPTY_OBJECT_ARRAY,EmptyArrays.EMPTY_STRING_ARRAY);
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public ComponentDescriptor[] getDescriptors(ComponentID[] p0) throws NullPointerException, ManagementException, TCKTestErrorException { 
      try {
         return (ComponentDescriptor[])facade.invoke(objName,"getDescriptors",new Object[]{p0},new String[]{"[Ljavax.slee.ComponentID;"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public ComponentID[] getReferringComponents(ComponentID p0) throws NullPointerException, UnrecognizedComponentException, ManagementException, TCKTestErrorException { 
      try {
         return (ComponentID[])facade.invoke(objName,"getReferringComponents",new Object[]{p0},new String[]{"javax.slee.ComponentID"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedComponentException) throw (UnrecognizedComponentException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public DeployableUnitID install(String p0) throws NullPointerException, MalformedURLException, DeploymentException, ManagementException, TCKTestErrorException { 
      try {
         return (DeployableUnitID)facade.invoke(objName,"install",new Object[]{p0},new String[]{"java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof MalformedURLException) throw (MalformedURLException)enclosed;
         if(enclosed instanceof DeploymentException) throw (DeploymentException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public SbbID[] getSbbs() throws ManagementException, TCKTestErrorException { 
      try {
         return (SbbID[])facade.invoke(objName,"getSbbs",EmptyArrays.EMPTY_OBJECT_ARRAY,EmptyArrays.EMPTY_STRING_ARRAY);
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public DeployableUnitID[] getDeployableUnits() throws ManagementException, TCKTestErrorException { 
      try {
         return (DeployableUnitID[])facade.invoke(objName,"getDeployableUnits",EmptyArrays.EMPTY_OBJECT_ARRAY,EmptyArrays.EMPTY_STRING_ARRAY);
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public ProfileSpecificationID[] getProfileSpecifications() throws ManagementException, TCKTestErrorException { 
      try {
         return (ProfileSpecificationID[])facade.invoke(objName,"getProfileSpecifications",EmptyArrays.EMPTY_OBJECT_ARRAY,EmptyArrays.EMPTY_STRING_ARRAY);
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public ComponentDescriptor getDescriptor(ComponentID p0) throws NullPointerException, UnrecognizedComponentException, ManagementException, TCKTestErrorException { 
      try {
         return (ComponentDescriptor)facade.invoke(objName,"getDescriptor",new Object[]{p0},new String[]{"javax.slee.ComponentID"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedComponentException) throw (UnrecognizedComponentException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public ResourceAdaptorTypeID[] getResourceAdaptorTypes() throws ManagementException, TCKTestErrorException { 
      try {
         return (ResourceAdaptorTypeID[])facade.invoke(objName,"getResourceAdaptorTypes",EmptyArrays.EMPTY_OBJECT_ARRAY,EmptyArrays.EMPTY_STRING_ARRAY);
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public DeployableUnitID getDeployableUnit(String p0) throws NullPointerException, UnrecognizedDeployableUnitException, ManagementException, TCKTestErrorException { 
      try {
         return (DeployableUnitID)facade.invoke(objName,"getDeployableUnit",new Object[]{p0},new String[]{"java.lang.String"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof UnrecognizedDeployableUnitException) throw (UnrecognizedDeployableUnitException)enclosed;
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public ServiceID[] getServices() throws ManagementException, TCKTestErrorException { 
      try {
         return (ServiceID[])facade.invoke(objName,"getServices",EmptyArrays.EMPTY_OBJECT_ARRAY,EmptyArrays.EMPTY_STRING_ARRAY);
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public boolean isInstalled(DeployableUnitID p0) throws NullPointerException, ManagementException, TCKTestErrorException { 
      try {
         Boolean rValue = (Boolean)facade.invoke(objName,"isInstalled",new Object[]{p0},new String[]{"javax.slee.management.DeployableUnitID"});
         return rValue.booleanValue();
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public boolean isInstalled(ComponentID p0) throws NullPointerException, ManagementException, TCKTestErrorException { 
      try {
         Boolean rValue = (Boolean)facade.invoke(objName,"isInstalled",new Object[]{p0},new String[]{"javax.slee.ComponentID"});
         return rValue.booleanValue();
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   public DeployableUnitDescriptor[] getDescriptors(DeployableUnitID[] p0) throws NullPointerException, ManagementException, TCKTestErrorException { 
      try {
         return (DeployableUnitDescriptor[])facade.invoke(objName,"getDescriptors",new Object[]{p0},new String[]{"[Ljavax.slee.management.DeployableUnitID;"});
      } catch(InstanceNotFoundException ie) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",ie);
      } catch(ReflectionException re) {
         throw new TCKTestErrorException("Caught Exception while calling MBeanServer.invoke()",re);
      } catch(MBeanException e) {
         Exception enclosed = e.getTargetException();
         if(enclosed instanceof ManagementException) throw (ManagementException)enclosed;
         throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  } catch(RuntimeMBeanException e) {
	     Exception enclosed = e.getTargetException();
	     if(enclosed instanceof RuntimeException) throw (RuntimeException)enclosed;
	     throw new TCKTestErrorException("Caught undeclared exception",enclosed);
	  }
   }

   private ObjectName objName;
   private MBeanFacade facade;

}
